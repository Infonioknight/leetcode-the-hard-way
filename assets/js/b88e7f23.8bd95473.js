"use strict";(self.webpackChunkleetcode_the_hard_way=self.webpackChunkleetcode_the_hard_way||[]).push([[63144],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>d});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),m=p(n),h=o,d=m["".concat(l,".").concat(h)]||m[h]||c[h]||a;return n?r.createElement(d,i(i({ref:t},u),{},{components:n})):r.createElement(d,i({ref:t},u))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=h;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[m]="string"==typeof e?e:o,i[1]=s;for(var p=2;p<a;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"},35352:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>w,frontMatter:()=>a,metadata:()=>s,toc:()=>p});var r=n(87462),o=(n(67294),n(3905));const a={description:"Author: @wingkwong | https://leetcode.com/problems/power-of-heroes/",tags:["Array","Math","Sorting","Prefix Sum"]},i="2681 - Power of Heroes (Hard)",s={unversionedId:"2600-2699/power-of-heroes-hard",id:"2600-2699/power-of-heroes-hard",title:"2681 - Power of Heroes (Hard)",description:"Author: @wingkwong | https://leetcode.com/problems/power-of-heroes/",source:"@site/solutions/2600-2699/2681-power-of-heroes-hard.md",sourceDirName:"2600-2699",slug:"/2600-2699/power-of-heroes-hard",permalink:"/solutions/2600-2699/power-of-heroes-hard",draft:!1,editUrl:"https://github.com/wingkwong/leetcode-the-hard-way/tree/main/solutions/2600-2699/2681-power-of-heroes-hard.md",tags:[{label:"Array",permalink:"/solutions/tags/array"},{label:"Math",permalink:"/solutions/tags/math"},{label:"Sorting",permalink:"/solutions/tags/sorting"},{label:"Prefix Sum",permalink:"/solutions/tags/prefix-sum"}],version:"current",sidebarPosition:2681,frontMatter:{description:"Author: @wingkwong | https://leetcode.com/problems/power-of-heroes/",tags:["Array","Math","Sorting","Prefix Sum"]},sidebar:"tutorialSidebar",previous:{title:"2680 - Maximum OR (Medium)",permalink:"/solutions/2600-2699/maximum-or-medium"},next:{title:"2700 - 2799",permalink:"/solutions/category/2700---2799"}},l={},p=[{value:"Problem Link",id:"problem-link",level:2},{value:"Problem Statement",id:"problem-statement",level:2},{value:"Approach 1: Math",id:"approach-1-math",level:2}],u=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",t)},m=u("Tabs"),c=u("TabItem"),h=u("SolutionAuthor"),d={toc:p},f="wrapper";function w(e){let{components:t,...n}=e;return(0,o.kt)(f,(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"2681---power-of-heroes-hard"},"2681 - Power of Heroes (Hard)"),(0,o.kt)("h2",{id:"problem-link"},"Problem Link"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/power-of-heroes/"},"https://leetcode.com/problems/power-of-heroes/")),(0,o.kt)("h2",{id:"problem-statement"},"Problem Statement"),(0,o.kt)("p",null,"You are given a ",(0,o.kt)("strong",{parentName:"p"},"0-indexed")," integer array ",(0,o.kt)("inlineCode",{parentName:"p"},"nums")," representing the strength of some heroes. The",(0,o.kt)("strong",{parentName:"p"},"power")," of a group of heroes is defined as follows:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Let ",(0,o.kt)("inlineCode",{parentName:"li"},"i0"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"i1"),", ... ,",(0,o.kt)("inlineCode",{parentName:"li"},"ik")," be the indices of the heroes in a group. Then, the power of this group is ",(0,o.kt)("inlineCode",{parentName:"li"},"max(nums[i0], nums[i1], ... ,nums[ik])2 * min(nums[i0], nums[i1], ... ,nums[ik])"),".")),(0,o.kt)("p",null,"Return ",(0,o.kt)("em",{parentName:"p"},"the sum of the ",(0,o.kt)("strong",{parentName:"em"},"power")," of all ",(0,o.kt)("strong",{parentName:"em"},"non-empty")," groups of heroes possible.")," Since the sum could be very large, return it ",(0,o.kt)("strong",{parentName:"p"},"modulo")," ",(0,o.kt)("inlineCode",{parentName:"p"},"1e9 + 7"),"."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Example 1:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Input: nums = [2,1,4]\nOutput: 141\nExplanation: \n1st group: [2] has power = 22 * 2 = 8.\n2nd group: [1] has power = 12 * 1 = 1. \n3rd group: [4] has power = 42 * 4 = 64. \n4th group: [2,1] has power = 22 * 1 = 4. \n5th group: [2,4] has power = 42 * 2 = 32. \n6th group: [1,4] has power = 42 * 1 = 16. \n7th group: [2,1,4] has power = 42 * 1 = 16. \nThe sum of powers of all groups is 8 + 1 + 64 + 4 + 32 + 16 + 16 = 141.\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Example 2:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Input: nums = [1,1,1]\nOutput: 7\nExplanation: A total of 7 groups are possible, and the power of each group will be 1. Therefore, the sum of the powers of all groups is 7.\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Constraints:")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"1 <= nums.length <= 10^5")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"1 <= nums[i] <= 10^9"))),(0,o.kt)("h2",{id:"approach-1-math"},"Approach 1: Math"),(0,o.kt)(m,{mdxType:"Tabs"},(0,o.kt)(c,{value:"py",label:"Python",mdxType:"TabItem"},(0,o.kt)(h,{name:"@wingkwong",mdxType:"SolutionAuthor"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-py"},"class Solution:\n    def sumOfPower(self, nums: List[int]) -> int:\n        M = 10 ** 9 + 7\n        # sort the input so that we can easily find the min and max\n        # besides, sorting won't affect the result since original position doesn't matter\n        nums.sort()\n        res, s = 0, 0\n        for x in nums:\n            # if we just include one element [x], \n            # it is easy to see it contributes x * x * x\n            # if we include a pair [x, y] where x < y, \n            # it contributes x * y * y \n            # if we include some numbers between x and y, i.e. [x, a, b, c, y] where x < a, b, c < y\n            # the power is also x * y * y \n            # the number of subsets will be 2 ^ (j - i + 1)\n            # e.g. [x, a, y], [x, a, b, y], [x, a, b, c, y], [x, b, y], [x, b, c] ...\n            # hence, for each pair, the power will be x * y * y * 2 ^ (j - i + 1)\n            # combining above two cases, for the index j, we got\n            # (nums[j] * nums[j] * nums[j]) + (nums[j] * nums[j]) * \\sum_{i = 0} ^ {j - 1} (nums[j] * 2 ^ (j - i + 1))\n            # so how to calculate \\sum_{i = 0} ^ {j - 1} (nums[j] * 2 ^ (j - i + 1)) in a linear time?\n            # let F(i) = \\sum_{i = 0} ^ {j - 1} (nums[j] * 2 ^ (j - i + 1))\n            # rewrite the above formula, then we will see that F(i + 1) would be 2 * F(i) + nums[i]\n            # if you have no idea on above mathematic explanation, \n            # try some cases and you will see the pattern\n            # nums = [1, 2, 3, 4]\n            # 1 * 1 * ((0) + 1)\n            # 2 * 2 * ((1) * 2 ^ 0 + 2)\n            # 3 * 3 * ((1 * 2 ^ 1 + 2) * 2 ^ 0 + 3)\n            # 4 * 4 * ((1 * 2 ^ 2 + 2 * 2 ^ 1 + 3) * 2 ^ 0 + 4)\n            # ...\n            # x * x * (prev_s * 2 + x)\n            res += (x + s) * (x * x) \n            res %= M\n            s = (s * 2 + x) % M\n        return res\n")))))}w.isMDXComponent=!0}}]);