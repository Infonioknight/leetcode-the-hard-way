"use strict";(self.webpackChunkleetcode_the_hard_way=self.webpackChunkleetcode_the_hard_way||[]).push([[42459],{3905:(e,n,t)=>{t.d(n,{Zo:()=>m,kt:()=>b});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function u(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var i=r.createContext({}),s=function(e){var n=r.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},m=function(e){var n=s(e.components);return r.createElement(i.Provider,{value:n},e.children)},p="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,m=u(e,["components","mdxType","originalType","parentName"]),p=s(t),d=a,b=p["".concat(i,".").concat(d)]||p[d]||c[d]||o;return t?r.createElement(b,l(l({ref:n},m),{},{components:t})):r.createElement(b,l({ref:n},m))}));function b(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,l=new Array(o);l[0]=d;var u={};for(var i in n)hasOwnProperty.call(n,i)&&(u[i]=n[i]);u.originalType=e,u[p]="string"==typeof e?e:a,l[1]=u;for(var s=2;s<o;s++)l[s]=t[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},68383:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>u,toc:()=>s});var r=t(87462),a=(t(67294),t(3905));const o={description:"Author: @wingkwong, @vigneshshiv, @radojicic23 | https://leetcode.com/problems/single-number/"},l="0136 - Single Number (Easy)",u={unversionedId:"0100-0199/single-number-easy",id:"0100-0199/single-number-easy",title:"0136 - Single Number (Easy)",description:"Author: @wingkwong, @vigneshshiv, @radojicic23 | https://leetcode.com/problems/single-number/",source:"@site/solutions/0100-0199/0136-single-number-easy.md",sourceDirName:"0100-0199",slug:"/0100-0199/single-number-easy",permalink:"/solutions/0100-0199/single-number-easy",draft:!1,editUrl:"https://github.com/wingkwong/leetcode-the-hard-way/tree/main/solutions/0100-0199/0136-single-number-easy.md",tags:[],version:"current",sidebarPosition:136,frontMatter:{description:"Author: @wingkwong, @vigneshshiv, @radojicic23 | https://leetcode.com/problems/single-number/"},sidebar:"tutorialSidebar",previous:{title:"0134 - Gas Station (Medium)",permalink:"/solutions/0100-0199/gas-station-medium"},next:{title:"0138 - Copy List with Random Pointer (Medium)",permalink:"/solutions/0100-0199/copy-list-with-random-pointer-medium"}},i={},s=[{value:"Problem Link",id:"problem-link",level:2},{value:"Problem Statement",id:"problem-statement",level:2},{value:"Approach 1: Bit Manipulation",id:"approach-1-bit-manipulation",level:2},{value:"Approach 2: Math",id:"approach-2-math",level:2}],m=e=>function(n){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.kt)("div",n)},p=m("Tabs"),c=m("TabItem"),d=m("SolutionAuthor"),b={toc:s},f="wrapper";function h(e){let{components:n,...t}=e;return(0,a.kt)(f,(0,r.Z)({},b,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"0136---single-number-easy"},"0136 - Single Number (Easy)"),(0,a.kt)("h2",{id:"problem-link"},"Problem Link"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/single-number/"},"https://leetcode.com/problems/single-number/")),(0,a.kt)("h2",{id:"problem-statement"},"Problem Statement"),(0,a.kt)("p",null,"Given a ",(0,a.kt)("strong",{parentName:"p"},"non-empty")," array of integers ",(0,a.kt)("inlineCode",{parentName:"p"},"nums"),", every element appears ",(0,a.kt)("em",{parentName:"p"},"twice")," except for one. Find that single one."),(0,a.kt)("p",null,"You must implement a solution with a linear runtime complexity and use only constant extra space."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Example 1:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Input: nums = [2,2,1]\nOutput: 1\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Example 2:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Input: nums = [4,1,2,1,2]\nOutput: 4\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Example 3:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Input: nums = [1]\nOutput: 1\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Constraints:")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"1 <= nums.length <= 3 * 10^4")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"-3 * 10^4 <= nums[i] <= 3 * 10^4")),(0,a.kt)("li",{parentName:"ul"},"Each element in the array appears twice except for one element which appears only once.")),(0,a.kt)("h2",{id:"approach-1-bit-manipulation"},"Approach 1: Bit Manipulation"),(0,a.kt)("admonition",{title:"Prerequisite",type:"info"},(0,a.kt)("p",{parentName:"admonition"},"You should understand properties of XOR.")),(0,a.kt)("p",null,"Let's have a quick review."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"If we take XOR of a number and a zero, the result will be that number, i.e. $$a \\oplus 0 = a$$."),(0,a.kt)("li",{parentName:"ul"},"If we take XOR of two same numbers, it will return 0, i.e. $$a \\oplus a = 0$$."),(0,a.kt)("li",{parentName:"ul"},"If we take XOR of multiple numbers, the order doesn't affect the result, i.e. $$a \\oplus b \\oplus c = a \\oplus c \\oplus b$$.")),(0,a.kt)("p",null,"Therefore, if we take XOR of all numbers, what's left would be that single number as every element that appears twice would be cancelled out. For example, $$nums = ","[4,1,2,1,2]","$$, we can reorder it like $$","[1,1,2,2,4]","$$, and we got $$(1 \\oplus 1) \\oplus (2 \\oplus 2) \\oplus 4 = 4$$."),(0,a.kt)(p,{mdxType:"Tabs"},(0,a.kt)(c,{value:"cpp",label:"C++",mdxType:"TabItem"},(0,a.kt)(d,{name:"@wingkwong",mdxType:"SolutionAuthor"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    int singleNumber(vector<int>& nums) {\n        int ans = 0;\n        for (auto x : nums) ans ^= x;\n        return ans;\n    }\n};\n"))),(0,a.kt)(c,{value:"py",label:"Python",mdxType:"TabItem"},(0,a.kt)(d,{name:"@wingkwong",mdxType:"SolutionAuthor"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-py"},"class Solution:\n    def singleNumber(self, nums: List[int]) -> int:\n        return reduce(lambda x, y: x ^ y, nums)\n"))),(0,a.kt)(c,{value:"java",label:"Java",mdxType:"TabItem"},(0,a.kt)(d,{name:"@vigneshshiv",mdxType:"SolutionAuthor"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"// Time complexity: O(n), where n - # of elements in the array\n// Space complexity: O(1)\nclass Solution {\n    /**\n     * Given a list of integers where all integers occur even times, expect one which occur odd times\n     *\n     * Solution - XOR of any two same numbers will always be 0, and XOR of any number with 0 is the number itself.\n     */\n    public int singleNumber(int[] nums) {\n        int x = 0;\n        for (int num : nums) {\n            x ^= num;\n        }\n        return x;\n    }\n}\n")))),(0,a.kt)("h2",{id:"approach-2-math"},"Approach 2: Math"),(0,a.kt)("p",null,"$$2 * sumOfSet - (SumOfNumbers) = answer$$"),(0,a.kt)("p",null,"For example, $$nums = ","[4,1,2,1,2]","$$, $$sumOfSet$$ is $$1 + 2 + 4 = 7$$ and $$sumOfNumbers$$is $$1 + 1 + 2 + 2 + 4 = 10$$. Then the answer is $$2 *7 - 10 = 4$$."),(0,a.kt)(p,{mdxType:"Tabs"},(0,a.kt)(c,{value:"cpp",label:"C++",mdxType:"TabItem"},(0,a.kt)(d,{name:"@wingkwong",mdxType:"SolutionAuthor"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    int singleNumber(vector<int>& nums) {\n        set<int> s;\n        int sumOfSet = 0, sumOfNumbers = 0;\n        for (auto x : nums) {\n            if (!s.count(x)) {\n                s.insert(x);\n                sumOfSet += x;\n            }\n            sumOfNumbers += x;\n        }\n        return 2 * sumOfSet - sumOfNumbers;\n    }\n};\n"))),(0,a.kt)(c,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,a.kt)(d,{name:"@radojicic23",mdxType:"SolutionAuthor"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"/**\n * @param {number[]} nums\n * @return {number}\n */\nvar singleNumber = function(nums) {\n    let hashSet = new Set();\n    let sumOfSet = 0;\n    let sumOfNums = 0;\n    for (let num of nums) {\n        if (!hashSet.has(num)) {\n            hashSet.add(num);\n            sumOfSet += num;\n        }\n        sumOfNums += num;\n    }\n    return 2 * sumOfSet - sumOfNums;\n};\n"))),(0,a.kt)(c,{value:"py",label:"Python",mdxType:"TabItem"},(0,a.kt)(d,{name:"@radojicic23",mdxType:"SolutionAuthor"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-py"},"class Solution:\n    def singleNumber(self, nums: List[int]) -> int:\n        hash_set = set()\n        sum_of_nums = 0\n        sum_of_set = 0\n        for n in nums:\n            if n not in hash_set:\n                hash_set.add(n)\n                sum_of_set += n\n            sum_of_nums += n\n        return 2 * sum_of_set - sum_of_nums\n")))))}h.isMDXComponent=!0}}]);