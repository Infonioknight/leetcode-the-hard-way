"use strict";(self.webpackChunkleetcode_the_hard_way=self.webpackChunkleetcode_the_hard_way||[]).push([[406],{3905:(e,n,t)=>{t.d(n,{Zo:()=>l,kt:()=>b});var o=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function u(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var m=o.createContext({}),p=function(e){var n=o.useContext(m),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},l=function(e){var n=p(e.components);return o.createElement(m.Provider,{value:n},e.children)},s="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},d=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,m=e.parentName,l=u(e,["components","mdxType","originalType","parentName"]),s=p(t),d=r,b=s["".concat(m,".").concat(d)]||s[d]||c[d]||a;return t?o.createElement(b,i(i({ref:n},l),{},{components:t})):o.createElement(b,i({ref:n},l))}));function b(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,i=new Array(a);i[0]=d;var u={};for(var m in n)hasOwnProperty.call(n,m)&&(u[m]=n[m]);u.originalType=e,u[s]="string"==typeof e?e:r,i[1]=u;for(var p=2;p<a;p++)i[p]=t[p];return o.createElement.apply(null,i)}return o.createElement.apply(null,t)}d.displayName="MDXCreateElement"},24996:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>m,contentTitle:()=>i,default:()=>b,frontMatter:()=>a,metadata:()=>u,toc:()=>p});var o=t(87462),r=(t(67294),t(3905));const a={description:"Author: @wingkwong | https://leetcode.com/problems/count-operations-to-obtain-zero/"},i="2169 - Count Operations to Obtain Zero (Easy)",u={unversionedId:"2100-2199/count-operations-to-obtain-zero-easy",id:"2100-2199/count-operations-to-obtain-zero-easy",title:"2169 - Count Operations to Obtain Zero (Easy)",description:"Author: @wingkwong | https://leetcode.com/problems/count-operations-to-obtain-zero/",source:"@site/solutions/2100-2199/2169-count-operations-to-obtain-zero-easy.md",sourceDirName:"2100-2199",slug:"/2100-2199/count-operations-to-obtain-zero-easy",permalink:"/solutions/2100-2199/count-operations-to-obtain-zero-easy",draft:!1,editUrl:"https://github.com/wingkwong/leetcode-the-hard-way/tree/main/solutions/2100-2199/2169-count-operations-to-obtain-zero-easy.md",tags:[],version:"current",sidebarPosition:2169,frontMatter:{description:"Author: @wingkwong | https://leetcode.com/problems/count-operations-to-obtain-zero/"},sidebar:"tutorialSidebar",previous:{title:"2167 - Minimum Time to Remove All Cars Containing Illegal Goods (Hard)",permalink:"/solutions/2100-2199/minimum-time-to-remove-all-cars-containing-illegal-goods-hard"},next:{title:"2170 - Minimum Operations to Make the Array Alternating (Medium)",permalink:"/solutions/2100-2199/minimum-operations-to-make-the-array-alternating-medium"}},m={},p=[{value:"Problem Link",id:"problem-link",level:2},{value:"Problem Statement",id:"problem-statement",level:2},{value:"Approach 1: Simulation",id:"approach-1-simulation",level:2}],l=(s="SolutionAuthor",function(e){return console.warn("Component "+s+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",e)});var s;const c={toc:p},d="wrapper";function b(e){let{components:n,...t}=e;return(0,r.kt)(d,(0,o.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"2169---count-operations-to-obtain-zero-easy"},"2169 - Count Operations to Obtain Zero (Easy)"),(0,r.kt)("h2",{id:"problem-link"},"Problem Link"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/count-operations-to-obtain-zero/"},"https://leetcode.com/problems/count-operations-to-obtain-zero/")),(0,r.kt)("h2",{id:"problem-statement"},"Problem Statement"),(0,r.kt)("p",null,"You are given two ",(0,r.kt)("strong",{parentName:"p"},"non-negative")," integers ",(0,r.kt)("inlineCode",{parentName:"p"},"num1")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"num2"),"."),(0,r.kt)("p",null,"In one ",(0,r.kt)("strong",{parentName:"p"},"operation"),", if ",(0,r.kt)("inlineCode",{parentName:"p"},"num1 >= num2"),", you must subtract ",(0,r.kt)("inlineCode",{parentName:"p"},"num2")," from ",(0,r.kt)("inlineCode",{parentName:"p"},"num1"),", otherwise subtract ",(0,r.kt)("inlineCode",{parentName:"p"},"num1")," from ",(0,r.kt)("inlineCode",{parentName:"p"},"num2"),"."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"For example, if ",(0,r.kt)("inlineCode",{parentName:"li"},"num1 = 5")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"num2 = 4"),", subtract ",(0,r.kt)("inlineCode",{parentName:"li"},"num2")," from ",(0,r.kt)("inlineCode",{parentName:"li"},"num1"),", thus obtaining ",(0,r.kt)("inlineCode",{parentName:"li"},"num1 = 1")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"num2 = 4"),". However, if ",(0,r.kt)("inlineCode",{parentName:"li"},"num1 = 4")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"num2 = 5"),", after one operation, ",(0,r.kt)("inlineCode",{parentName:"li"},"num1 = 4")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"num2 = 1"),".")),(0,r.kt)("p",null,"Return ",(0,r.kt)("em",{parentName:"p"},"the ",(0,r.kt)("strong",{parentName:"em"},"number of operations")," required to make either")," ",(0,r.kt)("inlineCode",{parentName:"p"},"num1 = 0")," ",(0,r.kt)("em",{parentName:"p"},"or")," ",(0,r.kt)("inlineCode",{parentName:"p"},"num2 = 0"),"."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example 1:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Input: num1 = 2, num2 = 3\nOutput: 3\nExplanation: \n- Operation 1: num1 = 2, num2 = 3. Since num1 < num2, we subtract num1 from num2 and get num1 = 2, num2 = 3 - 2 = 1.\n- Operation 2: num1 = 2, num2 = 1. Since num1 > num2, we subtract num2 from num1.\n- Operation 3: num1 = 1, num2 = 1. Since num1 == num2, we subtract num2 from num1.\nNow num1 = 0 and num2 = 1. Since num1 == 0, we do not need to perform any further operations.\nSo the total number of operations required is 3.\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example 2:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Input: num1 = 10, num2 = 10\nOutput: 1\nExplanation: \n- Operation 1: num1 = 10, num2 = 10. Since num1 == num2, we subtract num2 from num1 and get num1 = 10 - 10 = 0.\nNow num1 = 0 and num2 = 10. Since num1 == 0, we are done.\nSo the total number of operations required is 1. \n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Constraints:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"0 <= num1, num2 <= 10^5"))),(0,r.kt)("h2",{id:"approach-1-simulation"},"Approach 1: Simulation"),(0,r.kt)("p",null,"Just do what it says. If num1 >= num2, we subtract num2 from num1, otherwise subtract num1 from num2. Increase answer by 1 in each iteration."),(0,r.kt)(l,{name:"@wingkwong",mdxType:"SolutionAuthor"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    int countOperations(int num1, int num2) {\n        int ans = 0;\n        while (num1 != 0 && num2 != 0) {\n            if (num1 >= num2) num1 -= num2;\n            else num2 -= num1;\n            ans += 1;\n        }\n        return ans;\n    }\n};\n")))}b.isMDXComponent=!0}}]);