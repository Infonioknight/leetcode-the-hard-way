"use strict";(self.webpackChunkleetcode_the_hard_way=self.webpackChunkleetcode_the_hard_way||[]).push([[90573],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function m(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=a.createContext({}),l=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):m(m({},t),e)),n},p=function(e){var t=l(e.components);return a.createElement(i.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},k=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=l(n),k=r,d=u["".concat(i,".").concat(k)]||u[k]||c[k]||o;return n?a.createElement(d,m(m({ref:t},p),{},{components:n})):a.createElement(d,m({ref:t},p))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,m=new Array(o);m[0]=k;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s[u]="string"==typeof e?e:r,m[1]=s;for(var l=2;l<o;l++)m[l]=n[l];return a.createElement.apply(null,m)}return a.createElement.apply(null,n)}k.displayName="MDXCreateElement"},54892:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>m,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var a=n(87462),r=(n(67294),n(3905));const o={description:"Author: @wingkwong | https://leetcode.com/problems/make-array-zero-by-subtracting-equal-amounts"},m="2357 - Make Array Zero by Subtracting Equal Amounts (Easy)",s={unversionedId:"2300-2399/make-array-zero-by-subtracting-equal-amounts-easy",id:"2300-2399/make-array-zero-by-subtracting-equal-amounts-easy",title:"2357 - Make Array Zero by Subtracting Equal Amounts (Easy)",description:"Author: @wingkwong | https://leetcode.com/problems/make-array-zero-by-subtracting-equal-amounts",source:"@site/solutions/2300-2399/2357-make-array-zero-by-subtracting-equal-amounts-easy.md",sourceDirName:"2300-2399",slug:"/2300-2399/make-array-zero-by-subtracting-equal-amounts-easy",permalink:"/solutions/2300-2399/make-array-zero-by-subtracting-equal-amounts-easy",draft:!1,editUrl:"https://github.com/wingkwong/leetcode-the-hard-way/tree/main/solutions/2300-2399/2357-make-array-zero-by-subtracting-equal-amounts-easy.md",tags:[],version:"current",sidebarPosition:2357,frontMatter:{description:"Author: @wingkwong | https://leetcode.com/problems/make-array-zero-by-subtracting-equal-amounts"},sidebar:"tutorialSidebar",previous:{title:"2354 - Number of Excellent Pairs (Hard)",permalink:"/solutions/2300-2399/number-of-excellent-pairs-hard"},next:{title:"2358 - Maximum Number of Groups Entering a Competition (Medium)",permalink:"/solutions/2300-2399/maximum-number-of-groups-entering-a-competition-medium"}},i={},l=[{value:"Problem Link",id:"problem-link",level:2},{value:"Problem Statement",id:"problem-statement",level:2},{value:"Approach: Counting",id:"approach-counting",level:2}],p=(u="SolutionAuthor",function(e){return console.warn("Component "+u+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",e)});var u;const c={toc:l},k="wrapper";function d(e){let{components:t,...n}=e;return(0,r.kt)(k,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"2357---make-array-zero-by-subtracting-equal-amounts-easy"},"2357 - Make Array Zero by Subtracting Equal Amounts (Easy)"),(0,r.kt)("h2",{id:"problem-link"},"Problem Link"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/make-array-zero-by-subtracting-equal-amounts"},"https://leetcode.com/problems/make-array-zero-by-subtracting-equal-amounts")),(0,r.kt)("h2",{id:"problem-statement"},"Problem Statement"),(0,r.kt)("p",null,"You are given a non-negative integer array ",(0,r.kt)("inlineCode",{parentName:"p"},"nums"),". In one operation, you must:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Choose a positive integer ",(0,r.kt)("inlineCode",{parentName:"li"},"x")," such that ",(0,r.kt)("inlineCode",{parentName:"li"},"x")," is less than or equal to the ",(0,r.kt)("strong",{parentName:"li"},"smallest non-zero")," element in ",(0,r.kt)("inlineCode",{parentName:"li"},"nums"),"."),(0,r.kt)("li",{parentName:"ul"},"Subtract ",(0,r.kt)("inlineCode",{parentName:"li"},"x")," from every ",(0,r.kt)("strong",{parentName:"li"},"positive")," element in ",(0,r.kt)("inlineCode",{parentName:"li"},"nums"),".")),(0,r.kt)("p",null,"Return ",(0,r.kt)("em",{parentName:"p"},"the ",(0,r.kt)("strong",{parentName:"em"},"minimum")," number of operations to make every element in")," ",(0,r.kt)("inlineCode",{parentName:"p"},"nums")," ",(0,r.kt)("em",{parentName:"p"},"equal to")," ",(0,r.kt)("inlineCode",{parentName:"p"},"0"),"."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example 1:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Input: nums = [1,5,0,3,5]\nOutput: 3\nExplanation:\nIn the first operation, choose x = 1. Now, nums = [0,4,0,2,4].\nIn the second operation, choose x = 2. Now, nums = [0,2,0,0,2].\nIn the third operation, choose x = 2. Now, nums = [0,0,0,0,0].\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example 2:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Input: nums = [0]\nOutput: 0\nExplanation: Each element in nums is already 0 so no operations are needed.\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Constraints:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"1 <= nums.length <= 100")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"0 <= nums[i] <= 100"))),(0,r.kt)("h2",{id:"approach-counting"},"Approach: Counting"),(0,r.kt)("p",null,"Observations:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"We can remove all numbers ",(0,r.kt)("inlineCode",{parentName:"li"},"x")," in one go"),(0,r.kt)("li",{parentName:"ul"},"We need ",(0,r.kt)("span",{parentName:"li",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mi",{parentName:"mrow"},"n")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"n")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.4306em"}}),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"n")))))," moves to remove ",(0,r.kt)("span",{parentName:"li",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mi",{parentName:"mrow"},"n")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"n")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.4306em"}}),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"n")))))," distinct numbers "),(0,r.kt)("li",{parentName:"ul"},"Hence, the problem is to find out the number of different positive numbers")),(0,r.kt)(p,{name:"@wingkwong",mdxType:"SolutionAuthor"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},"func minimumOperations(nums []int) int {\n    s := make(map[int]bool)\n    for _, v := range nums {\n        if v > 0 { \n            s[v] = true\n        }\n    }\n    return len(s)\n}\n")))}d.isMDXComponent=!0}}]);