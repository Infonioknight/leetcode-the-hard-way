"use strict";(self.webpackChunkleetcode_the_hard_way=self.webpackChunkleetcode_the_hard_way||[]).push([[93855],{25802:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>a,toc:()=>c});var t=n(85893),r=n(11151);const i={description:"Author: @wingkwong | https://leetcode.com/problems/sum-of-scores-of-built-strings/"},o="2223 - Sum of Scores of Built Strings (Hard)",a={id:"2200-2299/sum-of-scores-of-built-strings-hard",title:"2223 - Sum of Scores of Built Strings (Hard)",description:"Author: @wingkwong | https://leetcode.com/problems/sum-of-scores-of-built-strings/",source:"@site/solutions/2200-2299/2223-sum-of-scores-of-built-strings-hard.md",sourceDirName:"2200-2299",slug:"/2200-2299/sum-of-scores-of-built-strings-hard",permalink:"/solutions/2200-2299/sum-of-scores-of-built-strings-hard",draft:!1,unlisted:!1,editUrl:"https://github.com/wingkwong/leetcode-the-hard-way/tree/main/solutions/2200-2299/2223-sum-of-scores-of-built-strings-hard.md",tags:[],version:"current",sidebarPosition:2223,frontMatter:{description:"Author: @wingkwong | https://leetcode.com/problems/sum-of-scores-of-built-strings/"},sidebar:"tutorialSidebar",previous:{title:"2218 - Maximum Value of K Coins From Piles (Hard)",permalink:"/solutions/2200-2299/maximum-value-of-k-coins-from-piles-hard"},next:{title:"2224 - Minimum Number of Operations to Convert Time (Easy)",permalink:"/solutions/2200-2299/minimum-number-of-operations-to-convert-time-easy"}},l={},c=[{value:"Problem Link",id:"problem-link",level:2},{value:"Problem Statement",id:"problem-statement",level:2},{value:"Approach 1: Z Algorithm",id:"approach-1-z-algorithm",level:2}];function h(e){const s={a:"a",annotation:"annotation",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",math:"math",mi:"mi",mrow:"mrow",msub:"msub",p:"p",pre:"pre",semantics:"semantics",span:"span",strong:"strong",ul:"ul",...(0,r.a)(),...e.components},{SolutionAuthor:n}=s;return n||function(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("SolutionAuthor",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"2223---sum-of-scores-of-built-strings-hard",children:"2223 - Sum of Scores of Built Strings (Hard)"})}),"\n",(0,t.jsx)(s.h2,{id:"problem-link",children:"Problem Link"}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.a,{href:"https://leetcode.com/problems/sum-of-scores-of-built-strings/",children:"https://leetcode.com/problems/sum-of-scores-of-built-strings/"})}),"\n",(0,t.jsx)(s.h2,{id:"problem-statement",children:"Problem Statement"}),"\n",(0,t.jsxs)(s.p,{children:["You are ",(0,t.jsx)(s.strong,{children:"building"})," a string ",(0,t.jsx)(s.code,{children:"s"})," of length ",(0,t.jsx)(s.code,{children:"n"})," ",(0,t.jsx)(s.strong,{children:"one"})," character at a time, ",(0,t.jsx)(s.strong,{children:"prepending"})," each new character to the ",(0,t.jsx)(s.strong,{children:"front"})," of the string. The strings are labeled from ",(0,t.jsx)(s.code,{children:"1"})," to ",(0,t.jsx)(s.code,{children:"n"}),", where the string with length ",(0,t.jsx)(s.code,{children:"i"})," is labeled ",(0,t.jsx)(s.code,{children:"si"}),"."]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["For example, for ",(0,t.jsx)(s.code,{children:'s = "abaca"'}),", ",(0,t.jsx)(s.code,{children:'s1 == "a"'}),", ",(0,t.jsx)(s.code,{children:'s2 == "ca"'}),", ",(0,t.jsx)(s.code,{children:'s3 == "aca"'}),", etc."]}),"\n"]}),"\n",(0,t.jsxs)(s.p,{children:["The ",(0,t.jsx)(s.strong,{children:"score"})," of ",(0,t.jsx)(s.code,{children:"si"})," is the length of the ",(0,t.jsx)(s.strong,{children:"longest common prefix"})," between ",(0,t.jsx)(s.code,{children:"si"})," and ",(0,t.jsx)(s.code,{children:"sn"})," (Note that ",(0,t.jsx)(s.code,{children:"s == sn"}),")."]}),"\n",(0,t.jsxs)(s.p,{children:["Given the final string ",(0,t.jsx)(s.code,{children:"s"}),", return ",(0,t.jsxs)(s.em,{children:["the ",(0,t.jsx)(s.strong,{children:"sum"})," of the ",(0,t.jsx)(s.strong,{children:"score"})," of every"]})," ",(0,t.jsx)(s.code,{children:"si"}),"."]}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"Example 1:"})}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{children:'Input: s = "babab"\nOutput: 9\nExplanation:\nFor s1 == "b", the longest common prefix is "b" which has a score of 1.\nFor s2 == "ab", there is no common prefix so the score is 0.\nFor s3 == "bab", the longest common prefix is "bab" which has a score of 3.\nFor s4 == "abab", there is no common prefix so the score is 0.\nFor s5 == "babab", the longest common prefix is "babab" which has a score of 5.\nThe sum of the scores is 1 + 0 + 3 + 0 + 5 = 9, so we return 9.\n'})}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"Example 2:"})}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{children:'Input: s = "azbazbzaz"\nOutput: 14\nExplanation: \nFor s2 == "az", the longest common prefix is "az" which has a score of 2.\nFor s6 == "azbzaz", the longest common prefix is "azb" which has a score of 3.\nFor s9 == "azbazbzaz", the longest common prefix is "azbazbzaz" which has a score of 9.\nFor all other si, the score is 0.\nThe sum of the scores is 2 + 3 + 9 = 14, so we return 14.\n'})}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"Constraints:"})}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.code,{children:"1 <= s.length <= 10^5"})}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"s"})," consists of lowercase English letters."]}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"approach-1-z-algorithm",children:"Approach 1: Z Algorithm"}),"\n",(0,t.jsxs)(s.p,{children:["The sum of the score of every ",(0,t.jsxs)(s.span,{className:"katex",children:[(0,t.jsx)(s.span,{className:"katex-mathml",children:(0,t.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,t.jsxs)(s.semantics,{children:[(0,t.jsx)(s.mrow,{children:(0,t.jsxs)(s.msub,{children:[(0,t.jsx)(s.mi,{children:"s"}),(0,t.jsx)(s.mi,{children:"i"})]})}),(0,t.jsx)(s.annotation,{encoding:"application/x-tex",children:"s_i"})]})})}),(0,t.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,t.jsxs)(s.span,{className:"base",children:[(0,t.jsx)(s.span,{className:"strut",style:{height:"0.5806em",verticalAlign:"-0.15em"}}),(0,t.jsxs)(s.span,{className:"mord",children:[(0,t.jsx)(s.span,{className:"mord mathnormal",children:"s"}),(0,t.jsx)(s.span,{className:"msupsub",children:(0,t.jsxs)(s.span,{className:"vlist-t vlist-t2",children:[(0,t.jsxs)(s.span,{className:"vlist-r",children:[(0,t.jsx)(s.span,{className:"vlist",style:{height:"0.3117em"},children:(0,t.jsxs)(s.span,{style:{top:"-2.55em",marginLeft:"0em",marginRight:"0.05em"},children:[(0,t.jsx)(s.span,{className:"pstrut",style:{height:"2.7em"}}),(0,t.jsx)(s.span,{className:"sizing reset-size6 size3 mtight",children:(0,t.jsx)(s.span,{className:"mord mathnormal mtight",children:"i"})})]})}),(0,t.jsx)(s.span,{className:"vlist-s",children:"\u200b"})]}),(0,t.jsx)(s.span,{className:"vlist-r",children:(0,t.jsx)(s.span,{className:"vlist",style:{height:"0.15em"},children:(0,t.jsx)(s.span,{})})})]})})]})]})})]})," would be the sum of the values in ",(0,t.jsxs)(s.span,{className:"katex",children:[(0,t.jsx)(s.span,{className:"katex-mathml",children:(0,t.jsx)(s.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,t.jsxs)(s.semantics,{children:[(0,t.jsx)(s.mrow,{children:(0,t.jsx)(s.mi,{children:"Z"})}),(0,t.jsx)(s.annotation,{encoding:"application/x-tex",children:"Z"})]})})}),(0,t.jsx)(s.span,{className:"katex-html","aria-hidden":"true",children:(0,t.jsxs)(s.span,{className:"base",children:[(0,t.jsx)(s.span,{className:"strut",style:{height:"0.6833em"}}),(0,t.jsx)(s.span,{className:"mord mathnormal",style:{marginRight:"0.07153em"},children:"Z"})]})})]})," array."]}),"\n",(0,t.jsx)(n,{name:"@wingkwong"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-cpp",children:"class Solution {\npublic:\n    template <typename T>\n    vector<int> z_function(int n, const T &s) {\n      vector<int> z(n, n);\n      int l = 0, r = 0;\n      for (int i = 1; i < n; i++) {\n        z[i] = (i > r ? 0 : min(r - i + 1, z[i - l]));\n        while (i + z[i] < n && s[z[i]] == s[i + z[i]]) {\n          z[i]++;\n        }\n        if (i + z[i] - 1 > r) {\n          l = i;\n          r = i + z[i] - 1;\n        }\n      }\n      return z;\n    }\n\n    template <typename T>\n    vector<int> z_function(const T &s) {\n      return z_function((int)s.size(), s);\n    }\n\n    long long sumScores(string s) {\n        long long ans = 0;\n        vector<int> z = z_function(s);\n        for (auto x : z) ans += x;\n        return ans; \n    }\n};\n"})})]})}function m(e={}){const{wrapper:s}={...(0,r.a)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},11151:(e,s,n)=>{n.d(s,{Z:()=>a,a:()=>o});var t=n(67294);const r={},i=t.createContext(r);function o(e){const s=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),t.createElement(i.Provider,{value:s},e.children)}}}]);