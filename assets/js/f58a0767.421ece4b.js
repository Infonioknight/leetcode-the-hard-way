"use strict";(self.webpackChunkleetcode_the_hard_way=self.webpackChunkleetcode_the_hard_way||[]).push([[39300],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return g}});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function m(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var u=r.createContext({}),p=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},l=function(e){var t=p(e.components);return r.createElement(u.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,u=e.parentName,l=m(e,["components","mdxType","originalType","parentName"]),c=p(n),g=i,d=c["".concat(u,".").concat(g)]||c[g]||s[g]||o;return n?r.createElement(d,a(a({ref:t},l),{},{components:n})):r.createElement(d,a({ref:t},l))}));function g(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=c;var m={};for(var u in t)hasOwnProperty.call(t,u)&&(m[u]=t[u]);m.originalType=e,m.mdxType="string"==typeof e?e:i,a[1]=m;for(var p=2;p<o;p++)a[p]=n[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},82223:function(e,t,n){n.r(t),n.d(t,{assets:function(){return l},contentTitle:function(){return u},default:function(){return k},frontMatter:function(){return m},metadata:function(){return p},toc:function(){return s}});var r=n(87462),i=n(63366),o=(n(67294),n(3905)),a=["components"],m={description:"Author: @wingkwong | https://leetcode.com/problems/maximum-count-of-positive-integer-and-negative-integer/"},u="2529 - Maximum Count of Positive Integer and Negative Integer (Easy)",p={unversionedId:"2500-2599/maximum-count-of-positive-integer-and-negative-integer-easy",id:"2500-2599/maximum-count-of-positive-integer-and-negative-integer-easy",title:"2529 - Maximum Count of Positive Integer and Negative Integer (Easy)",description:"Author: @wingkwong | https://leetcode.com/problems/maximum-count-of-positive-integer-and-negative-integer/",source:"@site/solutions/2500-2599/2529-maximum-count-of-positive-integer-and-negative-integer-easy.md",sourceDirName:"2500-2599",slug:"/2500-2599/maximum-count-of-positive-integer-and-negative-integer-easy",permalink:"/leetcode-the-hard-way/solutions/2500-2599/maximum-count-of-positive-integer-and-negative-integer-easy",draft:!1,editUrl:"https://github.com/wingkwong/leetcode-the-hard-way/tree/main/solutions/2500-2599/2529-maximum-count-of-positive-integer-and-negative-integer-easy.md",tags:[],version:"current",sidebarPosition:2529,frontMatter:{description:"Author: @wingkwong | https://leetcode.com/problems/maximum-count-of-positive-integer-and-negative-integer/"},sidebar:"tutorialSidebar",previous:{title:"2523 - Closest Prime Numbers in Range (Medium)",permalink:"/leetcode-the-hard-way/solutions/2500-2599/closest-prime-numbers-in-range-medium"},next:{title:"2530 - Maximal Score After Applying K Operations (Medium)",permalink:"/leetcode-the-hard-way/solutions/2500-2599/maximal-score-after-applying-k-operations-medium"}},l={},s=[{value:"Problem Link",id:"problem-link",level:2},{value:"Problem Statement",id:"problem-statement",level:2},{value:"Approach 1: Counting",id:"approach-1-counting",level:2}],c=function(e){return function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",t)}},g=c("Tabs"),d=c("TabItem"),f=c("SolutionAuthor"),v={toc:s};function k(e){var t=e.components,n=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,r.Z)({},v,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"2529---maximum-count-of-positive-integer-and-negative-integer-easy"},"2529 - Maximum Count of Positive Integer and Negative Integer (Easy)"),(0,o.kt)("h2",{id:"problem-link"},"Problem Link"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/maximum-count-of-positive-integer-and-negative-integer/"},"https://leetcode.com/problems/maximum-count-of-positive-integer-and-negative-integer/")),(0,o.kt)("h2",{id:"problem-statement"},"Problem Statement"),(0,o.kt)("p",null,"Given an array ",(0,o.kt)("inlineCode",{parentName:"p"},"nums")," sorted in ",(0,o.kt)("strong",{parentName:"p"},"non-decreasing")," order, return ",(0,o.kt)("em",{parentName:"p"},"the maximum between the number of positive integers and the number of negative integers.")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"In other words, if the number of positive integers in ",(0,o.kt)("inlineCode",{parentName:"li"},"nums")," is ",(0,o.kt)("inlineCode",{parentName:"li"},"pos")," and the number of negative integers is ",(0,o.kt)("inlineCode",{parentName:"li"},"neg"),", then return the maximum of ",(0,o.kt)("inlineCode",{parentName:"li"},"pos")," and ",(0,o.kt)("inlineCode",{parentName:"li"},"neg"),".")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Note")," that ",(0,o.kt)("inlineCode",{parentName:"p"},"0")," is neither positive nor negative."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Example 1:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Input: nums = [-2,-1,-1,1,2,3]\nOutput: 3\nExplanation: There are 3 positive integers and 3 negative integers. The maximum count among them is 3.\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Example 2:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Input: nums = [-3,-2,-1,0,0,1,2]\nOutput: 3\nExplanation: There are 2 positive integers and 3 negative integers. The maximum count among them is 3.\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Example 3:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Input: nums = [5,20,66,1314]\nOutput: 4\nExplanation: There are 4 positive integers and 0 negative integers. The maximum count among them is 4.\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Constraints:")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"1 <= nums.length <= 2000")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"-2000 <= nums[i] <= 2000")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"nums")," is sorted in a ",(0,o.kt)("strong",{parentName:"li"},"non-decreasing order"),".")),(0,o.kt)("h2",{id:"approach-1-counting"},"Approach 1: Counting"),(0,o.kt)(g,{mdxType:"Tabs"},(0,o.kt)(d,{value:"cpp",label:"C++",mdxType:"TabItem"},(0,o.kt)(f,{name:"@wingkwong",mdxType:"SolutionAuthor"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    int maximumCount(vector<int>& nums) {\n        int pos = 0, neg = 0;\n        for (auto x : nums) {\n            // count positive numbers\n            if (x > 0) pos += 1;\n            // count negative numbers\n            if (x < 0) neg += 1;\n        }\n        // take the max of pos and neg\n        return max(pos, neg);\n    }\n};\n")))))}k.isMDXComponent=!0}}]);