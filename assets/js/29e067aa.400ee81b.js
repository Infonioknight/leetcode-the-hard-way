"use strict";(self.webpackChunkleetcode_the_hard_way=self.webpackChunkleetcode_the_hard_way||[]).push([[80385],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return h}});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=u(n),h=r,c=m["".concat(s,".").concat(h)]||m[h]||d[h]||o;return n?a.createElement(c,i(i({ref:t},p),{},{components:n})):a.createElement(c,i({ref:t},p))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var u=2;u<o;u++)i[u]=n[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},87777:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return s},default:function(){return k},frontMatter:function(){return l},metadata:function(){return u},toc:function(){return d}});var a=n(87462),r=n(63366),o=(n(67294),n(3905)),i=["components"],l={description:"Author: @wingkwong | https://leetcode.com/problems/number-of-nodes-in-the-sub-tree-with-the-same-label/",tags:["Hash Table","Tree","Depth-First Search","Breadth-First Search","Counting"]},s="1519 - Number of Nodes in the Sub-Tree With the Same Label (Medium)",u={unversionedId:"1500-1599/number-of-nodes-in-the-sub-tree-with-the-same-label-medium",id:"1500-1599/number-of-nodes-in-the-sub-tree-with-the-same-label-medium",title:"1519 - Number of Nodes in the Sub-Tree With the Same Label (Medium)",description:"Author: @wingkwong | https://leetcode.com/problems/number-of-nodes-in-the-sub-tree-with-the-same-label/",source:"@site/solutions/1500-1599/1519-number-of-nodes-in-the-sub-tree-with-the-same-label-medium.md",sourceDirName:"1500-1599",slug:"/1500-1599/number-of-nodes-in-the-sub-tree-with-the-same-label-medium",permalink:"/solutions/1500-1599/number-of-nodes-in-the-sub-tree-with-the-same-label-medium",draft:!1,editUrl:"https://github.com/wingkwong/leetcode-the-hard-way/tree/main/solutions/1500-1599/1519-number-of-nodes-in-the-sub-tree-with-the-same-label-medium.md",tags:[{label:"Hash Table",permalink:"/solutions/tags/hash-table"},{label:"Tree",permalink:"/solutions/tags/tree"},{label:"Depth-First Search",permalink:"/solutions/tags/depth-first-search"},{label:"Breadth-First Search",permalink:"/solutions/tags/breadth-first-search"},{label:"Counting",permalink:"/solutions/tags/counting"}],version:"current",sidebarPosition:1519,frontMatter:{description:"Author: @wingkwong | https://leetcode.com/problems/number-of-nodes-in-the-sub-tree-with-the-same-label/",tags:["Hash Table","Tree","Depth-First Search","Breadth-First Search","Counting"]},sidebar:"tutorialSidebar",previous:{title:"1514 - Path with Maximum Probability (Medium)",permalink:"/solutions/1500-1599/path-with-maximum-probability"},next:{title:"1523 - Count Odd Numbers in an Interval Range (Easy)",permalink:"/solutions/1500-1599/count-odd-numbers-in-an-interval-range-easy"}},p={},d=[{value:"Problem Link",id:"problem-link",level:2},{value:"Problem Statement",id:"problem-statement",level:2},{value:"Approach 1: DFS",id:"approach-1-dfs",level:2}],m=function(e){return function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",t)}},h=m("Tabs"),c=m("TabItem"),b=m("SolutionAuthor"),f={toc:d};function k(e){var t=e.components,n=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"1519---number-of-nodes-in-the-sub-tree-with-the-same-label-medium"},"1519 - Number of Nodes in the Sub-Tree With the Same Label (Medium)"),(0,o.kt)("h2",{id:"problem-link"},"Problem Link"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/number-of-nodes-in-the-sub-tree-with-the-same-label/"},"https://leetcode.com/problems/number-of-nodes-in-the-sub-tree-with-the-same-label/")),(0,o.kt)("h2",{id:"problem-statement"},"Problem Statement"),(0,o.kt)("p",null,"You are given a tree (i.e. a connected, undirected graph that has no cycles) consisting of ",(0,o.kt)("inlineCode",{parentName:"p"},"n")," nodes numbered from ",(0,o.kt)("inlineCode",{parentName:"p"},"0")," to ",(0,o.kt)("inlineCode",{parentName:"p"},"n - 1")," and exactly ",(0,o.kt)("inlineCode",{parentName:"p"},"n - 1")," ",(0,o.kt)("inlineCode",{parentName:"p"},"edges"),". The ",(0,o.kt)("strong",{parentName:"p"},"root")," of the tree is the node ",(0,o.kt)("inlineCode",{parentName:"p"},"0"),", and each node of the tree has ",(0,o.kt)("strong",{parentName:"p"},"a label")," which is a lower-case character given in the string ",(0,o.kt)("inlineCode",{parentName:"p"},"labels")," (i.e. The node with the number ",(0,o.kt)("inlineCode",{parentName:"p"},"i")," has the label ",(0,o.kt)("inlineCode",{parentName:"p"},"labels[i]"),")."),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"edges")," array is given on the form ",(0,o.kt)("inlineCode",{parentName:"p"},"edges[i] = [ai, bi]"),", which means there is an edge between nodes ",(0,o.kt)("inlineCode",{parentName:"p"},"ai")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"bi")," in the tree."),(0,o.kt)("p",null,"Return ",(0,o.kt)("em",{parentName:"p"},"an array of size n")," where ",(0,o.kt)("inlineCode",{parentName:"p"},"ans[i]")," is the number of nodes in the subtree of the ",(0,o.kt)("inlineCode",{parentName:"p"},"ith")," node which have the same label as node ",(0,o.kt)("inlineCode",{parentName:"p"},"i"),"."),(0,o.kt)("p",null,"A subtree of a tree ",(0,o.kt)("inlineCode",{parentName:"p"},"T")," is the tree consisting of a node in ",(0,o.kt)("inlineCode",{parentName:"p"},"T")," and all of its descendant nodes."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Example 1:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Input: n = 7, edges = [[0,1],[0,2],[1,4],[1,5],[2,3],[2,6]], labels = \"abaedcd\"\nOutput: [2,1,1,1,1,1,1]\nExplanation: Node 0 has label 'a' and its sub-tree has node 2 with label 'a' as well, thus the answer is 2. Notice that any node is part of its sub-tree.\nNode 1 has a label 'b'. The sub-tree of node 1 contains nodes 1,4 and 5, as nodes 4 and 5 have different labels than node 1, the answer is just 1 (the node itself).\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Example 2:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Input: n = 4, edges = [[0,1],[1,2],[0,3]], labels = \"bbbb\"\nOutput: [4,2,1,1]\nExplanation: The sub-tree of node 2 contains only node 2, so the answer is 1.\nThe sub-tree of node 3 contains only node 3, so the answer is 1.\nThe sub-tree of node 1 contains nodes 1 and 2, both have label 'b', thus the answer is 2.\nThe sub-tree of node 0 contains nodes 0, 1, 2 and 3, all with label 'b', thus the answer is 4.\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Example 3:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'Input: n = 5, edges = [[0,1],[0,2],[1,3],[0,4]], labels = "aabab"\nOutput: [3,2,1,1,1]\n')),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Constraints:")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"1 <= n <= 10^5")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"edges.length == n - 1")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"edges[i].length == 2")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"0 <= ai, bi < n")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"ai != bi")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"labels.length == n")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"labels")," is consisting of only of lowercase English letters.")),(0,o.kt)("h2",{id:"approach-1-dfs"},"Approach 1: DFS"),(0,o.kt)(h,{mdxType:"Tabs"},(0,o.kt)(c,{value:"cpp",label:"C++",mdxType:"TabItem"},(0,o.kt)(b,{name:"@wingkwong",mdxType:"SolutionAuthor"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    vector<int> countSubTrees(int n, vector<vector<int>>& edges, string labels) {\n        vector<int> ans(n);\n        vector<vector<int>> g(n);\n        for (auto x : edges) {\n            // x[0] can go to x[1]\n            g[x[0]].push_back(x[1]);\n            // x[1] can go to x[0]\n            g[x[1]].push_back(x[0]);\n        }\n        // u = current vertex\n        // p = parent vertex\n        function<vector<int>(int, int)> dfs = [&] (int u, int p) {\n            // count each label in the subtree\n            vector<int> cnt(26);\n            // init the current label\n            cnt[labels[u] - 'a'] = 1;\n            // traverse the children of u\n            for (auto v : g[u]) {\n                // if v is not same as p\n                if (p ^ v) {\n                    // get the count of labels in subtree\n                    vector<int> cnt2 = dfs(v, u);\n                    // add it back to cnt\n                    for (int i = 0; i < 26; i++) cnt[i] += cnt2[i];\n                }\n            }\n            // set the answer\n            ans[u] = cnt[labels[u] - 'a'];\n            return cnt;\n        };\n        dfs(0, -1);\n        return ans;\n    }\n};\n")))))}k.isMDXComponent=!0}}]);