"use strict";(self.webpackChunkleetcode_the_hard_way=self.webpackChunkleetcode_the_hard_way||[]).push([[99374],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>g});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=r.createContext({}),p=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},c=function(e){var n=p(e.components);return r.createElement(l.Provider,{value:n},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=p(t),d=o,g=m["".concat(l,".").concat(d)]||m[d]||u[d]||i;return t?r.createElement(g,a(a({ref:n},c),{},{components:t})):r.createElement(g,a({ref:n},c))}));function g(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=d;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[m]="string"==typeof e?e:o,a[1]=s;for(var p=2;p<i;p++)a[p]=t[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},14613:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>g,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var r=t(87462),o=(t(67294),t(3905));const i={description:"Author: @wingkwong | https://leetcode.com/problems/time-needed-to-rearrange-a-binary-string/",tags:["String","Dynamic Programming","Simulation"]},a="2380 - Time Needed to Rearrange a Binary String (Medium)",s={unversionedId:"2300-2399/time-needed-to-rearrange-a-binary-string-medium",id:"2300-2399/time-needed-to-rearrange-a-binary-string-medium",title:"2380 - Time Needed to Rearrange a Binary String (Medium)",description:"Author: @wingkwong | https://leetcode.com/problems/time-needed-to-rearrange-a-binary-string/",source:"@site/solutions/2300-2399/2380-time-needed-to-rearrange-a-binary-string-medium.md",sourceDirName:"2300-2399",slug:"/2300-2399/time-needed-to-rearrange-a-binary-string-medium",permalink:"/solutions/2300-2399/time-needed-to-rearrange-a-binary-string-medium",draft:!1,editUrl:"https://github.com/wingkwong/leetcode-the-hard-way/tree/main/solutions/2300-2399/2380-time-needed-to-rearrange-a-binary-string-medium.md",tags:[{label:"String",permalink:"/solutions/tags/string"},{label:"Dynamic Programming",permalink:"/solutions/tags/dynamic-programming"},{label:"Simulation",permalink:"/solutions/tags/simulation"}],version:"current",sidebarPosition:2380,frontMatter:{description:"Author: @wingkwong | https://leetcode.com/problems/time-needed-to-rearrange-a-binary-string/",tags:["String","Dynamic Programming","Simulation"]},sidebar:"tutorialSidebar",previous:{title:"2379 - Minimum Recolors to Get K Consecutive Black Blocks (Easy)",permalink:"/solutions/2300-2399/minimum-recolors-to-get-k-consecutive-black-blocks-easy"},next:{title:"2381 - Shifting Letters II (Medium)",permalink:"/solutions/2300-2399/shifting-letters-ii-medium"}},l={},p=[{value:"Problem Statement",id:"problem-statement",level:2},{value:"Approach 1: Brute Force",id:"approach-1-brute-force",level:2}],c=(m="SolutionAuthor",function(e){return console.warn("Component "+m+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",e)});var m;const u={toc:p},d="wrapper";function g(e){let{components:n,...t}=e;return(0,o.kt)(d,(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"2380---time-needed-to-rearrange-a-binary-string-medium"},"2380 - Time Needed to Rearrange a Binary String (Medium)"),(0,o.kt)("h2",{id:"problem-statement"},"Problem Statement"),(0,o.kt)("p",null,"You are given a binary string ",(0,o.kt)("inlineCode",{parentName:"p"},"s"),". In one second, ",(0,o.kt)("strong",{parentName:"p"},"all")," occurrences of ",(0,o.kt)("inlineCode",{parentName:"p"},'"01"')," are ",(0,o.kt)("strong",{parentName:"p"},"simultaneously")," replaced with ",(0,o.kt)("inlineCode",{parentName:"p"},'"10"'),". This process ",(0,o.kt)("strong",{parentName:"p"},"repeats")," until no occurrences of ",(0,o.kt)("inlineCode",{parentName:"p"},'"01"')," exist."),(0,o.kt)("p",null,"Return",(0,o.kt)("em",{parentName:"p"},"the number of seconds needed to complete this process.")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Example 1:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'Input: s = "0110101"\nOutput: 4\nExplanation: \nAfter one second, s becomes "1011010".\nAfter another second, s becomes "1101100".\nAfter the third second, s becomes "1110100".\nAfter the fourth second, s becomes "1111000".\nNo occurrence of "01" exists any longer, and the process needed 4 seconds to complete,\nso we return 4.\n')),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Example 2:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'Input: s = "11100"\nOutput: 0\nExplanation:\nNo occurrence of "01" exists in s, and the processes needed 0 seconds to complete,\nso we return 0.\n')),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Constraints:")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"1 <= s.length <= 1000")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"s[i]")," is either ",(0,o.kt)("inlineCode",{parentName:"li"},"'0'")," or ",(0,o.kt)("inlineCode",{parentName:"li"},"'1'"),".")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Follow up:")),(0,o.kt)("p",null,"Can you solve this problem in O(n) time complexity?"),(0,o.kt)("h2",{id:"approach-1-brute-force"},"Approach 1: Brute Force"),(0,o.kt)(c,{name:"@wingkwong",mdxType:"SolutionAuthor"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    int secondsToRemoveOccurrences(string s) {\n        int n = s.size(), need = 1, ans = 0;\n        // bruce force approach as n <= 1000\n        while (need) {\n            // unset need\n            need = 0;\n            // iterate the string\n            for (int i = 1; i < n; i++) {\n                // check if there is 01\n                if (s[i - 1] == '0' && s[i] == '1') {\n                    // if so, swap them to become 10\n                    swap(s[i], s[i - 1]);\n                    // skip this character\n                    i += 1;\n                    // after swapping, it could possibly produce another 01\n                    // hence set it to 1\n                    need = 1;\n                }                \n            }\n            // if we swapped it, then we need 1 second for the action\n            ans += need;\n        }\n        return ans;\n    }\n};\n")))}g.isMDXComponent=!0}}]);