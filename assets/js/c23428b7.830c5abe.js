"use strict";(self.webpackChunkleetcode_the_hard_way=self.webpackChunkleetcode_the_hard_way||[]).push([[99406],{3905:(e,t,r)=>{r.d(t,{Zo:()=>m,kt:()=>u});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},m=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},c="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),c=p(r),d=a,u=c["".concat(s,".").concat(d)]||c[d]||h[d]||i;return r?n.createElement(u,o(o({ref:t},m),{},{components:r})):n.createElement(u,o({ref:t},m))}));function u(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:a,o[1]=l;for(var p=2;p<i;p++)o[p]=r[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},42745:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>b,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var n=r(87462),a=(r(67294),r(3905));const i={description:"Author: @ColeB2 | https://leetcode.com/problems/replace-elements-with-greatest-element-on-right-side/",tags:["Array"]},o="1299 - Replace Elements with Greatest Element on Right Side",l={unversionedId:"1200-1299/replace-elements-with-greatest-element-on-right-side-easy",id:"1200-1299/replace-elements-with-greatest-element-on-right-side-easy",title:"1299 - Replace Elements with Greatest Element on Right Side",description:"Author: @ColeB2 | https://leetcode.com/problems/replace-elements-with-greatest-element-on-right-side/",source:"@site/solutions/1200-1299/1299-replace-elements-with-greatest-element-on-right-side-easy.md",sourceDirName:"1200-1299",slug:"/1200-1299/replace-elements-with-greatest-element-on-right-side-easy",permalink:"/solutions/1200-1299/replace-elements-with-greatest-element-on-right-side-easy",draft:!1,editUrl:"https://github.com/wingkwong/leetcode-the-hard-way/tree/main/solutions/1200-1299/1299-replace-elements-with-greatest-element-on-right-side-easy.md",tags:[{label:"Array",permalink:"/solutions/tags/array"}],version:"current",sidebarPosition:1299,frontMatter:{description:"Author: @ColeB2 | https://leetcode.com/problems/replace-elements-with-greatest-element-on-right-side/",tags:["Array"]},sidebar:"tutorialSidebar",previous:{title:"1293 - Shortest Path in a Grid with Obstacles Elimination (Hard)",permalink:"/solutions/1200-1299/shortest-path-in-a-grid-with-obstacles-elimination-hard"},next:{title:"1300 - 1399",permalink:"/solutions/category/1300---1399"}},s={},p=[{value:"Problem Link",id:"problem-link",level:2},{value:"Problem Statement",id:"problem-statement",level:2},{value:"Approach 1: Iterate Backwards",id:"approach-1-iterate-backwards",level:2}],m=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.kt)("div",t)},c=m("Tabs"),h=m("TabItem"),d=m("SolutionAuthor"),u={toc:p},g="wrapper";function b(e){let{components:t,...r}=e;return(0,a.kt)(g,(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"1299---replace-elements-with-greatest-element-on-right-side"},"1299 - Replace Elements with Greatest Element on Right Side"),(0,a.kt)("h2",{id:"problem-link"},"Problem Link"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/replace-elements-with-greatest-element-on-right-side/"},"https://leetcode.com/problems/replace-elements-with-greatest-element-on-right-side/")),(0,a.kt)("h2",{id:"problem-statement"},"Problem Statement"),(0,a.kt)("p",null,"Given an array ",(0,a.kt)("inlineCode",{parentName:"p"},"arr"),", replace every element in that array with the greatest element among the elements to its right, and replace the last element with ",(0,a.kt)("inlineCode",{parentName:"p"},"-1"),"."),(0,a.kt)("p",null,"After doing so, return the array."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Example 1:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Input: arr = [17,18,5,4,6,1]\nOutput: [18,6,6,6,1,-1]\nExplanation: \n- index 0 --\x3e the greatest element to the right of index 0 is index 1 (18).\n- index 1 --\x3e the greatest element to the right of index 1 is index 4 (6).\n- index 2 --\x3e the greatest element to the right of index 2 is index 4 (6).\n- index 3 --\x3e the greatest element to the right of index 3 is index 4 (6).\n- index 4 --\x3e the greatest element to the right of index 4 is index 5 (1).\n- index 5 --\x3e there are no elements to the right of index 5, so we put -1.\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Example 2:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Input: arr = [400]\nOutput: [-1]\nExplanation: There are no elements to the right of index 0.\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Constraints:")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"1 <= arr.length <= 10^4")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"1 <= arr[i] <= 10^5"))),(0,a.kt)("h2",{id:"approach-1-iterate-backwards"},"Approach 1: Iterate Backwards"),(0,a.kt)("p",null,"By initializing a $$greatest$$ variable, which tracks the greatest number found so far, we can iterate backwards, and store the current number in a $$temp$$ variable. From there all we need to do is update the current position in the array with the value from our $$greatest$$ variable, update the greatest variable with the larger of $$greatest$$ and $$temp$$ and continue."),(0,a.kt)("p",null,"Time Complexity: $$O(n)$$. Where $$n$$ is the number of numbers in $$arr$$. We perform a single pass, backwards."),(0,a.kt)("p",null,"Space Complexity: $$O(1)$$, we only need to track variables throughout the algorithm."),(0,a.kt)(c,{mdxType:"Tabs"},(0,a.kt)(h,{value:"python",label:"Python",mdxType:"TabItem"},(0,a.kt)(d,{name:"@ColeB2",mdxType:"SolutionAuthor"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-py"},"class Solution:\n    def replaceElements(self, arr: List[int]) -> List[int]:\n        # initialize a greatest variable, to track greatest number found so far.\n        greatest = -1\n        # iterate the array, arr, backwards.\n        for i in range(len(arr) - 1, -1, -1):\n            # set the temp variable, to the current value of the arr[i].\n            # set current value of the arr, arr[i] to the greatest.\n            temp, arr[i] = arr[i], greatest\n            # update our greatest variable.\n            greatest = max(greatest, temp)\n        return arr\n")))))}b.isMDXComponent=!0}}]);