"use strict";(self.webpackChunkleetcode_the_hard_way=self.webpackChunkleetcode_the_hard_way||[]).push([[79307],{3905:function(e,t,n){n.d(t,{Zo:function(){return m},kt:function(){return c}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},m=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,m=u(e,["components","mdxType","originalType","parentName"]),d=s(n),c=a,f=d["".concat(l,".").concat(c)]||d[c]||p[c]||i;return n?r.createElement(f,o(o({ref:t},m),{},{components:n})):r.createElement(f,o({ref:t},m))}));function c(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var u={};for(var l in t)hasOwnProperty.call(t,l)&&(u[l]=t[l]);u.originalType=e,u.mdxType="string"==typeof e?e:a,o[1]=u;for(var s=2;s<i;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},72623:function(e,t,n){n.r(t),n.d(t,{assets:function(){return m},contentTitle:function(){return l},default:function(){return y},frontMatter:function(){return u},metadata:function(){return s},toc:function(){return p}});var r=n(87462),a=n(63366),i=(n(67294),n(3905)),o=["components"],u={description:"Author: @wingkwong | https://leetcode.com/problems/difference-between-element-sum-and-digit-sum-of-an-array/"},l="2535 - Difference Between Element Sum and Digit Sum of an Array (Easy)",s={unversionedId:"2500-2599/difference-between-element-sum-and-digit-sum-of-an-array-easy",id:"2500-2599/difference-between-element-sum-and-digit-sum-of-an-array-easy",title:"2535 - Difference Between Element Sum and Digit Sum of an Array (Easy)",description:"Author: @wingkwong | https://leetcode.com/problems/difference-between-element-sum-and-digit-sum-of-an-array/",source:"@site/solutions/2500-2599/2535-difference-between-element-sum-and-digit-sum-of-an-array-easy.md",sourceDirName:"2500-2599",slug:"/2500-2599/difference-between-element-sum-and-digit-sum-of-an-array-easy",permalink:"/solutions/2500-2599/difference-between-element-sum-and-digit-sum-of-an-array-easy",draft:!1,editUrl:"https://github.com/wingkwong/leetcode-the-hard-way/tree/main/solutions/2500-2599/2535-difference-between-element-sum-and-digit-sum-of-an-array-easy.md",tags:[],version:"current",sidebarPosition:2535,frontMatter:{description:"Author: @wingkwong | https://leetcode.com/problems/difference-between-element-sum-and-digit-sum-of-an-array/"},sidebar:"tutorialSidebar",previous:{title:"2531 - Make Number of Distinct Characters Equal (Medium)",permalink:"/solutions/2500-2599/make-number-of-distinct-characters-equal-medium"},next:{title:"2571 - Minimum Operations to Reduce an Integer to 0 (Easy)",permalink:"/solutions/2500-2599/minimum-operations-to-reduce-an-integer-to-0-easy"}},m={},p=[{value:"Problem Link",id:"problem-link",level:2},{value:"Problem Statement",id:"problem-statement",level:2},{value:"Approach 1: Straight Forward",id:"approach-1-straight-forward",level:2}],d=function(e){return function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,i.kt)("div",t)}},c=d("Tabs"),f=d("TabItem"),g=d("SolutionAuthor"),b={toc:p};function y(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},b,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"2535---difference-between-element-sum-and-digit-sum-of-an-array-easy"},"2535 - Difference Between Element Sum and Digit Sum of an Array (Easy)"),(0,i.kt)("h2",{id:"problem-link"},"Problem Link"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/difference-between-element-sum-and-digit-sum-of-an-array/"},"https://leetcode.com/problems/difference-between-element-sum-and-digit-sum-of-an-array/")),(0,i.kt)("h2",{id:"problem-statement"},"Problem Statement"),(0,i.kt)("p",null,"You are given a positive integer array ",(0,i.kt)("inlineCode",{parentName:"p"},"nums"),"."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"The ",(0,i.kt)("strong",{parentName:"li"},"element sum")," is the sum of all the elements in ",(0,i.kt)("inlineCode",{parentName:"li"},"nums"),"."),(0,i.kt)("li",{parentName:"ul"},"The ",(0,i.kt)("strong",{parentName:"li"},"digit sum")," is the sum of all the digits (not necessarily distinct) that appear in ",(0,i.kt)("inlineCode",{parentName:"li"},"nums"),".")),(0,i.kt)("p",null,"Return ",(0,i.kt)("em",{parentName:"p"},"the ",(0,i.kt)("strong",{parentName:"em"},"absolute")," difference between the ",(0,i.kt)("strong",{parentName:"em"},"element sum")," and ",(0,i.kt)("strong",{parentName:"em"},"digit sum")," of"),(0,i.kt)("inlineCode",{parentName:"p"},"nums"),"."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Note")," that the absolute difference between two integers ",(0,i.kt)("inlineCode",{parentName:"p"},"x")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"y")," is defined as ",(0,i.kt)("inlineCode",{parentName:"p"},"|x - y|"),"."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example 1:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Input: nums = [1,15,6,3]\nOutput: 9\nExplanation: \nThe element sum of nums is 1 + 15 + 6 + 3 = 25.\nThe digit sum of nums is 1 + 1 + 5 + 6 + 3 = 16.\nThe absolute difference between the element sum and digit sum is |25 - 16| = 9.\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example 2:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Input: nums = [1,2,3,4]\nOutput: 0\nExplanation:\nThe element sum of nums is 1 + 2 + 3 + 4 = 10.\nThe digit sum of nums is 1 + 2 + 3 + 4 = 10.\nThe absolute difference between the element sum and digit sum is |10 - 10| = 0.\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Constraints:")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"1 <= nums.length <= 2000")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"1 <= nums[i] <= 2000"))),(0,i.kt)("h2",{id:"approach-1-straight-forward"},"Approach 1: Straight Forward"),(0,i.kt)(c,{mdxType:"Tabs"},(0,i.kt)(f,{value:"cpp",label:"C++",mdxType:"TabItem"},(0,i.kt)(g,{name:"@wingkwong",mdxType:"SolutionAuthor"}),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    int f(int x) {\n        int res = 0;\n        while (x) {\n            // get the last digit\n            res += x % 10;\n            // divide by 10 to remove the last digit\n            x /= 10;\n        }\n        return res;\n    }\n    int differenceOfSum(vector<int>& nums) {\n        int es = 0, ds = 0;\n        for (auto x : nums) {\n            // calculate element sum\n            es += x;\n            // calculate digit sum\n            ds += f(x);\n        }\n        // return the absolute difference between the element sum and digit sum of nums.\n        return abs(es - ds);\n    }\n};\n")))))}y.isMDXComponent=!0}}]);