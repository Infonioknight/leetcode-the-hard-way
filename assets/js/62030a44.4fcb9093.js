"use strict";(self.webpackChunkleetcode_the_hard_way=self.webpackChunkleetcode_the_hard_way||[]).push([[59927],{29611:(e,r,a)=>{a.r(r),a.d(r,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>t,metadata:()=>i,toc:()=>c});var s=a(85893),n=a(11151);const t={description:"Author: @wingkwong | https://leetcode.com/problems/make-two-arrays-equal-by-reversing-subarrays/",tags:["Array","Hash Table","Sorting"]},l="1460 - Make Two Arrays Equal by Reversing Subarrays (Easy)",i={id:"1400-1499/make-two-arrays-equal-by-reversing-subarrays-easy",title:"1460 - Make Two Arrays Equal by Reversing Subarrays (Easy)",description:"Author: @wingkwong | https://leetcode.com/problems/make-two-arrays-equal-by-reversing-subarrays/",source:"@site/solutions/1400-1499/1460-make-two-arrays-equal-by-reversing-subarrays-easy.md",sourceDirName:"1400-1499",slug:"/1400-1499/make-two-arrays-equal-by-reversing-subarrays-easy",permalink:"/solutions/1400-1499/make-two-arrays-equal-by-reversing-subarrays-easy",draft:!1,unlisted:!1,editUrl:"https://github.com/wingkwong/leetcode-the-hard-way/tree/main/solutions/1400-1499/1460-make-two-arrays-equal-by-reversing-subarrays-easy.md",tags:[{inline:!0,label:"Array",permalink:"/solutions/tags/array"},{inline:!0,label:"Hash Table",permalink:"/solutions/tags/hash-table"},{inline:!0,label:"Sorting",permalink:"/solutions/tags/sorting"}],version:"current",sidebarPosition:1460,frontMatter:{description:"Author: @wingkwong | https://leetcode.com/problems/make-two-arrays-equal-by-reversing-subarrays/",tags:["Array","Hash Table","Sorting"]},sidebar:"tutorialSidebar",previous:{title:"1457 - Pseudo-Palindromic Paths in a Binary Tree (Medium)",permalink:"/solutions/1400-1499/pseudo-palindromic-paths-in-a-binary-tree-medium"},next:{title:"1464 - Maximum Product of Two Elements in an Array (Easy)",permalink:"/solutions/1400-1499/maximum-product-of-two-elements-in-an-array-easy"}},o={},c=[{value:"Problem Link",id:"problem-link",level:2},{value:"Problem Statement",id:"problem-statement",level:2},{value:"Approach 1: Sorting",id:"approach-1-sorting",level:2}];function m(e){const r={a:"a",annotation:"annotation",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",math:"math",mi:"mi",mo:"mo",mrow:"mrow",p:"p",pre:"pre",semantics:"semantics",span:"span",strong:"strong",ul:"ul",...(0,n.a)(),...e.components},{SolutionAuthor:a,TabItem:t,Tabs:l}=r;return a||d("SolutionAuthor",!0),t||d("TabItem",!0),l||d("Tabs",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.header,{children:(0,s.jsx)(r.h1,{id:"1460---make-two-arrays-equal-by-reversing-subarrays-easy",children:"1460 - Make Two Arrays Equal by Reversing Subarrays (Easy)"})}),"\n",(0,s.jsx)(r.h2,{id:"problem-link",children:"Problem Link"}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.a,{href:"https://leetcode.com/problems/make-two-arrays-equal-by-reversing-subarrays/",children:"https://leetcode.com/problems/make-two-arrays-equal-by-reversing-subarrays/"})}),"\n",(0,s.jsx)(r.h2,{id:"problem-statement",children:"Problem Statement"}),"\n",(0,s.jsxs)(r.p,{children:["You are given two integer arrays of equal length ",(0,s.jsx)(r.code,{children:"target"})," and ",(0,s.jsx)(r.code,{children:"arr"}),". In one step, you can select any ",(0,s.jsx)(r.strong,{children:"non-empty subarray"})," of ",(0,s.jsx)(r.code,{children:"arr"})," and reverse it. You are allowed to make any number of steps."]}),"\n",(0,s.jsxs)(r.p,{children:["Return ",(0,s.jsx)(r.code,{children:"true"})," ",(0,s.jsx)(r.em,{children:"if you can make"}),(0,s.jsx)(r.code,{children:"arr"}),(0,s.jsx)(r.em,{children:"equal to"}),(0,s.jsx)(r.code,{children:"target"}),(0,s.jsx)(r.em,{children:"or"}),(0,s.jsx)(r.code,{children:"false"}),(0,s.jsx)(r.em,{children:"otherwise"}),"."]}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Example 1:"})}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{children:"Input: target = [1,2,3,4], arr = [2,4,1,3]\nOutput: true\nExplanation: You can follow the next steps to convert arr to target:\n1- Reverse subarray [2,4,1], arr becomes [1,4,2,3]\n2- Reverse subarray [4,2], arr becomes [1,2,4,3]\n3- Reverse subarray [4,3], arr becomes [1,2,3,4]\nThere are multiple ways to convert arr to target, this is not the only way to do so.\n"})}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Example 2:"})}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{children:"Input: target = [7], arr = [7]\nOutput: true\nExplanation: arr is equal to target without any reverses.\n"})}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Example 3:"})}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{children:"Input: target = [3,7,9], arr = [3,7,11]\nOutput: false\nExplanation: arr does not have value 9 and it can never be converted to target.\n"})}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Constraints:"})}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:(0,s.jsx)(r.code,{children:"target.length == arr.length"})}),"\n",(0,s.jsx)(r.li,{children:(0,s.jsx)(r.code,{children:"1 <= target.length <= 1000"})}),"\n",(0,s.jsx)(r.li,{children:(0,s.jsx)(r.code,{children:"1 <= target[i] <= 1000"})}),"\n",(0,s.jsx)(r.li,{children:(0,s.jsx)(r.code,{children:"1 <= arr[i] <= 1000"})}),"\n"]}),"\n",(0,s.jsx)(r.h2,{id:"approach-1-sorting",children:"Approach 1: Sorting"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:["Time Complexity: ",(0,s.jsxs)(r.span,{className:"katex",children:[(0,s.jsx)(r.span,{className:"katex-mathml",children:(0,s.jsx)(r.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,s.jsxs)(r.semantics,{children:[(0,s.jsxs)(r.mrow,{children:[(0,s.jsx)(r.mi,{children:"O"}),(0,s.jsx)(r.mo,{stretchy:"false",children:"("}),(0,s.jsx)(r.mi,{children:"n"}),(0,s.jsx)(r.mi,{children:"l"}),(0,s.jsx)(r.mi,{children:"o"}),(0,s.jsx)(r.mi,{children:"g"}),(0,s.jsx)(r.mi,{children:"n"}),(0,s.jsx)(r.mo,{stretchy:"false",children:")"})]}),(0,s.jsx)(r.annotation,{encoding:"application/x-tex",children:"O(n log n)"})]})})}),(0,s.jsx)(r.span,{className:"katex-html","aria-hidden":"true",children:(0,s.jsxs)(r.span,{className:"base",children:[(0,s.jsx)(r.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,s.jsx)(r.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"O"}),(0,s.jsx)(r.span,{className:"mopen",children:"("}),(0,s.jsx)(r.span,{className:"mord mathnormal",children:"n"}),(0,s.jsx)(r.span,{className:"mord mathnormal",style:{marginRight:"0.01968em"},children:"l"}),(0,s.jsx)(r.span,{className:"mord mathnormal",children:"o"}),(0,s.jsx)(r.span,{className:"mord mathnormal",style:{marginRight:"0.03588em"},children:"g"}),(0,s.jsx)(r.span,{className:"mord mathnormal",children:"n"}),(0,s.jsx)(r.span,{className:"mclose",children:")"})]})})]})]}),"\n",(0,s.jsxs)(r.li,{children:["Space Complexity: ",(0,s.jsxs)(r.span,{className:"katex",children:[(0,s.jsx)(r.span,{className:"katex-mathml",children:(0,s.jsx)(r.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,s.jsxs)(r.semantics,{children:[(0,s.jsxs)(r.mrow,{children:[(0,s.jsx)(r.mi,{children:"O"}),(0,s.jsx)(r.mo,{stretchy:"false",children:"("}),(0,s.jsx)(r.mi,{children:"l"}),(0,s.jsx)(r.mi,{children:"o"}),(0,s.jsx)(r.mi,{children:"g"}),(0,s.jsx)(r.mi,{children:"n"}),(0,s.jsx)(r.mo,{stretchy:"false",children:")"})]}),(0,s.jsx)(r.annotation,{encoding:"application/x-tex",children:"O(log n)"})]})})}),(0,s.jsx)(r.span,{className:"katex-html","aria-hidden":"true",children:(0,s.jsxs)(r.span,{className:"base",children:[(0,s.jsx)(r.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,s.jsx)(r.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"O"}),(0,s.jsx)(r.span,{className:"mopen",children:"("}),(0,s.jsx)(r.span,{className:"mord mathnormal",style:{marginRight:"0.01968em"},children:"l"}),(0,s.jsx)(r.span,{className:"mord mathnormal",children:"o"}),(0,s.jsx)(r.span,{className:"mord mathnormal",style:{marginRight:"0.03588em"},children:"g"}),(0,s.jsx)(r.span,{className:"mord mathnormal",children:"n"}),(0,s.jsx)(r.span,{className:"mclose",children:")"})]})})]})]}),"\n"]}),"\n",(0,s.jsx)(l,{children:(0,s.jsxs)(t,{value:"py",label:"Python",children:[(0,s.jsx)(a,{name:"@wingkwong"}),(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-cpp",children:"class Solution:\n    def canBeEqual(self, target: List[int], arr: List[int]) -> bool:\n        return sorted(target) == sorted(arr)\n"})})]})})]})}function h(e={}){const{wrapper:r}={...(0,n.a)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(m,{...e})}):m(e)}function d(e,r){throw new Error("Expected "+(r?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},11151:(e,r,a)=>{a.d(r,{Z:()=>i,a:()=>l});var s=a(67294);const n={},t=s.createContext(n);function l(e){const r=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function i(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:l(e.components),s.createElement(t.Provider,{value:r},e.children)}}}]);