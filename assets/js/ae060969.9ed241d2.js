"use strict";(self.webpackChunkleetcode_the_hard_way=self.webpackChunkleetcode_the_hard_way||[]).push([[3845],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>g});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),u=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},s=function(e){var t=u(e.components);return n.createElement(p.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),c=u(r),d=a,g=c["".concat(p,".").concat(d)]||c[d]||m[d]||o;return r?n.createElement(g,i(i({ref:t},s),{},{components:r})):n.createElement(g,i({ref:t},s))}));function g(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[c]="string"==typeof e?e:a,i[1]=l;for(var u=2;u<o;u++)i[u]=r[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},20200:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>g,frontMatter:()=>o,metadata:()=>l,toc:()=>u});var n=r(87462),a=(r(67294),r(3905));const o={description:"Author: @wingkwong | https://leetcode.com/problems/water-and-jug-problem"},i="0365 - Water and Jug Problem (Medium)",l={unversionedId:"0300-0399/water-and-jug-problem-medium",id:"0300-0399/water-and-jug-problem-medium",title:"0365 - Water and Jug Problem (Medium)",description:"Author: @wingkwong | https://leetcode.com/problems/water-and-jug-problem",source:"@site/solutions/0300-0399/0365-water-and-jug-problem-medium.md",sourceDirName:"0300-0399",slug:"/0300-0399/water-and-jug-problem-medium",permalink:"/solutions/0300-0399/water-and-jug-problem-medium",draft:!1,editUrl:"https://github.com/wingkwong/leetcode-the-hard-way/tree/main/solutions/0300-0399/0365-water-and-jug-problem-medium.md",tags:[],version:"current",sidebarPosition:365,frontMatter:{description:"Author: @wingkwong | https://leetcode.com/problems/water-and-jug-problem"},sidebar:"tutorialSidebar",previous:{title:"0355 - Design Twitter (Medium)",permalink:"/solutions/0300-0399/design-twitter-medium"},next:{title:"0367 - Valid Perfect Square (Easy)",permalink:"/solutions/0300-0399/valid-perfect-square-easy"}},p={},u=[{value:"Problem Link",id:"problem-link",level:2},{value:"Problem Statement",id:"problem-statement",level:2},{value:"Approach 1: B\xe9zout&#39;s identity",id:"approach-1-b\xe9zouts-identity",level:2}],s=(c="SolutionAuthor",function(e){return console.warn("Component "+c+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.kt)("div",e)});var c;const m={toc:u},d="wrapper";function g(e){let{components:t,...r}=e;return(0,a.kt)(d,(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"0365---water-and-jug-problem-medium"},"0365 - Water and Jug Problem (Medium)"),(0,a.kt)("h2",{id:"problem-link"},"Problem Link"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/water-and-jug-problem"},"https://leetcode.com/problems/water-and-jug-problem")),(0,a.kt)("h2",{id:"problem-statement"},"Problem Statement"),(0,a.kt)("p",null,"You are given two jugs with capacities ",(0,a.kt)("inlineCode",{parentName:"p"},"jug1Capacity")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"jug2Capacity")," liters. There is an infinite amount of water supply available. Determine whether it is possible to measure exactly ",(0,a.kt)("inlineCode",{parentName:"p"},"targetCapacity")," liters using these two jugs."),(0,a.kt)("p",null,"If ",(0,a.kt)("inlineCode",{parentName:"p"},"targetCapacity")," liters of water are measurable, you must have ",(0,a.kt)("inlineCode",{parentName:"p"},"targetCapacity")," liters of water contained ",(0,a.kt)("strong",{parentName:"p"},"within one or both buckets")," by the end."),(0,a.kt)("p",null,"Operations allowed:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Fill any of the jugs with water."),(0,a.kt)("li",{parentName:"ul"},"Empty any of the jugs."),(0,a.kt)("li",{parentName:"ul"},"Pour water from one jug into another till the other jug is completely full, or the first jug itself is empty.")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Example 1:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Input: jug1Capacity = 3, jug2Capacity = 5, targetCapacity = 4\nOutput: true\nExplanation: The famous Die Hard example \n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Example 2:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Input: jug1Capacity = 2, jug2Capacity = 6, targetCapacity = 5\nOutput: false\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Example 3:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Input: jug1Capacity = 1, jug2Capacity = 2, targetCapacity = 3\nOutput: true \n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Constraints:")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"1 <= jug1Capacity, jug2Capacity, targetCapacity <= 10^6"))),(0,a.kt)("h2",{id:"approach-1-b\xe9zouts-identity"},"Approach 1: B\xe9zout's identity"),(0,a.kt)("p",null,"It's obvious that it is impossible to measure if the target capacity $$z$$ is greater than the total capacity of jug $$x$$ and jug $$y$$. Otherwise, we can express it as a linear combination of $$x$$ and $$y$$ and check if $$z$$ is a linear combination of $$x$$ and $$y$$. In order to do so, $$z$$ has to be a multiple of the gcd of $$x$$ and $$y$$."),(0,a.kt)(s,{name:"@wingkwong",mdxType:"SolutionAuthor"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    bool canMeasureWater(int x, int y, int z) {\n        // impossible case\n        if (x + y < z) return false;\n        // check if z is a multiple of GCD(x, y) \n        return z % gcd(x, y) == 0;\n    }\n};\n")))}g.isMDXComponent=!0}}]);