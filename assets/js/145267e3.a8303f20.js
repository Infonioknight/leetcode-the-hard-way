"use strict";(self.webpackChunkleetcode_the_hard_way=self.webpackChunkleetcode_the_hard_way||[]).push([[58672],{3905:function(e,n,t){t.d(n,{Zo:function(){return l},kt:function(){return d}});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var u=r.createContext({}),m=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},l=function(e){var n=m(e.components);return r.createElement(u.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},c=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,u=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),c=m(t),d=o,f=c["".concat(u,".").concat(d)]||c[d]||s[d]||a;return t?r.createElement(f,i(i({ref:n},l),{},{components:t})):r.createElement(f,i({ref:n},l))}));function d(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=c;var p={};for(var u in n)hasOwnProperty.call(n,u)&&(p[u]=n[u]);p.originalType=e,p.mdxType="string"==typeof e?e:o,i[1]=p;for(var m=2;m<a;m++)i[m]=t[m];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}c.displayName="MDXCreateElement"},64950:function(e,n,t){t.r(n),t.d(n,{assets:function(){return l},contentTitle:function(){return u},default:function(){return b},frontMatter:function(){return p},metadata:function(){return m},toc:function(){return s}});var r=t(87462),o=t(63366),a=(t(67294),t(3905)),i=["components"],p={description:"Author: @wingkwong | https://leetcode.com/problems/minimum-operations-to-reduce-an-integer-to-0/"},u="2571 - Minimum Operations to Reduce an Integer to 0 (Easy)",m={unversionedId:"2500-2599/minimum-operations-to-reduce-an-integer-to-0-easy",id:"2500-2599/minimum-operations-to-reduce-an-integer-to-0-easy",title:"2571 - Minimum Operations to Reduce an Integer to 0 (Easy)",description:"Author: @wingkwong | https://leetcode.com/problems/minimum-operations-to-reduce-an-integer-to-0/",source:"@site/solutions/2500-2599/2571-minimum-operations-to-reduce-an-integer-to-0-easy.md",sourceDirName:"2500-2599",slug:"/2500-2599/minimum-operations-to-reduce-an-integer-to-0-easy",permalink:"/solutions/2500-2599/minimum-operations-to-reduce-an-integer-to-0-easy",draft:!1,editUrl:"https://github.com/wingkwong/leetcode-the-hard-way/tree/main/solutions/2500-2599/2571-minimum-operations-to-reduce-an-integer-to-0-easy.md",tags:[],version:"current",sidebarPosition:2571,frontMatter:{description:"Author: @wingkwong | https://leetcode.com/problems/minimum-operations-to-reduce-an-integer-to-0/"},sidebar:"tutorialSidebar",previous:{title:"2535 - Difference Between Element Sum and Digit Sum of an Array (Easy)",permalink:"/solutions/2500-2599/difference-between-element-sum-and-digit-sum-of-an-array-easy"}},l={},s=[{value:"Problem Link",id:"problem-link",level:2},{value:"Problem Statement",id:"problem-statement",level:2},{value:"Approach 1: DP",id:"approach-1-dp",level:2}],c=function(e){return function(n){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.kt)("div",n)}},d=c("Tabs"),f=c("TabItem"),g=c("SolutionAuthor"),k={toc:s};function b(e){var n=e.components,t=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},k,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"2571---minimum-operations-to-reduce-an-integer-to-0-easy"},"2571 - Minimum Operations to Reduce an Integer to 0 (Easy)"),(0,a.kt)("h2",{id:"problem-link"},"Problem Link"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/minimum-operations-to-reduce-an-integer-to-0/"},"https://leetcode.com/problems/minimum-operations-to-reduce-an-integer-to-0/")),(0,a.kt)("h2",{id:"problem-statement"},"Problem Statement"),(0,a.kt)("p",null,"You are given a positive integer ",(0,a.kt)("inlineCode",{parentName:"p"},"n"),", you can do the following operation ",(0,a.kt)("strong",{parentName:"p"},"any")," number of times:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Add or subtract a ",(0,a.kt)("strong",{parentName:"li"},"power")," of ",(0,a.kt)("inlineCode",{parentName:"li"},"2")," from ",(0,a.kt)("inlineCode",{parentName:"li"},"n"),".")),(0,a.kt)("p",null,"Return ",(0,a.kt)("em",{parentName:"p"},"the ",(0,a.kt)("strong",{parentName:"em"},"minimum")," number of operations to make"),(0,a.kt)("inlineCode",{parentName:"p"},"n"),(0,a.kt)("em",{parentName:"p"},"equal to"),(0,a.kt)("inlineCode",{parentName:"p"},"0"),"."),(0,a.kt)("p",null,"A number ",(0,a.kt)("inlineCode",{parentName:"p"},"x")," is power of ",(0,a.kt)("inlineCode",{parentName:"p"},"2")," if ",(0,a.kt)("inlineCode",{parentName:"p"},"x == 2i"),"\xa0where ",(0,a.kt)("inlineCode",{parentName:"p"},"i >= 0"),(0,a.kt)("em",{parentName:"p"},".")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Example 1:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Input: n = 39\nOutput: 3\nExplanation: We can do the following operations:\n- Add 20 = 1 to n, so now n = 40.\n- Subtract 23 = 8 from n, so now n = 32.\n- Subtract 25 = 32 from n, so now n = 0.\nIt can be shown that 3 is the minimum number of operations we need to make n equal to 0.\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Example 2:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Input: n = 54\nOutput: 3\nExplanation: We can do the following operations:\n- Add 21 = 2 to n, so now n = 56.\n- Add 23 = 8 to n, so now n = 64.\n- Subtract 26 = 64 from n, so now n = 0.\nSo the minimum number of operations is 3.\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Constraints:")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"1 <= n <= 10^5"))),(0,a.kt)("h2",{id:"approach-1-dp"},"Approach 1: DP"),(0,a.kt)(d,{mdxType:"Tabs"},(0,a.kt)(f,{value:"py",label:"Python",mdxType:"TabItem"},(0,a.kt)(g,{name:"@wingkwong",mdxType:"SolutionAuthor"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-py"},"class Solution:\n    def minOperations(self, n: int) -> int:\n        # precompute power of 2\n        p = {1 << i for i in range(20)}\n        def dp(x):\n            # reach 0 -> 0 operation\n            if x == 0: return 0\n            # if x is a power of 2, \n            # we need 1 operation (i.e. subtract itself)\n            if x in p: return 1\n            # otherwise we either add / subtract the lsb to x\n            # e.g. 0111 -> 1000 -> 0000\n            # e.g. 1001 -> 1000 -> 0000\n            return min(dp(x + (x & -x)), dp(x - (x & -x))) + 1\n        return dp(n)\n")))))}b.isMDXComponent=!0}}]);