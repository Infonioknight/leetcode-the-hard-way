"use strict";(self.webpackChunkleetcode_the_hard_way=self.webpackChunkleetcode_the_hard_way||[]).push([[35660],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>b});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function m(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},s=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,s=m(e,["components","mdxType","originalType","parentName"]),u=p(n),d=o,b=u["".concat(l,".").concat(d)]||u[d]||c[d]||i;return n?r.createElement(b,a(a({ref:t},s),{},{components:n})):r.createElement(b,a({ref:t},s))}));function b(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=d;var m={};for(var l in t)hasOwnProperty.call(t,l)&&(m[l]=t[l]);m.originalType=e,m[u]="string"==typeof e?e:o,a[1]=m;for(var p=2;p<i;p++)a[p]=n[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},56298:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>b,frontMatter:()=>i,metadata:()=>m,toc:()=>p});var r=n(87462),o=(n(67294),n(3905));const i={description:"Author: @wingkwong | https://leetcode.com/problems/combination-sum-iv/"},a="0377 - Combination Sum IV (Medium)",m={unversionedId:"0300-0399/combination-sum-iv-medium",id:"0300-0399/combination-sum-iv-medium",title:"0377 - Combination Sum IV (Medium)",description:"Author: @wingkwong | https://leetcode.com/problems/combination-sum-iv/",source:"@site/solutions/0300-0399/0377-combination-sum-iv-medium.md",sourceDirName:"0300-0399",slug:"/0300-0399/combination-sum-iv-medium",permalink:"/solutions/0300-0399/combination-sum-iv-medium",draft:!1,editUrl:"https://github.com/wingkwong/leetcode-the-hard-way/tree/main/solutions/0300-0399/0377-combination-sum-iv-medium.md",tags:[],version:"current",sidebarPosition:377,frontMatter:{description:"Author: @wingkwong | https://leetcode.com/problems/combination-sum-iv/"},sidebar:"tutorialSidebar",previous:{title:"0374 - Guess Number Higher or Lower (Easy)",permalink:"/solutions/0300-0399/guess-number-higher-or-lower-easy"},next:{title:"0383 - Ransom Note (Easy)",permalink:"/solutions/0300-0399/ransom-note-easy"}},l={},p=[{value:"Problem Link",id:"problem-link",level:2},{value:"Problem Statement",id:"problem-statement",level:2},{value:"Approach: Dynamic Programming",id:"approach-dynamic-programming",level:2}],s=(u="SolutionAuthor",function(e){return console.warn("Component "+u+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",e)});var u;const c={toc:p},d="wrapper";function b(e){let{components:t,...n}=e;return(0,o.kt)(d,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"0377---combination-sum-iv-medium"},"0377 - Combination Sum IV (Medium)"),(0,o.kt)("h2",{id:"problem-link"},"Problem Link"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/combination-sum-iv/"},"https://leetcode.com/problems/combination-sum-iv/")),(0,o.kt)("h2",{id:"problem-statement"},"Problem Statement"),(0,o.kt)("p",null,"Given an array of ",(0,o.kt)("strong",{parentName:"p"},"distinct")," integers ",(0,o.kt)("inlineCode",{parentName:"p"},"nums")," and a target integer ",(0,o.kt)("inlineCode",{parentName:"p"},"target"),", return ",(0,o.kt)("em",{parentName:"p"},"the number of possible combinations that add up to")," ",(0,o.kt)("inlineCode",{parentName:"p"},"target"),"."),(0,o.kt)("p",null,"The test cases are generated so that the answer can fit in a ",(0,o.kt)("strong",{parentName:"p"},"32-bit")," integer."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Example 1:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Input: nums = [1,2,3], target = 4\nOutput: 7\nExplanation:\nThe possible combination ways are:\n(1, 1, 1, 1)\n(1, 1, 2)\n(1, 2, 1)\n(1, 3)\n(2, 1, 1)\n(2, 2)\n(3, 1)\nNote that different sequences are counted as different combinations.\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Example 2:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Input: nums = [9], target = 3\nOutput: 0\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Constraints:")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"1 <= nums.length <= 200")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"1 <= nums[i] <= 1000")),(0,o.kt)("li",{parentName:"ul"},"All the elements of ",(0,o.kt)("inlineCode",{parentName:"li"},"nums")," are ",(0,o.kt)("strong",{parentName:"li"},"unique"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"1 <= target <= 1000"))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Follow up:")," What if negative numbers are allowed in the given array? How does it change the problem? What limitation we need to add to the question to allow negative numbers?"),(0,o.kt)("h2",{id:"approach-dynamic-programming"},"Approach: Dynamic Programming"),(0,o.kt)("p",null,"This problem is very similar to ",(0,o.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/coin-change-2/"},"0518 - Coin Change 2"),". The only difference is the order of loops. The reason is that ",(0,o.kt)("inlineCode",{parentName:"p"},"(1, 1, 2)")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"(2, 1, 1)")," are considered different in this problem."),(0,o.kt)("p",null,"We can derive the following transition if $target$ is greater or equal to $nums","[i]","$ where $dp","[i]","$ represents the number of combinations that sum up to the $target$."),(0,o.kt)("p",null,"$$\ndp(target)=\\sum_{i=0}^n dp(target - nums","[i]",")\n$$"),(0,o.kt)(s,{name:"@wingkwong",mdxType:"SolutionAuthor"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    int combinationSum4(vector<int>& nums, int target) {\n        // use uint to avoid overflow\n        // let dp[i] be the number of combinations that sum up to the target\n        vector<uint> dp(target + 1);\n        // base case\n        dp[0] = 1;\n        // iterate target first - as (1, 1, 2) and (2, 1, 1) are considered different\n        for(int i = 1; i <= target; i++) {\n            // iterate each number in nums\n            for (auto x : nums) {\n                // since we need dp[i - x], \n                // we need to make sure i - x is greater or equal to 0\n                if(i - x >= 0) {\n                    // add the previous result\n                    dp[i] += dp[i - x];   \n                }\n            }    \n        }\n        // return answer dp[target]\n        return dp.back();\n    }\n};\n")))}b.isMDXComponent=!0}}]);