"use strict";(self.webpackChunkleetcode_the_hard_way=self.webpackChunkleetcode_the_hard_way||[]).push([[56714],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>k});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function m(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),u=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):m(m({},t),e)),n},l=function(e){var t=u(e.components);return r.createElement(p.Provider,{value:t},e.children)},s="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),s=u(n),d=o,k=s["".concat(p,".").concat(d)]||s[d]||c[d]||a;return n?r.createElement(k,m(m({ref:t},l),{},{components:n})):r.createElement(k,m({ref:t},l))}));function k(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,m=new Array(a);m[0]=d;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[s]="string"==typeof e?e:o,m[1]=i;for(var u=2;u<a;u++)m[u]=n[u];return r.createElement.apply(null,m)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},96832:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>m,default:()=>k,frontMatter:()=>a,metadata:()=>i,toc:()=>u});var r=n(87462),o=(n(67294),n(3905));const a={description:"Author: @wingkwong | https://leetcode.com/problems/maximum-product-after-k-increments/"},m="2233 - Maximum Product After K Increments (Medium)",i={unversionedId:"2200-2299/maximum-product-after-k-increments-medium",id:"2200-2299/maximum-product-after-k-increments-medium",title:"2233 - Maximum Product After K Increments (Medium)",description:"Author: @wingkwong | https://leetcode.com/problems/maximum-product-after-k-increments/",source:"@site/solutions/2200-2299/2233-maximum-product-after-k-increments-medium.md",sourceDirName:"2200-2299",slug:"/2200-2299/maximum-product-after-k-increments-medium",permalink:"/solutions/2200-2299/maximum-product-after-k-increments-medium",draft:!1,editUrl:"https://github.com/wingkwong/leetcode-the-hard-way/tree/main/solutions/2200-2299/2233-maximum-product-after-k-increments-medium.md",tags:[],version:"current",sidebarPosition:2233,frontMatter:{description:"Author: @wingkwong | https://leetcode.com/problems/maximum-product-after-k-increments/"},sidebar:"tutorialSidebar",previous:{title:"2232 -  Minimize Result by Adding Parentheses to Expression (Medium)",permalink:"/solutions/2200-2299/minimize-result-by-adding-parentheses-to-expression-medium"},next:{title:"2235 - Add Two Integers (Easy)",permalink:"/solutions/2200-2299/add-two-integers-easy"}},p={},u=[{value:"Problem Link",id:"problem-link",level:2},{value:"Problem Statement",id:"problem-statement",level:2},{value:"Approach 1: Priority Queue",id:"approach-1-priority-queue",level:2}],l=(s="SolutionAuthor",function(e){return console.warn("Component "+s+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",e)});var s;const c={toc:u},d="wrapper";function k(e){let{components:t,...n}=e;return(0,o.kt)(d,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"2233---maximum-product-after-k-increments-medium"},"2233 - Maximum Product After K Increments (Medium)"),(0,o.kt)("h2",{id:"problem-link"},"Problem Link"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/maximum-product-after-k-increments/"},"https://leetcode.com/problems/maximum-product-after-k-increments/")),(0,o.kt)("h2",{id:"problem-statement"},"Problem Statement"),(0,o.kt)("p",null,"You are given an array of non-negative integers ",(0,o.kt)("inlineCode",{parentName:"p"},"nums")," and an integer ",(0,o.kt)("inlineCode",{parentName:"p"},"k"),". In one operation, you may choose ",(0,o.kt)("strong",{parentName:"p"},"any")," element from ",(0,o.kt)("inlineCode",{parentName:"p"},"nums")," and ",(0,o.kt)("strong",{parentName:"p"},"increment")," it by ",(0,o.kt)("inlineCode",{parentName:"p"},"1"),"."),(0,o.kt)("p",null,"Return ",(0,o.kt)("em",{parentName:"p"},"the ",(0,o.kt)("strong",{parentName:"em"},"maximum"),"  ",(0,o.kt)("strong",{parentName:"em"},"product")," of")," ",(0,o.kt)("inlineCode",{parentName:"p"},"nums")," ",(0,o.kt)("em",{parentName:"p"},"after ",(0,o.kt)("strong",{parentName:"em"},"at most")," ")," ",(0,o.kt)("inlineCode",{parentName:"p"},"k")," ",(0,o.kt)("em",{parentName:"p"},"operations.")," Since the answer may be very large, return it ",(0,o.kt)("strong",{parentName:"p"},"modulo")," ",(0,o.kt)("inlineCode",{parentName:"p"},"109 + 7"),"."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Example 1:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Input: nums = [0,4], k = 5\nOutput: 20\nExplanation: Increment the first number 5 times.\nNow nums = [5, 4], with a product of 5 * 4 = 20.\nIt can be shown that 20 is maximum product possible, so we return 20.\nNote that there may be other ways to increment nums to have the maximum product.\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Example 2:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Input: nums = [6,3,3,2], k = 2\nOutput: 216\nExplanation: Increment the second number 1 time and increment the fourth number 1 time.\nNow nums = [6, 4, 3, 3], with a product of 6 * 4 * 3 * 3 = 216.\nIt can be shown that 216 is maximum product possible, so we return 216.\nNote that there may be other ways to increment nums to have the maximum product.\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Constraints:")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"1 <= nums.length, k <= 10^5")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"0 <= nums[i] <= 10^6"))),(0,o.kt)("h2",{id:"approach-1-priority-queue"},"Approach 1: Priority Queue"),(0,o.kt)("p",null,"We should increase the smallest element every time."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Let's say $$x > y$$. If we add it to the larger value $$x$$, we got $$(x + 1) ",(0,o.kt)("em",{parentName:"p"}," y = x ")," y + y$$. If we add it to the smaller value $$y$$, then we got $$x ",(0,o.kt)("em",{parentName:"p"}," (y + 1) = x"),"y+x$$. We can see that both got $$x ",(0,o.kt)("em",{parentName:"p"}," y$$ and we conclude that $$x ")," y + x > x  * y + y$$.")),(0,o.kt)("p",null,"However, we cannot sort it every time after the increment as it takes too much time. Instead, we can use priority queue to maintain the order."),(0,o.kt)(l,{name:"@wingkwong",mdxType:"SolutionAuthor"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    int maximumProduct(vector<int>& nums, int k) {\n        int M = 1e9 + 7;\n        priority_queue<int, vector<int>, greater<int>> pq(nums.begin(), nums.end());\n        while (k--) {\n            int mi = pq.top(); pq.pop();\n            pq.push(mi + 1);\n        }\n        long long p = 1;\n        for (auto x : nums) p = (p * x) % M;\n        return p;\n    }\n};\n")))}k.isMDXComponent=!0}}]);