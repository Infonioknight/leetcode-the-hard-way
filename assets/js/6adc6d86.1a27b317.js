"use strict";(self.webpackChunkleetcode_the_hard_way=self.webpackChunkleetcode_the_hard_way||[]).push([[29707],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>g});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function m(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,l=m(e,["components","mdxType","originalType","parentName"]),u=p(n),d=r,g=u["".concat(s,".").concat(d)]||u[d]||c[d]||o;return n?a.createElement(g,i(i({ref:t},l),{},{components:n})):a.createElement(g,i({ref:t},l))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=d;var m={};for(var s in t)hasOwnProperty.call(t,s)&&(m[s]=t[s]);m.originalType=e,m[u]="string"==typeof e?e:r,i[1]=m;for(var p=2;p<o;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},53793:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>g,frontMatter:()=>o,metadata:()=>m,toc:()=>p});var a=n(87462),r=(n(67294),n(3905));const o={description:"Author: @wingkwong | https://leetcode.com/problems/minimum-number-of-steps-to-make-two-strings-anagram/",tags:["Hash Map"]},i="1347 - Minimum Number of Steps to Make Two Strings Anagram (Easy)",m={unversionedId:"1300-1399/minimum-number-of-steps-to-make-two-strings-anagram-medium",id:"1300-1399/minimum-number-of-steps-to-make-two-strings-anagram-medium",title:"1347 - Minimum Number of Steps to Make Two Strings Anagram (Easy)",description:"Author: @wingkwong | https://leetcode.com/problems/minimum-number-of-steps-to-make-two-strings-anagram/",source:"@site/solutions/1300-1399/1347-minimum-number-of-steps-to-make-two-strings-anagram-medium.md",sourceDirName:"1300-1399",slug:"/1300-1399/minimum-number-of-steps-to-make-two-strings-anagram-medium",permalink:"/solutions/1300-1399/minimum-number-of-steps-to-make-two-strings-anagram-medium",draft:!1,editUrl:"https://github.com/wingkwong/leetcode-the-hard-way/tree/main/solutions/1300-1399/1347-minimum-number-of-steps-to-make-two-strings-anagram-medium.md",tags:[{label:"Hash Map",permalink:"/solutions/tags/hash-map"}],version:"current",sidebarPosition:1347,frontMatter:{description:"Author: @wingkwong | https://leetcode.com/problems/minimum-number-of-steps-to-make-two-strings-anagram/",tags:["Hash Map"]},sidebar:"tutorialSidebar",previous:{title:"1346 - Check If N and Its Double Exist (Easy)",permalink:"/solutions/1300-1399/check-if-n-and-its-double-exist-easy"},next:{title:"1349 - Maximum Students Taking Exam (Hard)",permalink:"/solutions/1300-1399/maximum-students-taking-exam-hard"}},s={},p=[{value:"Problem Link",id:"problem-link",level:2},{value:"Problem Statement",id:"problem-statement",level:2},{value:"Approach 1: Hash Map",id:"approach-1-hash-map",level:2}],l=(u="SolutionAuthor",function(e){return console.warn("Component "+u+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",e)});var u;const c={toc:p},d="wrapper";function g(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"1347---minimum-number-of-steps-to-make-two-strings-anagram-easy"},"1347 - Minimum Number of Steps to Make Two Strings Anagram (Easy)"),(0,r.kt)("h2",{id:"problem-link"},"Problem Link"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/minimum-number-of-steps-to-make-two-strings-anagram/"},"https://leetcode.com/problems/minimum-number-of-steps-to-make-two-strings-anagram/")),(0,r.kt)("h2",{id:"problem-statement"},"Problem Statement"),(0,r.kt)("p",null,"You are given two strings of the same length ",(0,r.kt)("inlineCode",{parentName:"p"},"s")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"t"),". In one step you can choose ",(0,r.kt)("strong",{parentName:"p"},"any character")," of ",(0,r.kt)("inlineCode",{parentName:"p"},"t")," and replace it with ",(0,r.kt)("strong",{parentName:"p"},"another character"),"."),(0,r.kt)("p",null,"Return ",(0,r.kt)("em",{parentName:"p"},"the minimum number of steps")," to make ",(0,r.kt)("inlineCode",{parentName:"p"},"t")," an anagram of ",(0,r.kt)("inlineCode",{parentName:"p"},"s"),"."),(0,r.kt)("p",null,"An ",(0,r.kt)("strong",{parentName:"p"},"Anagram")," of a string is a string that contains the same characters with a different (or the same) ordering."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example 1:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'Input: s = "bab", t = "aba"\nOutput: 1\nExplanation: Replace the first \'a\' in t with b, t = "bba" which is anagram of s.\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example 2:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Input: s = \"leetcode\", t = \"practice\"\nOutput: 5\nExplanation: Replace 'p', 'r', 'a', 'i' and 'c' from t with proper characters to make t anagram of s.\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example 3:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'Input: s = "anagram", t = "mangaar"\nOutput: 0\nExplanation: "anagram" and "mangaar" are anagrams. \n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Constraints:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"1 <= s.length <= 5 * 10^4")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"s.length == t.length")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"s")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"t")," consist of lowercase English letters only.")),(0,r.kt)("h2",{id:"approach-1-hash-map"},"Approach 1: Hash Map"),(0,r.kt)(l,{name:"@wingkwong",mdxType:"SolutionAuthor"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    int minSteps(string s, string t) {\n        int ans = 0;\n        unordered_map<int, int> m;\n        // Count the frequency of characters of each string.\n        // Loop over all characters if the frequency of a character in t is less than the frequency of the same character in s\n        // then add the difference between the frequencies to the answer.\n        for (auto x : s) m[x - 'a']++;\n        for (auto x : t) m[x - 'a']--;\n        for (auto x : m) if (x.second > 0) ans += x.second;\n        return ans;\n    }\n};\n")))}g.isMDXComponent=!0}}]);