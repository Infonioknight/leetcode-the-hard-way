"use strict";(self.webpackChunkleetcode_the_hard_way=self.webpackChunkleetcode_the_hard_way||[]).push([[99062],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>g});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(r),m=o,g=u["".concat(l,".").concat(m)]||u[m]||d[m]||a;return r?n.createElement(g,i(i({ref:t},p),{},{components:r})):n.createElement(g,i({ref:t},p))}));function g(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:o,i[1]=s;for(var c=2;c<a;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},50085:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>y,frontMatter:()=>a,metadata:()=>s,suggestedProblems:()=>p,toc:()=>c});var n=r(87462),o=(r(67294),r(3905));const a={title:"Introduction",description:"Introduction and overview of sorting",hide_table_of_contents:!0,sidebar_position:1,keywords:["leetcode","tutorial","sorting","algorithm"]},i=void 0,s={unversionedId:"basic-topics/sorting/introduction",id:"basic-topics/sorting/introduction",title:"Introduction",description:"Introduction and overview of sorting",source:"@site/tutorials/basic-topics/sorting/introduction.md",sourceDirName:"basic-topics/sorting",slug:"/basic-topics/sorting/introduction",permalink:"/tutorials/basic-topics/sorting/introduction",draft:!1,editUrl:"https://github.com/wingkwong/leetcode-the-hard-way/tree/main/tutorials/basic-topics/sorting/introduction.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Introduction",description:"Introduction and overview of sorting",hide_table_of_contents:!0,sidebar_position:1,keywords:["leetcode","tutorial","sorting","algorithm"]},sidebar:"tutorialSidebar",previous:{title:"Sorting",permalink:"/tutorials/category/sorting"},next:{title:"Bubble Sort",permalink:"/tutorials/basic-topics/sorting/bubble-sort"}},l={},c=[{value:"Overview",id:"overview",level:2}],p=[{problemName:"0921 - Sort an Array",difficulty:"Medium",leetCodeLink:"https://leetcode.com/problems/sort-an-array/",solutionLink:"../../solutions/0900-0999/sort-an-array-medium"}],u=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",t)},d=u("TutorialAuthors"),m=u("Table"),g={toc:c,suggestedProblems:p},f="wrapper";function y(e){let{components:t,...r}=e;return(0,o.kt)(f,(0,n.Z)({},g,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)(d,{names:"@wingkwong",mdxType:"TutorialAuthors"}),(0,o.kt)("h2",{id:"overview"},"Overview"),(0,o.kt)("p",null,"Sorting refers to rearranging elements in a specific order. The most common order is either ascending or descending. There are a lot of algorithms to sort the array with different time complexity."),(0,o.kt)("p",null,"In C++, if define a static array of N elements of type int such as $$a","[4]","$$ you can sort like as below where $$N$$ is the number of elements to be sorted."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"sort(a, a + N);\n")),(0,o.kt)("p",null,"If you want to sort for a specific range $$[x, y)$$,  then use"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"sort(a + x, a + y);\n")),(0,o.kt)("p",null,"For dynamic array, we do in such way"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"sort(a.begin(), a.end());\n")),(0,o.kt)("p",null,"If you want to sort for a specific range $$[x, y)$$,  then use"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"sort(a.begin() + x, a.begin() + y);\n")),(0,o.kt)("p",null,"To sort in an decreasing order,"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"sort(a.begin(), a.end(), greater<int>());\n")),(0,o.kt)("p",null,"By default, ",(0,o.kt)("inlineCode",{parentName:"p"},"sort()")," sorts the elements in the range $$[x, y)$$ into ascending order. If the container includes pairs, tuples or array\\<int, N>, it first sorts the first element, then the second element if there is a tie and so on. For example, the following comparator is same as ",(0,o.kt)("inlineCode",{parentName:"p"},"sort(a.begin(), a.end());"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"sort(a.begin(), a.end(), [&](const array<int, 3>& x, const array<int, 3>& y) {\n    return (\n        (x[0] < y[0]) || \n        (x[0] == y[0] && x[1] < y[1]) ||\n        (x[0] == y[0] && x[1] == y[1] || x[2] < y[2])\n    );\n});\n")),(0,o.kt)(m,{title:"Suggested Problems",data:p,mdxType:"Table"}))}y.isMDXComponent=!0}}]);