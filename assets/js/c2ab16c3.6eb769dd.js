"use strict";(self.webpackChunkleetcode_the_hard_way=self.webpackChunkleetcode_the_hard_way||[]).push([[60290],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>d});var r=t(67294);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,l=function(e,n){if(null==e)return{};var t,r,l={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(l[t]=e[t]);return l}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var u=r.createContext({}),s=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},p=function(e){var n=s(e.components);return r.createElement(u.Provider,{value:n},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},h=r.forwardRef((function(e,n){var t=e.components,l=e.mdxType,o=e.originalType,u=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),m=s(t),h=l,d=m["".concat(u,".").concat(h)]||m[h]||c[h]||o;return t?r.createElement(d,a(a({ref:n},p),{},{components:t})):r.createElement(d,a({ref:n},p))}));function d(e,n){var t=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var o=t.length,a=new Array(o);a[0]=h;var i={};for(var u in n)hasOwnProperty.call(n,u)&&(i[u]=n[u]);i.originalType=e,i[m]="string"==typeof e?e:l,a[1]=i;for(var s=2;s<o;s++)a[s]=t[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}h.displayName="MDXCreateElement"},38546:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>a,default:()=>g,frontMatter:()=>o,metadata:()=>i,toc:()=>s});var r=t(87462),l=(t(67294),t(3905));const o={description:"Author: @wingkwong | https://leetcode.com/problems/guess-number-higher-or-lower/"},a="0374 - Guess Number Higher or Lower (Easy)",i={unversionedId:"0300-0399/guess-number-higher-or-lower-easy",id:"0300-0399/guess-number-higher-or-lower-easy",title:"0374 - Guess Number Higher or Lower (Easy)",description:"Author: @wingkwong | https://leetcode.com/problems/guess-number-higher-or-lower/",source:"@site/solutions/0300-0399/0374-guess-number-higher-or-lower-easy.md",sourceDirName:"0300-0399",slug:"/0300-0399/guess-number-higher-or-lower-easy",permalink:"/solutions/0300-0399/guess-number-higher-or-lower-easy",draft:!1,editUrl:"https://github.com/wingkwong/leetcode-the-hard-way/tree/main/solutions/0300-0399/0374-guess-number-higher-or-lower-easy.md",tags:[],version:"current",sidebarPosition:374,frontMatter:{description:"Author: @wingkwong | https://leetcode.com/problems/guess-number-higher-or-lower/"},sidebar:"tutorialSidebar",previous:{title:"0367 - Valid Perfect Square (Easy)",permalink:"/solutions/0300-0399/valid-perfect-square-easy"},next:{title:"0377 - Combination Sum IV (Medium)",permalink:"/solutions/0300-0399/combination-sum-iv-medium"}},u={},s=[{value:"Problem Link",id:"problem-link",level:2},{value:"Problem Statement",id:"problem-statement",level:2},{value:"Approach 1: Binary Search",id:"approach-1-binary-search",level:2}],p=e=>function(n){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,l.kt)("div",n)},m=p("Tabs"),c=p("TabItem"),h=p("SolutionAuthor"),d={toc:s},k="wrapper";function g(e){let{components:n,...t}=e;return(0,l.kt)(k,(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"0374---guess-number-higher-or-lower-easy"},"0374 - Guess Number Higher or Lower (Easy)"),(0,l.kt)("h2",{id:"problem-link"},"Problem Link"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/guess-number-higher-or-lower/"},"https://leetcode.com/problems/guess-number-higher-or-lower/")),(0,l.kt)("h2",{id:"problem-statement"},"Problem Statement"),(0,l.kt)("p",null,"We are playing the Guess Game. The game is as follows:"),(0,l.kt)("p",null,"I pick a number from ",(0,l.kt)("inlineCode",{parentName:"p"},"1")," to ",(0,l.kt)("inlineCode",{parentName:"p"},"n"),". You have to guess which number I picked."),(0,l.kt)("p",null,"Every time you guess wrong, I will tell you whether the number I picked is higher or lower than your guess."),(0,l.kt)("p",null,"You call a pre-defined API ",(0,l.kt)("inlineCode",{parentName:"p"},"int guess(int num)"),", which returns three possible results:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"-1"),": Your guess is higher than the number I picked (i.e. ",(0,l.kt)("inlineCode",{parentName:"li"},"num > pick"),")."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"1"),": Your guess is lower than the number I picked (i.e. ",(0,l.kt)("inlineCode",{parentName:"li"},"num < pick"),")."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"0"),": your guess is equal to the number I picked (i.e. ",(0,l.kt)("inlineCode",{parentName:"li"},"num == pick"),").")),(0,l.kt)("p",null,"Return ",(0,l.kt)("em",{parentName:"p"},"the number that I picked"),"."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example 1:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"Input: n = 10, pick = 6\nOutput: 6\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example 2:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"Input: n = 1, pick = 1\nOutput: 1\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example 3:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"Input: n = 2, pick = 1\nOutput: 1\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Constraints:")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"1 <= n <= 2^31 - 1")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"1 <= pick <= n"))),(0,l.kt)("h2",{id:"approach-1-binary-search"},"Approach 1: Binary Search"),(0,l.kt)("p",null,"See ",(0,l.kt)("a",{parentName:"p",href:"../../tutorials/basic-topics/binary-search"},"Binary Search")," for basic understanding."),(0,l.kt)(m,{mdxType:"Tabs"},(0,l.kt)(c,{value:"cpp",label:"C++",mdxType:"TabItem"},(0,l.kt)(h,{name:"@wingkwong",mdxType:"SolutionAuthor"}),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"/** \n * Forward declaration of guess API.\n * @param  num   your guess\n * @return   -1 if num is higher than the picked number\n *           1 if num is lower than the picked number\n *               otherwise return 0\n * int guess(int num);\n */\n\nclass Solution {\npublic:\n    int guessNumber(int n) {\n        int l = 1, r = n;\n        while (l < r) {\n            // middle point\n            int m = l + (r - l) / 2;\n            // check the result\n            int x = guess(m);\n            // found the answer\n            if (x == 0) return m;\n            // exclude m\n            else if (x == 1) l = m + 1;\n            // include m\n            else r = m;\n        }\n        return l;\n    }\n};\n"))),(0,l.kt)(c,{value:"rs",label:"Rust",mdxType:"TabItem"},(0,l.kt)(h,{name:"@wingkwong",mdxType:"SolutionAuthor"}),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rs"},"impl Solution {\n    unsafe fn guessNumber(n: i32) -> i32 {\n        let mut l = 1;\n        let mut r = n;\n        while l < r {\n            let m = l + (r - l) / 2;\n            let x = guess(m);\n            if x == 1 {\n                l = m + 1;\n            } else {\n                r = m;\n            }\n        }\n        l\n    }\n}\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rs"},"impl Solution {\n    unsafe fn guessNumber(n: i32) -> i32 {\n        let mut l = 1;\n        let mut r = n;\n        loop {\n            let m = l + (r - l) / 2;\n            match guess(m) {\n                -1 => r = m - 1,\n                1 => l = m + 1,\n                _ => return m\n                \n            };\n        }\n    }\n}\n")))))}g.isMDXComponent=!0}}]);