"use strict";(self.webpackChunkleetcode_the_hard_way=self.webpackChunkleetcode_the_hard_way||[]).push([[10720],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>f});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),u=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},m=function(e){var t=u(e.components);return r.createElement(p.Provider,{value:t},e.children)},s="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),s=u(n),c=a,f=s["".concat(p,".").concat(c)]||s[c]||d[c]||o;return n?r.createElement(f,i(i({ref:t},m),{},{components:n})):r.createElement(f,i({ref:t},m))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=c;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[s]="string"==typeof e?e:a,i[1]=l;for(var u=2;u<o;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},27582:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>f,frontMatter:()=>o,metadata:()=>l,toc:()=>u});var r=n(87462),a=(n(67294),n(3905));const o={description:"Author: @wingkwong | https://leetcode.com/problems/delete-and-earn/"},i="0740 - Delete and Earn (Medium)",l={unversionedId:"0700-0799/delete-and-earn-medium",id:"0700-0799/delete-and-earn-medium",title:"0740 - Delete and Earn (Medium)",description:"Author: @wingkwong | https://leetcode.com/problems/delete-and-earn/",source:"@site/solutions/0700-0799/0740-delete-and-earn-medium.md",sourceDirName:"0700-0799",slug:"/0700-0799/delete-and-earn-medium",permalink:"/solutions/0700-0799/delete-and-earn-medium",draft:!1,editUrl:"https://github.com/wingkwong/leetcode-the-hard-way/tree/main/solutions/0700-0799/0740-delete-and-earn-medium.md",tags:[],version:"current",sidebarPosition:740,frontMatter:{description:"Author: @wingkwong | https://leetcode.com/problems/delete-and-earn/"},sidebar:"tutorialSidebar",previous:{title:"0739 - Daily Temperatures",permalink:"/solutions/0700-0799/daily-temperatures-medium"},next:{title:"0743 - Network Delay Time (Medium)",permalink:"/solutions/0700-0799/network-delay-time-medium"}},p={},u=[{value:"Problem Link",id:"problem-link",level:2},{value:"Problem Statement",id:"problem-statement",level:2},{value:"Approach 1: DP",id:"approach-1-dp",level:2}],m=(s="SolutionAuthor",function(e){return console.warn("Component "+s+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.kt)("div",e)});var s;const d={toc:u},c="wrapper";function f(e){let{components:t,...n}=e;return(0,a.kt)(c,(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"0740---delete-and-earn-medium"},"0740 - Delete and Earn (Medium)"),(0,a.kt)("h2",{id:"problem-link"},"Problem Link"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/delete-and-earn/"},"https://leetcode.com/problems/delete-and-earn/")),(0,a.kt)("h2",{id:"problem-statement"},"Problem Statement"),(0,a.kt)("p",null,"You are given an integer array ",(0,a.kt)("inlineCode",{parentName:"p"},"nums"),". You want to maximize the number of points you get by performing the following operation any number of times:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Pick any ",(0,a.kt)("inlineCode",{parentName:"li"},"nums[i]")," and delete it to earn ",(0,a.kt)("inlineCode",{parentName:"li"},"nums[i]")," points. Afterwards, you must delete ",(0,a.kt)("strong",{parentName:"li"},"every")," element equal to ",(0,a.kt)("inlineCode",{parentName:"li"},"nums[i] - 1")," and ",(0,a.kt)("strong",{parentName:"li"},"every")," element equal to ",(0,a.kt)("inlineCode",{parentName:"li"},"nums[i] + 1"),".")),(0,a.kt)("p",null,"Return ",(0,a.kt)("em",{parentName:"p"},"the ",(0,a.kt)("strong",{parentName:"em"},"maximum number of points")," you can earn by applying the above operation some number of times"),"."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Example 1:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Input: nums = [3,4,2]\nOutput: 6\nExplanation: You can perform the following operations:\n- Delete 4 to earn 4 points. Consequently, 3 is also deleted. nums = [2].\n- Delete 2 to earn 2 points. nums = [].\nYou earn a total of 6 points.\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Example 2:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Input: nums = [2,2,3,3,3,4]\nOutput: 9\nExplanation: You can perform the following operations:\n- Delete a 3 to earn 3 points. All 2's and 4's are also deleted. nums = [3,3].\n- Delete a 3 again to earn 3 points. nums = [3].\n- Delete a 3 once more to earn 3 points. nums = [].\nYou earn a total of 9 points.\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Constraints:")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"1 <= nums.length <= 2 * 10^4")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"1 <= nums[i] <= 10^4"))),(0,a.kt)("h2",{id:"approach-1-dp"},"Approach 1: DP"),(0,a.kt)("p",null,"Let $$dp","[i]","$$ be the maximum number of points you can earn by apply the operation till number $$i$$."),(0,a.kt)("p",null,"If we pick $$1$$, we can earn $$dp","[1]","$$. If we pick $$2$$, we can earn $$dp","[2]","$$. If we pick $$3$$, then we cannot pick $$2$$ but we can earn $$dp","[3]","$$ + $$dp","[1]","$$. If we don't pick it, then the max point we can earn is the previous state which is $$dp","[2]","$$."),(0,a.kt)("p",null,"Therefore, the transition will be $$dp","[i]"," = max(dp","[i - 1]",", dp","[i - 2]"," + dp","[i]",")$$. We either take the previous state (i.e. not pick the current number) or take the current number, skip the previous state and get the two states before the current one."),(0,a.kt)(m,{name:"@wingkwong",mdxType:"SolutionAuthor"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    int deleteAndEarn(vector<int>& nums) {\n        // we find out the max value \n        // instead of trying from 1 to 10 ^ 4\n        int n = *max_element(nums.begin(), nums.end());\n        // init dp\n        vector<int> dp(n + 1);\n        // dp[i] = max number of points if we pick number i\n        for (auto x : nums) dp[x] += x;\n        for (int i = 2; i <= n; i++) {\n            // if we don't pick the current number, \n            // then take the previous state (i.e. dp[i - 1])\n            // else, we pick the current number \n            // we earn dp[i] plus the 2 states before that (i.e. dp[i - 2])\n            dp[i] = max(dp[i - 1], dp[i - 2] + dp[i]);\n        }\n        return dp[n];\n    }\n};\n")))}f.isMDXComponent=!0}}]);