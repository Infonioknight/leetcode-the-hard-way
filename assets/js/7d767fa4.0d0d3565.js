"use strict";(self.webpackChunkleetcode_the_hard_way=self.webpackChunkleetcode_the_hard_way||[]).push([[75548],{3905:(e,t,n)=>{n.d(t,{Zo:()=>i,kt:()=>k});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),m=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},i=function(e){var t=m(e.components);return a.createElement(l.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,l=e.parentName,i=p(e,["components","mdxType","originalType","parentName"]),u=m(n),h=r,k=u["".concat(l,".").concat(h)]||u[h]||c[h]||s;return n?a.createElement(k,o(o({ref:t},i),{},{components:n})):a.createElement(k,o({ref:t},i))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,o=new Array(s);o[0]=h;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p[u]="string"==typeof e?e:r,o[1]=p;for(var m=2;m<s;m++)o[m]=n[m];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},7090:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>y,frontMatter:()=>s,metadata:()=>p,toc:()=>m});var a=n(87462),r=(n(67294),n(3905));const s={description:"Author: @vigneshshiv, @wingkwong | https://leetcode.com/problems/happy-number/",tags:["Array","Math","Two Pointers"]},o="0202 - Happy Number (Easy)",p={unversionedId:"0200-0299/happy-number-easy",id:"0200-0299/happy-number-easy",title:"0202 - Happy Number (Easy)",description:"Author: @vigneshshiv, @wingkwong | https://leetcode.com/problems/happy-number/",source:"@site/solutions/0200-0299/0202-happy-number-easy.md",sourceDirName:"0200-0299",slug:"/0200-0299/happy-number-easy",permalink:"/solutions/0200-0299/happy-number-easy",draft:!1,editUrl:"https://github.com/wingkwong/leetcode-the-hard-way/tree/main/solutions/0200-0299/0202-happy-number-easy.md",tags:[{label:"Array",permalink:"/solutions/tags/array"},{label:"Math",permalink:"/solutions/tags/math"},{label:"Two Pointers",permalink:"/solutions/tags/two-pointers"}],version:"current",sidebarPosition:202,frontMatter:{description:"Author: @vigneshshiv, @wingkwong | https://leetcode.com/problems/happy-number/",tags:["Array","Math","Two Pointers"]},sidebar:"tutorialSidebar",previous:{title:"0200 - Number of Islands (Medium)",permalink:"/solutions/0200-0299/number-of-islands-medium"},next:{title:"0204 - Count Primes",permalink:"/solutions/0200-0299/count-primes"}},l={},m=[{value:"Problem Link",id:"problem-link",level:2},{value:"Problem Statement",id:"problem-statement",level:2},{value:"Approach 1: Floyd&#39;s Tortoise and Hare",id:"approach-1-floyds-tortoise-and-hare",level:2}],i=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",t)},u=i("Tabs"),c=i("TabItem"),h=i("SolutionAuthor"),k={toc:m},d="wrapper";function y(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,a.Z)({},k,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"0202---happy-number-easy"},"0202 - Happy Number (Easy)"),(0,r.kt)("h2",{id:"problem-link"},"Problem Link"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/happy-number/"},"https://leetcode.com/problems/happy-number/")),(0,r.kt)("h2",{id:"problem-statement"},"Problem Statement"),(0,r.kt)("p",null,"Write an algorithm to determine if a number ",(0,r.kt)("inlineCode",{parentName:"p"},"n")," is happy."),(0,r.kt)("p",null,"A ",(0,r.kt)("strong",{parentName:"p"},"happy number")," is a number defined by the following process:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Starting with any positive integer, replace the number by the sum of the squares of its digits."),(0,r.kt)("li",{parentName:"ul"},"Repeat the process until the number equals 1 (where it will stay), or it ",(0,r.kt)("strong",{parentName:"li"},"loops endlessly in a cycle")," which does not include 1."),(0,r.kt)("li",{parentName:"ul"},"Those numbers for which this process ",(0,r.kt)("strong",{parentName:"li"},"ends in 1")," are happy.")),(0,r.kt)("p",null,"Return ",(0,r.kt)("inlineCode",{parentName:"p"},"true")," ",(0,r.kt)("em",{parentName:"p"},"if")," ",(0,r.kt)("inlineCode",{parentName:"p"},"n")," ",(0,r.kt)("em",{parentName:"p"},"is a happy number, and")," ",(0,r.kt)("inlineCode",{parentName:"p"},"false")," ",(0,r.kt)("em",{parentName:"p"},"if not"),"."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example 1:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Input: n = 19\nOutput: true\nExplanation:\n12 + 92 = 82\n82 + 22 = 68\n62 + 82 = 100\n12 + 02 + 02 = 1\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example 2:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Input: n = 2\nOutput: false\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Constraints:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"1 <= n <= 2^31 - 1"))),(0,r.kt)("h2",{id:"approach-1-floyds-tortoise-and-hare"},"Approach 1: Floyd's Tortoise and Hare"),(0,r.kt)("p",null,"As stated clearly in the problem, ",(0,r.kt)("strong",{parentName:"p"},"loops endlessly in a cycle"),", So we can solve this by using Floyd's Tortoise and Hare algorithm."),(0,r.kt)("p",null,"It's a simple cycle detection algorithm, where one pointer traverses twice as fast as another, once two pointers meet, we can trace back to where the cycle begins."),(0,r.kt)("p",null,"Time Complexity: ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mi",{parentName:"mrow"},"O"),(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,r.kt)("mi",{parentName:"mrow"},"m"),(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"O(m)")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"O"),(0,r.kt)("span",{parentName:"span",className:"mopen"},"("),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"m"),(0,r.kt)("span",{parentName:"span",className:"mclose"},")"))))),", where ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mi",{parentName:"mrow"},"m")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"m")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.4306em"}}),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"m")))))," - # of cycles"),(0,r.kt)("p",null,"Space complexity: ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mi",{parentName:"mrow"},"O"),(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,r.kt)("mn",{parentName:"mrow"},"1"),(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"O(1)")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"O"),(0,r.kt)("span",{parentName:"span",className:"mopen"},"("),(0,r.kt)("span",{parentName:"span",className:"mord"},"1"),(0,r.kt)("span",{parentName:"span",className:"mclose"},")")))))),(0,r.kt)(u,{mdxType:"Tabs"},(0,r.kt)(c,{value:"java",label:"Java",mdxType:"TabItem"},(0,r.kt)(h,{name:"@vigneshshiv",mdxType:"SolutionAuthor"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"class Solution {\n    public boolean isHappy(int n) {\n        int slow = n, fast = n;\n        do {\n            slow = digitSquareSum(slow);\n            fast = digitSquareSum(digitSquareSum(fast));\n        } while (slow != fast);\n        return slow == 1 ? true : false;\n    }\n    \n    public int digitSquareSum(int num) {\n        int ans = 0;\n        while (num > 0) {\n            int digit = num % 10;\n            ans += digit * digit;\n            num /= 10;\n        }\n        return ans;\n    }\n}\n"))),(0,r.kt)(c,{value:"rs",label:"Rust",mdxType:"TabItem"},(0,r.kt)(h,{name:"@wingkwong",mdxType:"SolutionAuthor"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rs"},"impl Solution {\n    fn nxt(mut n: i32) -> i32 {\n        let mut res = 0;\n        while n > 0 {\n            let d = n % 10;\n            res += d * d;\n            n /= 10;\n        }\n        res\n    }\n    \n    pub fn is_happy(n: i32) -> bool {\n        let mut slow = n;\n        let mut fast = Solution::nxt(n);\n        while fast != 1 && slow != fast {\n            slow = Solution::nxt(slow);\n            fast = Solution::nxt(Solution::nxt(fast));\n        }\n        return fast == 1;\n    }\n}\n"))),(0,r.kt)(c,{value:"python",label:"Python",mdxType:"TabItem"},(0,r.kt)(h,{name:"@ColeB2",mdxType:"SolutionAuthor"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-py"},"class Solution:\n    def next_num(self, n: int) -> int:\n        # initialize num as 0\n        num = 0\n        # while our number exists: loop\n        while n:\n            # add ones digit squared to num\n            num += (n % 10) ** 2\n            # integer division to remove ones digit.\n            n = n // 10\n        return num\n\n    def isHappy(self, n: int) -> bool:\n        ## Cycle Detection - initialize slow/fast pointers\n        slow, fast = n, self.next_num(n)\n        ## Since we will always reach a cycle at some point\n        ## loop until fast reaches slow\n        while slow != fast:\n            # move fast pointer 2 numbers, slow 1.\n            fast = self.next_num(self.next_num(fast))\n            slow = self.next_num(slow)\n        # If the cycle location ends on 1, we are happy, else False.\n        return fast == 1\n")))))}y.isMDXComponent=!0}}]);