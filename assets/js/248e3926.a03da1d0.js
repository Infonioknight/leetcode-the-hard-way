"use strict";(self.webpackChunkleetcode_the_hard_way=self.webpackChunkleetcode_the_hard_way||[]).push([[61875],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>g});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},m="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),m=p(n),c=a,g=m["".concat(l,".").concat(c)]||m[c]||h[c]||i;return n?r.createElement(g,o(o({ref:t},u),{},{components:n})):r.createElement(g,o({ref:t},u))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=c;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[m]="string"==typeof e?e:a,o[1]=s;for(var p=2;p<i;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},30573:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>v,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var r=n(87462),a=(n(67294),n(3905));const i={description:"Author: @dhanu084 | https://leetcode.com/problems/largest-positive-integer-that-exists-with-its-negative/"},o="2441 - Largest Positive Integer That Exists With Its Negative (Easy)",s={unversionedId:"2400-2499/largest-positive-integer-that-exists-with-its-negative-easy",id:"2400-2499/largest-positive-integer-that-exists-with-its-negative-easy",title:"2441 - Largest Positive Integer That Exists With Its Negative (Easy)",description:"Author: @dhanu084 | https://leetcode.com/problems/largest-positive-integer-that-exists-with-its-negative/",source:"@site/solutions/2400-2499/2441-largest-positive-integer-that-exists-with-its-negative-easy.md",sourceDirName:"2400-2499",slug:"/2400-2499/largest-positive-integer-that-exists-with-its-negative-easy",permalink:"/solutions/2400-2499/largest-positive-integer-that-exists-with-its-negative-easy",draft:!1,editUrl:"https://github.com/wingkwong/leetcode-the-hard-way/tree/main/solutions/2400-2499/2441-largest-positive-integer-that-exists-with-its-negative-easy.md",tags:[],version:"current",sidebarPosition:2441,frontMatter:{description:"Author: @dhanu084 | https://leetcode.com/problems/largest-positive-integer-that-exists-with-its-negative/"},sidebar:"tutorialSidebar",previous:{title:"2439 - Minimize Maximum of Array (Medium)",permalink:"/solutions/2400-2499/minimize-maximum-of-array-medium"},next:{title:"2445 - Number of Nodes With Value One (Medium)",permalink:"/solutions/2400-2499/number-of-nodes-with-value-one-medium"}},l={},p=[{value:"Problem Link",id:"problem-link",level:2},{value:"Problem Statement",id:"problem-statement",level:2},{value:"Approach 1: Sorting",id:"approach-1-sorting",level:2},{value:"Approach 2: O(n) approach by maintaing a variable",id:"approach-2-on-approach-by-maintaing-a-variable",level:2}],u=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.kt)("div",t)},m=u("Tabs"),h=u("TabItem"),c=u("SolutionAuthor"),g={toc:p},d="wrapper";function v(e){let{components:t,...n}=e;return(0,a.kt)(d,(0,r.Z)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"2441---largest-positive-integer-that-exists-with-its-negative-easy"},"2441 - Largest Positive Integer That Exists With Its Negative (Easy)"),(0,a.kt)("h2",{id:"problem-link"},"Problem Link"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/largest-positive-integer-that-exists-with-its-negative"},"https://leetcode.com/problems/largest-positive-integer-that-exists-with-its-negative")),(0,a.kt)("h2",{id:"problem-statement"},"Problem Statement"),(0,a.kt)("p",null,"Given an integer array nums that does not contain any zeros, find the largest positive integer k such that -k also exists in the array."),(0,a.kt)("p",null,"Return the positive integer k. If there is no such integer, return -1."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Example 1:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Input: nums = [-1,2,-3,3]\nOutput: 3\nExplanation: 3 is the only valid k we can find in the array.\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Example 2:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Input: nums = [-1,10,6,7,-7,1]\nOutput: 7\nExplanation: Both 1 and 7 have their corresponding negative values in the array. 7 has a larger value.\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Example 3:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Input: nums = [-10,8,6,7,-2,-3]\nOutput: -1\nExplanation: There is no a single valid k, we return -1.\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"}," Constraints ")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"1 <= nums.length <= 1000"),(0,a.kt)("li",{parentName:"ul"},"-1000 <= nums","[i]"," <= 1000"),(0,a.kt)("li",{parentName:"ul"},"nums","[i]"," != 0")),(0,a.kt)("h2",{id:"approach-1-sorting"},"Approach 1: Sorting"),(0,a.kt)("p",null,"Time complexity: $$O(n log n)$$, where n is the length of the array"),(0,a.kt)("p",null,"Space complexity: $$O(n)$$ for set"),(0,a.kt)(m,{mdxType:"Tabs"},(0,a.kt)(h,{value:"py",label:"Python",mdxType:"TabItem"},(0,a.kt)(c,{name:"@dhanu084",mdxType:"SolutionAuthor"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-py"},"class Solution:\n    def findMaxK(self, nums: List[int]) -> int:\n        # add all elements to a set\n        seen = set(nums)\n\n        '''\n            sort the number in reverse order as we need to\n            find the largest number whose negative is\n            present in the array\n        '''\n        for num in sorted(list(nums), reverse = True):\n            if -num in seen:\n                return num\n        # if no negative is found for the maximum return -1\n        return -1\n")))),(0,a.kt)("h2",{id:"approach-2-on-approach-by-maintaing-a-variable"},"Approach 2: O(n) approach by maintaing a variable"),(0,a.kt)("p",null,"Time complexity: $$O(n)$$, where n is the length of the array"),(0,a.kt)("p",null,"Space complexity: $$O(n)$$ for set"),(0,a.kt)(m,{mdxType:"Tabs"},(0,a.kt)(h,{value:"py",label:"Python",mdxType:"TabItem"},(0,a.kt)(c,{name:"@dhanu084",mdxType:"SolutionAuthor"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-py"},"class Solution:\n    def findMaxK(self, nums: List[int]) -> int:\n        seen = set(nums)\n        '''\n            using max_so_far to store the maximum number\n            whose negative is present in the array\n        '''\n        max_so_far = -inf\n        for num in nums:\n            if -num in seen:\n                max_so_far = max(max_so_far, num)\n\n        # if no negative is found for the maximum return -1\n        return max_so_far if max_so_far != -inf else -1\n")))))}v.isMDXComponent=!0}}]);