"use strict";(self.webpackChunkleetcode_the_hard_way=self.webpackChunkleetcode_the_hard_way||[]).push([[6019],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var o=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=o.createContext({}),m=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=m(e.components);return o.createElement(s.Provider,{value:t},e.children)},p="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=m(n),d=r,f=p["".concat(s,".").concat(d)]||p[d]||c[d]||a;return n?o.createElement(f,l(l({ref:t},u),{},{components:n})):o.createElement(f,l({ref:t},u))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,l=new Array(a);l[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[p]="string"==typeof e?e:r,l[1]=i;for(var m=2;m<a;m++)l[m]=n[m];return o.createElement.apply(null,l)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},99613:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>f,frontMatter:()=>a,metadata:()=>i,toc:()=>m});var o=n(87462),r=(n(67294),n(3905));const a={description:"Author: @wingkwong | https://leetcode.com/problems/minimum-rounds-to-complete-all-tasks/"},l="2244 - Minimum Rounds to Complete All Tasks (Medium)",i={unversionedId:"2200-2299/minimum-rounds-to-complete-all-tasks-medium",id:"2200-2299/minimum-rounds-to-complete-all-tasks-medium",title:"2244 - Minimum Rounds to Complete All Tasks (Medium)",description:"Author: @wingkwong | https://leetcode.com/problems/minimum-rounds-to-complete-all-tasks/",source:"@site/solutions/2200-2299/2244-minimum-rounds-to-complete-all-tasks-medium.md",sourceDirName:"2200-2299",slug:"/2200-2299/minimum-rounds-to-complete-all-tasks-medium",permalink:"/solutions/2200-2299/minimum-rounds-to-complete-all-tasks-medium",draft:!1,editUrl:"https://github.com/wingkwong/leetcode-the-hard-way/tree/main/solutions/2200-2299/2244-minimum-rounds-to-complete-all-tasks-medium.md",tags:[],version:"current",sidebarPosition:2244,frontMatter:{description:"Author: @wingkwong | https://leetcode.com/problems/minimum-rounds-to-complete-all-tasks/"},sidebar:"tutorialSidebar",previous:{title:"2243 - Calculate Digit Sum of a String (Easy)",permalink:"/solutions/2200-2299/calculate-digit-sum-of-a-string-easy"},next:{title:"2246 - Longest Path With Different Adjacent Characters (Hard)",permalink:"/solutions/2200-2299/longest-path-with-different-adjacent-characters-hard"}},s={},m=[{value:"Problem Link",id:"problem-link",level:2},{value:"Problem Statement",id:"problem-statement",level:2},{value:"Approach 1: Math",id:"approach-1-math",level:2}],u=(p="SolutionAuthor",function(e){return console.warn("Component "+p+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",e)});var p;const c={toc:m},d="wrapper";function f(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,o.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"2244---minimum-rounds-to-complete-all-tasks-medium"},"2244 - Minimum Rounds to Complete All Tasks (Medium)"),(0,r.kt)("h2",{id:"problem-link"},"Problem Link"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/minimum-rounds-to-complete-all-tasks/"},"https://leetcode.com/problems/minimum-rounds-to-complete-all-tasks/")),(0,r.kt)("h2",{id:"problem-statement"},"Problem Statement"),(0,r.kt)("p",null,"You are given a ",(0,r.kt)("strong",{parentName:"p"},"0-indexed")," integer array ",(0,r.kt)("inlineCode",{parentName:"p"},"tasks"),", where ",(0,r.kt)("inlineCode",{parentName:"p"},"tasks[i]")," represents the difficulty level of a task. In each round, you can complete either 2 or 3 tasks of the ",(0,r.kt)("strong",{parentName:"p"},"same difficulty level"),"."),(0,r.kt)("p",null,"Return ",(0,r.kt)("em",{parentName:"p"},"the ",(0,r.kt)("strong",{parentName:"em"},"minimum")," rounds required to complete all the tasks, or")," ",(0,r.kt)("inlineCode",{parentName:"p"},"-1")," ",(0,r.kt)("em",{parentName:"p"},"if it is not possible to complete all the tasks.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example 1:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Input: tasks = [2,2,3,3,2,4,4,4,4,4]\nOutput: 4\nExplanation: To complete all the tasks, a possible plan is:\n- In the first round, you complete 3 tasks of difficulty level 2. \n- In the second round, you complete 2 tasks of difficulty level 3. \n- In the third round, you complete 3 tasks of difficulty level 4. \n- In the fourth round, you complete 2 tasks of difficulty level 4.  \nIt can be shown that all the tasks cannot be completed in fewer than 4 rounds, so the answer is 4.\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example 2:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Input: tasks = [2,3,3]\nOutput: -1\nExplanation: There is only 1 task of difficulty level 2, but in each round, you can only complete either 2 or 3 tasks of the same difficulty level. Hence, you cannot complete all the tasks, and the answer is -1.\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Constraints:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"1 <= tasks.length <= 10^5")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"1 <= tasks[i] <= 10^9"))),(0,r.kt)("h2",{id:"approach-1-math"},"Approach 1: Math"),(0,r.kt)("p",null,"Count the frequency of each level. If the frequency is $$1$$, then return $$-1$$. Otherwise, we must complete them in some rounds. We first finish $$3$$ tasks multiple times and $$2$$ tasks at most $$2$$ times. Either way, we could finish it in $$ceil(freq / 3)$$ rounds."),(0,r.kt)(u,{name:"@wingkwong",mdxType:"SolutionAuthor"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    int minimumRounds(vector<int>& tasks) {\n        unordered_map<int, int> m;\n        int ans = 0;\n        for (auto x : tasks) m[x]++;\n        for (auto x : m) {\n            if (x.second == 1) return -1;\n            // ceil(a / b) = (a + b - 1) / b\n            ans += (x.second + 2) / 3;\n            // or\n            // ans += (x.second / 3) + ((x.second % 3) != 0);\n            // ans += ceil(x.second / 3.0);\n        }\n        return ans;\n    }\n};\n")))}f.isMDXComponent=!0}}]);