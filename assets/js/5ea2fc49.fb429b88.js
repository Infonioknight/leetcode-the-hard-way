"use strict";(self.webpackChunkleetcode_the_hard_way=self.webpackChunkleetcode_the_hard_way||[]).push([[76326],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return f}});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),u=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=u(e.components);return r.createElement(l.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=u(t),f=a,h=m["".concat(l,".").concat(f)]||m[f]||c[f]||i;return t?r.createElement(h,o(o({ref:n},p),{},{components:t})):r.createElement(h,o({ref:n},p))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=m;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var u=2;u<i;u++)o[u]=t[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},71909:function(e,n,t){t.r(n),t.d(n,{assets:function(){return p},contentTitle:function(){return l},default:function(){return k},frontMatter:function(){return s},metadata:function(){return u},toc:function(){return c}});var r=t(87462),a=t(63366),i=(t(67294),t(3905)),o=["components"],s={description:"Author: @wingkwong | https://leetcode.com/problems/shuffle-the-array/",tags:["Array"]},l="1470 - Shuffle the Array (Easy)",u={unversionedId:"1400-1499/shuffle-the-array-easy",id:"1400-1499/shuffle-the-array-easy",title:"1470 - Shuffle the Array (Easy)",description:"Author: @wingkwong | https://leetcode.com/problems/shuffle-the-array/",source:"@site/solutions/1400-1499/1470-shuffle-the-array-easy.md",sourceDirName:"1400-1499",slug:"/1400-1499/shuffle-the-array-easy",permalink:"/solutions/1400-1499/shuffle-the-array-easy",draft:!1,editUrl:"https://github.com/wingkwong/leetcode-the-hard-way/tree/main/solutions/1400-1499/1470-shuffle-the-array-easy.md",tags:[{label:"Array",permalink:"/solutions/tags/array"}],version:"current",sidebarPosition:1470,frontMatter:{description:"Author: @wingkwong | https://leetcode.com/problems/shuffle-the-array/",tags:["Array"]},sidebar:"tutorialSidebar",previous:{title:"1457 - Pseudo-Palindromic Paths in a Binary Tree (Medium)",permalink:"/solutions/1400-1499/pseudo-palindromic-paths-in-a-binary-tree-medium"},next:{title:"1475 - Final Prices With a Special Discount in a Shop (Easy)",permalink:"/solutions/1400-1499/final-prices-with-a-special-discount-in-a-shop-easy"}},p={},c=[{value:"Problem Link",id:"problem-link",level:2},{value:"Problem Statement",id:"problem-statement",level:2},{value:"Approach 1: One Pass",id:"approach-1-one-pass",level:2}],m=function(e){return function(n){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,i.kt)("div",n)}},f=m("Tabs"),h=m("TabItem"),d=m("SolutionAuthor"),y={toc:c};function k(e){var n=e.components,t=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},y,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"1470---shuffle-the-array-easy"},"1470 - Shuffle the Array (Easy)"),(0,i.kt)("h2",{id:"problem-link"},"Problem Link"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/shuffle-the-array/"},"https://leetcode.com/problems/shuffle-the-array/")),(0,i.kt)("h2",{id:"problem-statement"},"Problem Statement"),(0,i.kt)("p",null,"Given the array ",(0,i.kt)("inlineCode",{parentName:"p"},"nums")," consisting of ",(0,i.kt)("inlineCode",{parentName:"p"},"2n")," elements in the form ",(0,i.kt)("inlineCode",{parentName:"p"},"[x1,x2,...,xn,y1,y2,...,yn]"),"."),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"Return the array in the form")," ",(0,i.kt)("inlineCode",{parentName:"p"},"[x1,y1,x2,y2,...,xn,yn]"),"."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example 1:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Input: nums = [2,5,1,3,4,7], n = 3\nOutput: [2,3,5,4,1,7] \nExplanation: Since x1=2, x2=5, x3=1, y1=3, y2=4, y3=7 then the answer is [2,3,5,4,1,7].\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example 2:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Input: nums = [1,2,3,4,4,3,2,1], n = 4\nOutput: [1,4,2,3,3,2,4,1]\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example 3:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Input: nums = [1,1,2,2], n = 2\nOutput: [1,2,1,2]\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Constraints:")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"1 <= n <= 500")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"nums.length == 2n")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"1 <= nums[i] <= 10^3"))),(0,i.kt)("h2",{id:"approach-1-one-pass"},"Approach 1: One Pass"),(0,i.kt)(f,{mdxType:"Tabs"},(0,i.kt)(h,{value:"cpp",label:"C++",mdxType:"TabItem"},(0,i.kt)(d,{name:"@wingkwong",mdxType:"SolutionAuthor"}),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"// the first half n elements are x and the second half n elements are y\n// we can iterate n times and push nums[i] and nums[i + n]\n// since the distance for each x_i and y_i is just `n`\nclass Solution {\npublic:\n  vector<int> shuffle(vector<int>& nums, int n) {\n    vector<int> ans;\n    for (int i = 0; i < n; i++) {\n      // push x_1 .. x_n\n      ans.push_back(nums[i]);\n      // push y_1 .. y_n\n      ans.push_back(nums[i + n]);\n    }\n    return ans;\n  }\n};\n"))),(0,i.kt)(h,{value:"java",label:"Java",mdxType:"TabItem"},(0,i.kt)(d,{name:"@wingkwong",mdxType:"SolutionAuthor"}),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"// the first half n elements are x and the second half n elements are y\n// we can iterate n times and push nums[i] and nums[i + n]\n// since the distance for each x_i and y_i is just `n`\nclass Solution {\n    public int[] shuffle(int[] nums, int n) {\n        int[] ans = new int[2 * n];\n        for (int i = 0; i < n; i++) {\n            // push x_1 .. x_n\n            ans[2 * i] = nums[i];\n            // push y_1 .. y_n\n            ans[2 * i + 1] = nums[i + n];\n        }\n        return ans;\n    }\n}\n"))),(0,i.kt)(h,{value:"py",label:"Python",mdxType:"TabItem"},(0,i.kt)(d,{name:"@wingkwong",mdxType:"SolutionAuthor"}),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-py"},"# the first half n elements are x and the second half n elements are y\n# we can iterate n times and push nums[i] and nums[i + n]\n# since the distance for each x_i and y_i is just `n`\nclass Solution:\n    def shuffle(self, nums: List[int], n: int) -> List[int]:\n        ans = []\n        for i in range(n):\n            # push x_1 .. x_n\n            ans.append(nums[i])\n            # push y_1 .. y_n\n            ans.append(nums[i + n])\n        return ans\n        \n        # alternatively, we can do it in one-liner\n        # return [x for p in zip(nums[:n], nums[n:]) for x in p]\n")))))}k.isMDXComponent=!0}}]);