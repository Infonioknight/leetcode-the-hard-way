"use strict";(self.webpackChunkleetcode_the_hard_way=self.webpackChunkleetcode_the_hard_way||[]).push([[7446],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>g});var r=t(67294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=r.createContext({}),s=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},u=function(e){var n=s(e.components);return r.createElement(l.Provider,{value:n},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),c=s(t),d=i,g=c["".concat(l,".").concat(d)]||c[d]||m[d]||o;return t?r.createElement(g,a(a({ref:n},u),{},{components:t})):r.createElement(g,a({ref:n},u))}));function g(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,a=new Array(o);a[0]=d;var p={};for(var l in n)hasOwnProperty.call(n,l)&&(p[l]=n[l]);p.originalType=e,p[c]="string"==typeof e?e:i,a[1]=p;for(var s=2;s<o;s++)a[s]=t[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},6059:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>g,frontMatter:()=>o,metadata:()=>p,toc:()=>s});var r=t(87462),i=(t(67294),t(3905));const o={description:"Author: @wingkwong | https://leetcode.com/problems/counting-bits/"},a="0338 - Counting Bits (Easy)",p={unversionedId:"0300-0399/counting-bits-easy",id:"0300-0399/counting-bits-easy",title:"0338 - Counting Bits (Easy)",description:"Author: @wingkwong | https://leetcode.com/problems/counting-bits/",source:"@site/solutions/0300-0399/0338-counting-bits-easy.md",sourceDirName:"0300-0399",slug:"/0300-0399/counting-bits-easy",permalink:"/solutions/0300-0399/counting-bits-easy",draft:!1,editUrl:"https://github.com/wingkwong/leetcode-the-hard-way/tree/main/solutions/0300-0399/0338-counting-bits-easy.md",tags:[],version:"current",sidebarPosition:338,frontMatter:{description:"Author: @wingkwong | https://leetcode.com/problems/counting-bits/"},sidebar:"tutorialSidebar",previous:{title:"0334 - Increasing Triplet Subsequence (Medium)",permalink:"/solutions/0300-0399/increasing-triplet-subsequence-medium"},next:{title:"0342 - Power of Four (Easy)",permalink:"/solutions/0300-0399/power-of-four-easy"}},l={},s=[{value:"Problem Link",id:"problem-link",level:2},{value:"Problem Statement",id:"problem-statement",level:2},{value:"Approach 1: (n + 1) hammingWeight",id:"approach-1-n--1-hammingweight",level:2},{value:"Approach 2: One Pass",id:"approach-2-one-pass",level:2}],u=(c="SolutionAuthor",function(e){return console.warn("Component "+c+" was not imported, exported, or provided by MDXProvider as global scope"),(0,i.kt)("div",e)});var c;const m={toc:s},d="wrapper";function g(e){let{components:n,...t}=e;return(0,i.kt)(d,(0,r.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"0338---counting-bits-easy"},"0338 - Counting Bits (Easy)"),(0,i.kt)("h2",{id:"problem-link"},"Problem Link"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/counting-bits/"},"https://leetcode.com/problems/counting-bits/")),(0,i.kt)("h2",{id:"problem-statement"},"Problem Statement"),(0,i.kt)("p",null,"Given an integer ",(0,i.kt)("inlineCode",{parentName:"p"},"n"),", return ",(0,i.kt)("em",{parentName:"p"},"an array")," ",(0,i.kt)("inlineCode",{parentName:"p"},"ans")," ",(0,i.kt)("em",{parentName:"p"},"of length")," ",(0,i.kt)("inlineCode",{parentName:"p"},"n + 1")," ",(0,i.kt)("em",{parentName:"p"},"such that for each")," ",(0,i.kt)("inlineCode",{parentName:"p"},"i")," _",(0,i.kt)("em",{parentName:"p"}," (",(0,i.kt)("inlineCode",{parentName:"em"},"0 <= i <= n"),")"),",",(0,i.kt)("em",{parentName:"p"}," ",(0,i.kt)("inlineCode",{parentName:"em"},"ans[i]")," _is the ",(0,i.kt)("strong",{parentName:"em"},"number of"))," ",(0,i.kt)("inlineCode",{parentName:"p"},"1"),(0,i.kt)("em",{parentName:"p"},(0,i.kt)("strong",{parentName:"em"},"'s")," in the binary representation of")," ",(0,i.kt)("inlineCode",{parentName:"p"},"i"),"."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example 1:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Input: n = 2\nOutput: [0,1,1]\nExplanation:\n0 --\x3e 0\n1 --\x3e 1\n2 --\x3e 10\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example 2:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Input: n = 5\nOutput: [0,1,1,2,1,2]\nExplanation:\n0 --\x3e 0\n1 --\x3e 1\n2 --\x3e 10\n3 --\x3e 11\n4 --\x3e 100\n5 --\x3e 101 \n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Constraints:")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"0 <= n <= 10^5"))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Follow up:")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"It is very easy to come up with a solution with a runtime of ",(0,i.kt)("inlineCode",{parentName:"li"},"O(n log n)"),". Can you do it in linear time ",(0,i.kt)("inlineCode",{parentName:"li"},"O(n)")," and possibly in a single pass?"),(0,i.kt)("li",{parentName:"ul"},"Can you do it without using any built-in function (i.e., like ",(0,i.kt)("inlineCode",{parentName:"li"},"__builtin_popcount")," in C++)?")),(0,i.kt)("h2",{id:"approach-1-n--1-hammingweight"},"Approach 1: (n + 1) hammingWeight"),(0,i.kt)("p",null,"If you've solved ",(0,i.kt)("a",{parentName:"p",href:"../0100-0199/number-of-1-bits-easy"},"0191 - Number of 1 Bits (Easy)"),", then you can use that solution in this problem. The time complexity is $$O(n logn)$$."),(0,i.kt)(u,{name:"@wingkwong",mdxType:"SolutionAuthor"}),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    // Check out 0191 - Number of 1 Bits (Easy) - Approach 3 \n    // for detailed explanation\n    int hammingWeight(int n) {\n        int ans = 0;\n        for (; n; n = n & (n - 1)) ans++;\n        return ans;\n    }\n    \n    vector<int> countBits(int n) {\n        vector<int> ans;\n        for (int i = 0; i <= n; i++) {\n            ans.push_back(hammingWeight(i));\n        }\n        return ans;\n    }\n};\n")),(0,i.kt)("h2",{id:"approach-2-one-pass"},"Approach 2: One Pass"),(0,i.kt)("p",null,"$i$ & $(i - 1)$ is a common trick to turn the rightmost set bit to $0$. For example, if $i = (1000100)_2$, then $i$ & $(i  - 1)$ would be $(1000000)_2$. We can iterate each number and calculate the number of 1s by adding 1 from the previous state."),(0,i.kt)("p",null,"The transition function is simply $ans","[i]"," = ans","[i$ & $(i - 1)]"," + 1$."),(0,i.kt)(u,{name:"@wingkwong",mdxType:"SolutionAuthor"}),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    vector<int> countBits(int num) {\n        vector<int> ans(num + 1, 0);\n        for(int i = 1; i <= num; i++) {\n            // no. of 1s in (1000100) = no. of 1s in (1000000) + 1\n            ans[i] = ans[i & (i - 1)] + 1;\n        }\n        return ans; \n    }\n};\n")))}g.isMDXComponent=!0}}]);