"use strict";(self.webpackChunkleetcode_the_hard_way=self.webpackChunkleetcode_the_hard_way||[]).push([[13725],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),m=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=m(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=m(n),d=a,h=u["".concat(s,".").concat(d)]||u[d]||p[d]||o;return n?r.createElement(h,i(i({ref:t},c),{},{components:n})):r.createElement(h,i({ref:t},c))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:a,i[1]=l;for(var m=2;m<o;m++)i[m]=n[m];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},92782:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>w,frontMatter:()=>o,metadata:()=>l,toc:()=>m});var r=n(87462),a=(n(67294),n(3905));const o={description:"Author: @ColeB2 | https://leetcode.com/problems/set-matrix-zeroes/",tags:["Array","Hash Table","Matrix"]},i="0073 - Set Matrix Zeroes (Medium)",l={unversionedId:"0000-0099/set-matrix-zeroes-medium",id:"0000-0099/set-matrix-zeroes-medium",title:"0073 - Set Matrix Zeroes (Medium)",description:"Author: @ColeB2 | https://leetcode.com/problems/set-matrix-zeroes/",source:"@site/solutions/0000-0099/0073-set-matrix-zeroes-medium.md",sourceDirName:"0000-0099",slug:"/0000-0099/set-matrix-zeroes-medium",permalink:"/solutions/0000-0099/set-matrix-zeroes-medium",draft:!1,editUrl:"https://github.com/wingkwong/leetcode-the-hard-way/tree/main/solutions/0000-0099/0073-set-matrix-zeroes-medium.md",tags:[{label:"Array",permalink:"/solutions/tags/array"},{label:"Hash Table",permalink:"/solutions/tags/hash-table"},{label:"Matrix",permalink:"/solutions/tags/matrix"}],version:"current",sidebarPosition:73,frontMatter:{description:"Author: @ColeB2 | https://leetcode.com/problems/set-matrix-zeroes/",tags:["Array","Hash Table","Matrix"]},sidebar:"tutorialSidebar",previous:{title:"0072 - Edit Distance (Hard)",permalink:"/solutions/0000-0099/edit-distance-hard"},next:{title:"0074 - Search a 2D Matrix (Medium)",permalink:"/solutions/0000-0099/search-a-2d-matrix-medium"}},s={},m=[{value:"Problem Link",id:"problem-link",level:2},{value:"Problem Statement",id:"problem-statement",level:2},{value:"Approach 1: Inplace, Constant Space, Iteration.",id:"approach-1-inplace-constant-space-iteration",level:2}],c=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.kt)("div",t)},u=c("Tabs"),p=c("TabItem"),d=c("SolutionAuthor"),h={toc:m},f="wrapper";function w(e){let{components:t,...n}=e;return(0,a.kt)(f,(0,r.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"0073---set-matrix-zeroes-medium"},"0073 - Set Matrix Zeroes (Medium)"),(0,a.kt)("h2",{id:"problem-link"},"Problem Link"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/set-matrix-zeroes/"},"https://leetcode.com/problems/set-matrix-zeroes/")),(0,a.kt)("h2",{id:"problem-statement"},"Problem Statement"),(0,a.kt)("p",null,"Given an ",(0,a.kt)("inlineCode",{parentName:"p"},"m x n")," integer matrix ",(0,a.kt)("inlineCode",{parentName:"p"},"matrix"),", if an element is ",(0,a.kt)("inlineCode",{parentName:"p"},"0"),", set its entire row and column to ",(0,a.kt)("inlineCode",{parentName:"p"},"0"),"'s."),(0,a.kt)("p",null,"You must do it ",(0,a.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/In-place_algorithm"},"in place"),"."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Example 1:")),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://assets.leetcode.com/uploads/2020/08/17/mat1.jpg",alt:null})),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Input: matrix = [[1,1,1],[1,0,1],[1,1,1]]\nOutput: [[1,0,1],[0,0,0],[1,0,1]]\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Example 2:")),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://assets.leetcode.com/uploads/2020/08/17/mat2.jpg",alt:null})),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Input: matrix = [[0,1,2,0],[3,4,5,2],[1,3,1,5]]\nOutput: [[0,0,0,0],[0,4,5,0],[0,3,1,0]]\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Constraints:")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"m == matrix.length")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"n == matrix[0].length")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"1 <= m, n <= 200")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"-2^31 <= matrix[i][j] <= 2^31 - 1"))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Follow up:")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"A straightforward solution using ",(0,a.kt)("inlineCode",{parentName:"li"},"O(mn)")," space is probably a bad idea."),(0,a.kt)("li",{parentName:"ul"},"A simple improvement uses ",(0,a.kt)("inlineCode",{parentName:"li"},"O(m + n)")," space, but still not the best solution."),(0,a.kt)("li",{parentName:"ul"},"Could you devise a constant space solution?")),(0,a.kt)("h2",{id:"approach-1-inplace-constant-space-iteration"},"Approach 1: Inplace, Constant Space, Iteration."),(0,a.kt)("p",null,"To save space, we can just iterate over the entire matrix initially, if we ever reach a $$0$$, we can record that in the top row/left column, by rewriting it with a $$0$$. Then we can check the top row, left column at the end, and rewrite all rows/columns that have a top row/left column as $$0$$."),(0,a.kt)("p",null,"The edge case you can imagine is how we handle the top left corner. If we have a $$0$$ in the first row/first column and place a $$0$$ in the first row/column, then when we replace all numbers afterwards, we are going to ruin our tracking method."),(0,a.kt)("p",null,"To handle this, we can use a boolean to track if the first row/first column has zeroes, iterate the first/row column, and update the boolean of the first row/column has a $$0$$. From then on, we can do as we described above, just starting at $$1$$ for both the row/column, as we already handled the first row/column."),(0,a.kt)("p",null,"Finally, we can rewrite everything, again starting at $$1$$ for both the row/column, and handling the first row/column at the end, based on the boolean values we found earlier."),(0,a.kt)("p",null,"Time Complexity: $$O(m * n)$$. Where $$m$$ is the number of rows, and $$n$$ is the number of columns. We must iterate over the whole matrix a couple of times."),(0,a.kt)("p",null,"Space Complexity: $$O(1)$$. We can do it in constant extra space, by using the first row/column to track which rows and columns are zeroed out and using boolean values to handle the first row/column."),(0,a.kt)(u,{mdxType:"Tabs"},(0,a.kt)(p,{value:"python",label:"Python",mdxType:"TabItem"},(0,a.kt)(d,{name:"@ColeB2",mdxType:"SolutionAuthor"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-py"},'class Solution:\n    def setZeroes(self, matrix: List[List[int]]) -> None:\n        """\n        Do not return anything, modify matrix in-place instead.\n        """\n        # Track our rows and columns.\n        ROWS, COLS = len(matrix), len(matrix[0])\n        # iterate first column, if any value is 0, set first_col to True.\n        # python any method will set first_row to a boolean, based on\n        # if the condition we provided ever occurs, we can then also\n        # loop through all the values and check.\n        first_row = any(matrix[0][c] == 0 for c in range(COLS))\n        # iterate first row to check for 0\'s, if any value is a 0, then\n        # the first column needs to be zeroed out.\n        first_col = any(matrix[r][0] == 0 for r in range(ROWS))\n        # Note above: Our first row, will be all the values in\n        # the row going horizontally, which means we are checking\n        # the value of each column in row 0, similarly, our first\n        # column will be all the values in the column going vertically,\n        # so we check the value of each row in column 0.\n        \n        # Iterate our matrix, skipping the first row/column\n        for r in range(1, ROWS):\n            for c in range(1, COLS):\n                # found a 0, set the first/row column value to 0\n                if matrix[r][c] == 0:\n                    matrix[r][0] = 0\n                    matrix[0][c] = 0\n        # Set the row/columns to zeroes. Again iterate matrix, skipping\n        # the first row/column\n        for r in range(1, ROWS):\n            for c in range(1, COLS):\n                # if either the first row of any given cell or\n                # the first column of any given cell is 0, we can \n                # set the current cell to 0.\n                if matrix[r][0] == 0 or matrix[0][c] == 0:\n                    matrix[r][c] = 0\n        # Edge cases, if the first row was 0, set all column values in \n        # the top row to 0.\n        if first_row:\n            for c in range(COLS):\n                matrix[0][c] = 0\n        # if first_column contained a 0, set all row values in the left\n        # column to 0.\n        if first_col:\n            for r in range(ROWS):\n                matrix[r][0] = 0\n')))))}w.isMDXComponent=!0}}]);