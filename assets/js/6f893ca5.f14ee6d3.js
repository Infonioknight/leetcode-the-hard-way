"use strict";(self.webpackChunkleetcode_the_hard_way=self.webpackChunkleetcode_the_hard_way||[]).push([[92764],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return d}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=p(n),d=a,g=m["".concat(s,".").concat(d)]||m[d]||u[d]||i;return n?r.createElement(g,o(o({ref:t},c),{},{components:n})):r.createElement(g,o({ref:t},c))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},38808:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return s},default:function(){return k},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return u}});var r=n(87462),a=n(63366),i=(n(67294),n(3905)),o=["components"],l={description:"Author: @wingkwong, @vigneshshiv, @radojicic23 | https://leetcode.com/problems/reverse-string/"},s="0344 - Reverse String (Easy)",p={unversionedId:"0300-0399/reverse-string-easy",id:"0300-0399/reverse-string-easy",title:"0344 - Reverse String (Easy)",description:"Author: @wingkwong, @vigneshshiv, @radojicic23 | https://leetcode.com/problems/reverse-string/",source:"@site/solutions/0300-0399/0344-reverse-string-easy.md",sourceDirName:"0300-0399",slug:"/0300-0399/reverse-string-easy",permalink:"/solutions/0300-0399/reverse-string-easy",draft:!1,editUrl:"https://github.com/wingkwong/leetcode-the-hard-way/tree/main/solutions/0300-0399/0344-reverse-string-easy.md",tags:[],version:"current",sidebarPosition:344,frontMatter:{description:"Author: @wingkwong, @vigneshshiv, @radojicic23 | https://leetcode.com/problems/reverse-string/"},sidebar:"tutorialSidebar",previous:{title:"0342 - Power of Four (Easy)",permalink:"/solutions/0300-0399/power-of-four-easy"},next:{title:"0345 - Reverse Vowels of a String (Easy)",permalink:"/solutions/0300-0399/reverse-vowels-of-a-string-easy"}},c={},u=[{value:"Problem Link",id:"problem-link",level:2},{value:"Problem Statement",id:"problem-statement",level:2},{value:"Approach 1: In-place modification",id:"approach-1-in-place-modification",level:2},{value:"Approach 2: STL",id:"approach-2-stl",level:2}],m=function(e){return function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,i.kt)("div",t)}},d=m("Tabs"),g=m("TabItem"),h=m("SolutionAuthor"),v={toc:u};function k(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},v,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"0344---reverse-string-easy"},"0344 - Reverse String (Easy)"),(0,i.kt)("h2",{id:"problem-link"},"Problem Link"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/reverse-string/"},"https://leetcode.com/problems/reverse-string/")),(0,i.kt)("h2",{id:"problem-statement"},"Problem Statement"),(0,i.kt)("p",null,"Write a function that reverses a string. The input string is given as an array of characters ",(0,i.kt)("inlineCode",{parentName:"p"},"s"),"."),(0,i.kt)("p",null,"You must do this by modifying the input array ",(0,i.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/In-place_algorithm"},"in-place")," with ",(0,i.kt)("inlineCode",{parentName:"p"},"O(1)")," extra memory."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example 1:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'Input: s = ["h","e","l","l","o"]\nOutput: ["o","l","l","e","h"]\n')),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example 2:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'Input: s = ["H","a","n","n","a","h"]\nOutput: ["h","a","n","n","a","H"] \n')),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Constraints:")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"1 <= s.length <= 10^5")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"s[i]")," is a ",(0,i.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/ASCII#Printable_characters"},"printable ascii character"),".")),(0,i.kt)("h2",{id:"approach-1-in-place-modification"},"Approach 1: In-place modification"),(0,i.kt)("p",null,"We iterate the array to process two elements at the same time and swap them. First we swap ",(0,i.kt)("inlineCode",{parentName:"p"},"s[0]")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"s[n - 1]"),". Then swap ",(0,i.kt)("inlineCode",{parentName:"p"},"s[1]")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"s[n - 2]")," and so on. Therefore, we only swap ",(0,i.kt)("inlineCode",{parentName:"p"},"n / 2")," times."),(0,i.kt)(d,{mdxType:"Tabs"},(0,i.kt)(g,{value:"cpp",label:"C++",mdxType:"TabItem"},(0,i.kt)(h,{name:"@wingkwong",mdxType:"SolutionAuthor"}),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    void reverseString(vector<char>& s) {\n        int n = (int) s.size();\n        for (int i = 0; i < n / 2; i++) {\n            swap(s[i], s[n - 1 - i]);\n        }\n    }\n};\n"))),(0,i.kt)(g,{value:"go",label:"Go",mdxType:"TabItem"},(0,i.kt)(h,{name:"@wingkwong",mdxType:"SolutionAuthor"}),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"func reverseString(s []byte)  {\n    i, j := 0, len(s) - 1\n    for i < j {\n        s[i], s[j] = s[j], s[i]\n        i += 1\n        j -= 1\n    }\n}\n"))),(0,i.kt)(g,{value:"java",label:"Java",mdxType:"TabItem"},(0,i.kt)(h,{name:"@vigneshshiv",mdxType:"SolutionAuthor"}),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"class Solution {\n    public void reverseString(char[] s) {\n        int i = 0, j = s.length - 1;\n        while (i < j) {\n            char c = s[i];\n            s[i++] = s[j];\n            s[j--] = c;\n        }\n    }\n}\n"))),(0,i.kt)(g,{value:"javascript",label:"JavaScript",mdxType:"TabItem"},(0,i.kt)(h,{name:"@radojicic23",mdxType:"SolutionAuthor"}),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"/**\n * @param {character[]} s\n * @return {void} Do not return anything, modify s in-place instead.\n */\nvar reverseString = function(s) {\n    let left = 0;\n    let right = s.length - 1;\n    while (left < right) {\n        char = s[left];\n        s[left] = s[right];\n        s[right] = char;\n        left++;\n        right--;\n    }\n};\n"))),(0,i.kt)(g,{value:"python",label:"Python",mdxType:"TabItem"},(0,i.kt)(h,{name:"@radojicic23",mdxType:"SolutionAuthor"}),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'class Solution:\n    def reverseString(self, s: List[str]) -> None:\n        """\n        Do not return anything, modify s in-place instead.\n        """\n        \n        left, right = 0, len(s) - 1\n        while left < right:\n            s[left], s[right] = s[right], s[left]\n            left += 1\n            right -= 1\n')))),(0,i.kt)("h2",{id:"approach-2-stl"},"Approach 2: STL"),(0,i.kt)(d,{mdxType:"Tabs"},(0,i.kt)(g,{value:"cpp",label:"C++",mdxType:"TabItem"},(0,i.kt)(h,{name:"@wingkwong",mdxType:"SolutionAuthor"}),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    void reverseString(vector<char>& s) {\n        reverse(s.begin(), s.end());\n    }\n};\n"))),(0,i.kt)(g,{value:"py",label:"Python",mdxType:"TabItem"},(0,i.kt)(h,{name:"@wingkwong",mdxType:"SolutionAuthor"}),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-py"},"class Solution:\n    def reverseString(self, s: List[str]) -> None:\n        s.reverse()\n"))),(0,i.kt)(g,{value:"rust",label:"Rust",mdxType:"TabItem"},(0,i.kt)(h,{name:"@wingkwong",mdxType:"SolutionAuthor"}),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-rust"},"impl Solution {\n    pub fn reverse_string(s: &mut Vec<char>) {\n       s.reverse()\n    }\n}\n"))),(0,i.kt)(g,{value:"javascript",label:"JavaScript",mdxType:"TabItem"},(0,i.kt)(h,{name:"@radojicic23",mdxType:"SolutionAuthor"}),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"impl Solution {\n    pub fn reverse_string(s: &mut Vec<char>) {\n       s.reverse()\n    }\n}\n")))))}k.isMDXComponent=!0}}]);