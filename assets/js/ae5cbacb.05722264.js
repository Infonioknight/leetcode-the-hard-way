"use strict";(self.webpackChunkleetcode_the_hard_way=self.webpackChunkleetcode_the_hard_way||[]).push([[49658],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return d}});var s=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);n&&(s=s.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,s)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,s,r=function(e,n){if(null==e)return{};var t,s,r={},o=Object.keys(e);for(s=0;s<o.length;s++)t=o[s],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(s=0;s<o.length;s++)t=o[s],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=s.createContext({}),p=function(e){var n=s.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=p(e.components);return s.createElement(l.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return s.createElement(s.Fragment,{},n)}},m=s.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),m=p(t),d=r,f=m["".concat(l,".").concat(d)]||m[d]||c[d]||o;return t?s.createElement(f,i(i({ref:n},u),{},{components:t})):s.createElement(f,i({ref:n},u))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=m;var a={};for(var l in n)hasOwnProperty.call(n,l)&&(a[l]=n[l]);a.originalType=e,a.mdxType="string"==typeof e?e:r,i[1]=a;for(var p=2;p<o;p++)i[p]=t[p];return s.createElement.apply(null,i)}return s.createElement.apply(null,t)}m.displayName="MDXCreateElement"},59444:function(e,n,t){t.r(n),t.d(n,{assets:function(){return u},contentTitle:function(){return l},default:function(){return b},frontMatter:function(){return a},metadata:function(){return p},toc:function(){return c}});var s=t(87462),r=t(63366),o=(t(67294),t(3905)),i=["components"],a={description:"Author: @wingkwong | https://leetcode.com/problems/successful-pairs-of-spells-and-potions/",tags:["Array","Two Pointers","Binary Search","Sorting"]},l="2300 - Successful Pairs of Spells and Potions (Medium)",p={unversionedId:"2300-2399/successful-pairs-of-spells-and-potions-medium",id:"2300-2399/successful-pairs-of-spells-and-potions-medium",title:"2300 - Successful Pairs of Spells and Potions (Medium)",description:"Author: @wingkwong | https://leetcode.com/problems/successful-pairs-of-spells-and-potions/",source:"@site/solutions/2300-2399/2300-successful-pairs-of-spells-and-potions-medium.md",sourceDirName:"2300-2399",slug:"/2300-2399/successful-pairs-of-spells-and-potions-medium",permalink:"/solutions/2300-2399/successful-pairs-of-spells-and-potions-medium",draft:!1,editUrl:"https://github.com/wingkwong/leetcode-the-hard-way/tree/main/solutions/2300-2399/2300-successful-pairs-of-spells-and-potions-medium.md",tags:[{label:"Array",permalink:"/solutions/tags/array"},{label:"Two Pointers",permalink:"/solutions/tags/two-pointers"},{label:"Binary Search",permalink:"/solutions/tags/binary-search"},{label:"Sorting",permalink:"/solutions/tags/sorting"}],version:"current",sidebarPosition:2300,frontMatter:{description:"Author: @wingkwong | https://leetcode.com/problems/successful-pairs-of-spells-and-potions/",tags:["Array","Two Pointers","Binary Search","Sorting"]},sidebar:"tutorialSidebar",previous:{title:"2300 - 2399",permalink:"/solutions/category/2300---2399"},next:{title:"2302 - Count Subarrays With Score Less Than K (Hard)",permalink:"/solutions/2300-2399/count-subarrays-with-score-less-than-k"}},u={},c=[{value:"Problem Link",id:"problem-link",level:2},{value:"Problem Statement",id:"problem-statement",level:2},{value:"Approach 1: Binary Search",id:"approach-1-binary-search",level:2}],m=function(e){return function(n){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",n)}},d=m("Tabs"),f=m("TabItem"),h=m("SolutionAuthor"),k={toc:c};function b(e){var n=e.components,t=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,s.Z)({},k,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"2300---successful-pairs-of-spells-and-potions-medium"},"2300 - Successful Pairs of Spells and Potions (Medium)"),(0,o.kt)("h2",{id:"problem-link"},"Problem Link"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/successful-pairs-of-spells-and-potions/"},"https://leetcode.com/problems/successful-pairs-of-spells-and-potions/")),(0,o.kt)("h2",{id:"problem-statement"},"Problem Statement"),(0,o.kt)("p",null,"You are given two positive integer arrays ",(0,o.kt)("inlineCode",{parentName:"p"},"spells")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"potions"),", of length ",(0,o.kt)("inlineCode",{parentName:"p"},"n")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"m")," respectively, where ",(0,o.kt)("inlineCode",{parentName:"p"},"spells[i]")," represents the strength of the ",(0,o.kt)("inlineCode",{parentName:"p"},"ith")," spell and ",(0,o.kt)("inlineCode",{parentName:"p"},"potions[j]")," represents the strength of the ",(0,o.kt)("inlineCode",{parentName:"p"},"jth")," potion."),(0,o.kt)("p",null,"You are also given an integer ",(0,o.kt)("inlineCode",{parentName:"p"},"success"),". A spell and potion pair is considered ",(0,o.kt)("strong",{parentName:"p"},"successful")," if the ",(0,o.kt)("strong",{parentName:"p"},"product")," of their strengths is ",(0,o.kt)("strong",{parentName:"p"},"at least")," ",(0,o.kt)("inlineCode",{parentName:"p"},"success"),"."),(0,o.kt)("p",null,"Return ",(0,o.kt)("em",{parentName:"p"},"an integer array"),(0,o.kt)("inlineCode",{parentName:"p"},"pairs"),(0,o.kt)("em",{parentName:"p"},"of length"),(0,o.kt)("inlineCode",{parentName:"p"},"n"),(0,o.kt)("em",{parentName:"p"},"where"),(0,o.kt)("inlineCode",{parentName:"p"},"pairs[i]"),(0,o.kt)("em",{parentName:"p"},"is the number of ",(0,o.kt)("strong",{parentName:"em"},"potions")," that will form a successful pair with the"),(0,o.kt)("inlineCode",{parentName:"p"},"ith"),(0,o.kt)("em",{parentName:"p"},"spell.")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Example 1:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Input: spells = [5,1,3], potions = [1,2,3,4,5], success = 7\nOutput: [4,0,3]\nExplanation:\n- 0th spell: 5 * [1,2,3,4,5] = [5,10,15,20,25]. 4 pairs are successful.\n- 1st spell: 1 * [1,2,3,4,5] = [1,2,3,4,5]. 0 pairs are successful.\n- 2nd spell: 3 * [1,2,3,4,5] = [3,6,9,12,15]. 3 pairs are successful.\nThus, [4,0,3] is returned.\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Example 2:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Input: spells = [3,1,2], potions = [8,5,8], success = 16\nOutput: [2,0,2]\nExplanation:\n- 0th spell: 3 * [8,5,8] = [24,15,24]. 2 pairs are successful.\n- 1st spell: 1 * [8,5,8] = [8,5,8]. 0 pairs are successful. \n- 2nd spell: 2 * [8,5,8] = [16,10,16]. 2 pairs are successful. \nThus, [2,0,2] is returned.\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Constraints:")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"n == spells.length")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"m == potions.length")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"1 <= n, m <= 105")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"1 <= spells[i], potions[i] <= 105")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"1 <= success <= 1010"))),(0,o.kt)("h2",{id:"approach-1-binary-search"},"Approach 1: Binary Search"),(0,o.kt)(d,{mdxType:"Tabs"},(0,o.kt)(f,{value:"cpp",label:"C++",mdxType:"TabItem"},(0,o.kt)(h,{name:"@wingkwong",mdxType:"SolutionAuthor"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    vector<int> successfulPairs(vector<int>& spells, vector<int>& potions, long long success) {\n        vector<int> ans;\n        // sort the potions since we need to binary search on it\n        sort(potions.begin(), potions.end());\n        for (auto spell : spells) {\n            // we need to binary search the first position closest to `minPotion`\n            // which is the value to fulfil the requirment\n            // spells[i] * minPotion >= success\n            // minPotion = ceil(success / spells[i])\n            // ceil(success / spells[i]) can be written as (success + spell - 1) // spell\n            // since potions after `minPotion` will be valid as well\n            // the answer is simply m - index from the binary search\n            ans.push_back(\n                potions.end() - \n                lower_bound(potions.begin(), potions.end(), (spell + success - 1) / spell)\n            );\n        }\n        return ans;\n    }\n};\n"))),(0,o.kt)(f,{value:"py",label:"Python",mdxType:"TabItem"},(0,o.kt)(h,{name:"@wingkwong",mdxType:"SolutionAuthor"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-py"},"class Solution:\n    def successfulPairs(self, spells: List[int], potions: List[int], success: int) -> List[int]:\n        m = len(potions)\n        res = []\n        potions.sort()\n        for spell in spells:\n            mi = (success + spell - 1) // spell\n            res.append(m - bisect_left(potions, mi))\n        return res\n")))))}b.isMDXComponent=!0}}]);