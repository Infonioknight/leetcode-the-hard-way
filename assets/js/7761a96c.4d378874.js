"use strict";(self.webpackChunkleetcode_the_hard_way=self.webpackChunkleetcode_the_hard_way||[]).push([[88991],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>f});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},m=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},p="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,m=u(e,["components","mdxType","originalType","parentName"]),p=s(n),d=a,f=p["".concat(l,".").concat(d)]||p[d]||c[d]||o;return n?r.createElement(f,i(i({ref:t},m),{},{components:n})):r.createElement(f,i({ref:t},m))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var u={};for(var l in t)hasOwnProperty.call(t,l)&&(u[l]=t[l]);u.originalType=e,u[p]="string"==typeof e?e:a,i[1]=u;for(var s=2;s<o;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},59671:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>f,frontMatter:()=>o,metadata:()=>u,toc:()=>s});var r=n(87462),a=(n(67294),n(3905));const o={description:"Author: @wingkwong | https://leetcode.com/problems/sum-of-square-numbers/"},i="0633 - Sum of Square Numbers (Medium)",u={unversionedId:"0600-0699/sum-of-square-numbers-medium",id:"0600-0699/sum-of-square-numbers-medium",title:"0633 - Sum of Square Numbers (Medium)",description:"Author: @wingkwong | https://leetcode.com/problems/sum-of-square-numbers/",source:"@site/solutions/0600-0699/0633-sum-of-square-numbers-medium.md",sourceDirName:"0600-0699",slug:"/0600-0699/sum-of-square-numbers-medium",permalink:"/solutions/0600-0699/sum-of-square-numbers-medium",draft:!1,editUrl:"https://github.com/wingkwong/leetcode-the-hard-way/tree/main/solutions/0600-0699/0633-sum-of-square-numbers-medium.md",tags:[],version:"current",sidebarPosition:633,frontMatter:{description:"Author: @wingkwong | https://leetcode.com/problems/sum-of-square-numbers/"},sidebar:"tutorialSidebar",previous:{title:"0623 - Add One Row to Tree (Medium)",permalink:"/solutions/0600-0699/add-one-row-to-tree-medium"},next:{title:"0637 - Average of Levels in Binary Tree (Easy)",permalink:"/solutions/0600-0699/average-of-levels-in-binary-tree-medium"}},l={},s=[{value:"Problem Link",id:"problem-link",level:2},{value:"Problem Statement",id:"problem-statement",level:2},{value:"Approach 1: Binary Search",id:"approach-1-binary-search",level:2}],m=(p="SolutionAuthor",function(e){return console.warn("Component "+p+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.kt)("div",e)});var p;const c={toc:s},d="wrapper";function f(e){let{components:t,...n}=e;return(0,a.kt)(d,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"0633---sum-of-square-numbers-medium"},"0633 - Sum of Square Numbers (Medium)"),(0,a.kt)("h2",{id:"problem-link"},"Problem Link"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/sum-of-square-numbers/"},"https://leetcode.com/problems/sum-of-square-numbers/")),(0,a.kt)("h2",{id:"problem-statement"},"Problem Statement"),(0,a.kt)("p",null,"Given a non-negative integer ",(0,a.kt)("inlineCode",{parentName:"p"},"c"),", decide whether there're two integers ",(0,a.kt)("inlineCode",{parentName:"p"},"a")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"b")," such that ",(0,a.kt)("inlineCode",{parentName:"p"},"a2 + b2 = c"),"."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Example 1:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Input: c = 5\nOutput: true\nExplanation: 1 * 1 + 2 * 2 = 5\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Example 2:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Input: c = 3\nOutput: false\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Constraints:")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"0 <= c <= 2^31 - 1"))),(0,a.kt)("h2",{id:"approach-1-binary-search"},"Approach 1: Binary Search"),(0,a.kt)("admonition",{title:"Prerequisite",type:"info"},(0,a.kt)("ul",{parentName:"admonition"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"../../tutorials/basic-topics/binary-search"},"Binary Search")))),(0,a.kt)("p",null,"We can rewrite $$a ^ 2 + b ^ 2 = c$$ to $$b ^ 2 = c - a ^ 2$$ so that we can fix $$a$$ and then check if $$c - a ^ 2$$ is a perfect square. If so, we return ",(0,a.kt)("inlineCode",{parentName:"p"},"true"),". If we couldn't find one at the end, return ",(0,a.kt)("inlineCode",{parentName:"p"},"false"),"."),(0,a.kt)("p",null,"To determine if ",(0,a.kt)("inlineCode",{parentName:"p"},"x")," is a perfect square, we can use binary search to look for ",(0,a.kt)("inlineCode",{parentName:"p"},"[0, x]"),". If $$x$$ is greater 2, the range is actually ",(0,a.kt)("inlineCode",{parentName:"p"},"[2, x / 2]"),". In case you have solved ",(0,a.kt)("a",{parentName:"p",href:"../0300-0399/valid-perfect-square-easy"},"0367 - Valid Perfect Square (Easy)"),", we can use the same solution directly."),(0,a.kt)(m,{name:"@wingkwong",mdxType:"SolutionAuthor"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    // 0367 - Valid Perfect Square (Easy)\n    bool isPerfectSquare(int num) {\n        // init possible range\n        // for num > 2, the range is actually [2, num / 2]\n        long long l = 0, r = num;\n        while (l < r) {\n            long long m = l + (r - l) / 2;\n            // exclude m\n            if (num > m * m) l = m + 1;\n            // include m\n            else r = m;\n        }\n        // check if it is a perfect square\n        return l * l == num;\n    }\n    \n    bool judgeSquareSum(int c) {\n        // a ^ 2 + b ^ 2 = c\n        // b ^ 2 = c - a ^ 2\n    // fix a \n        for (long long a = 0; a * a <= c; a++) {\n        // check if c - a ^ 2 is a perfect square or not\n            if (isPerfectSquare(c - (int) a * a)) {\n                return true;\n            }\n        }\n        return false;\n    }\n};\n")))}f.isMDXComponent=!0}}]);