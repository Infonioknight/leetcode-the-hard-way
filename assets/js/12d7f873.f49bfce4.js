"use strict";(self.webpackChunkleetcode_the_hard_way=self.webpackChunkleetcode_the_hard_way||[]).push([[62627],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>b});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var i=r.createContext({}),u=function(e){var n=r.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},p=function(e){var n=u(e.components);return r.createElement(i.Provider,{value:n},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,l=e.originalType,i=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=u(t),d=o,b=m["".concat(i,".").concat(d)]||m[d]||c[d]||l;return t?r.createElement(b,a(a({ref:n},p),{},{components:t})):r.createElement(b,a({ref:n},p))}));function b(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var l=t.length,a=new Array(l);a[0]=d;var s={};for(var i in n)hasOwnProperty.call(n,i)&&(s[i]=n[i]);s.originalType=e,s[m]="string"==typeof e?e:o,a[1]=s;for(var u=2;u<l;u++)a[u]=t[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},63064:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>a,default:()=>h,frontMatter:()=>l,metadata:()=>s,toc:()=>u});var r=t(87462),o=(t(67294),t(3905));const l={description:"Author: @ganajayant | https://leetcode.com/problems/bitwise-xor-of-all-pairings"},a="2425 - Bitwise XOR of All Pairings (Medium)",s={unversionedId:"2400-2499/bitwise-xor-of-all-pairs-medium",id:"2400-2499/bitwise-xor-of-all-pairs-medium",title:"2425 - Bitwise XOR of All Pairings (Medium)",description:"Author: @ganajayant | https://leetcode.com/problems/bitwise-xor-of-all-pairings",source:"@site/solutions/2400-2499/2425-bitwise-xor-of-all-pairs-medium.md",sourceDirName:"2400-2499",slug:"/2400-2499/bitwise-xor-of-all-pairs-medium",permalink:"/solutions/2400-2499/bitwise-xor-of-all-pairs-medium",draft:!1,editUrl:"https://github.com/wingkwong/leetcode-the-hard-way/tree/main/solutions/2400-2499/2425-bitwise-xor-of-all-pairs-medium.md",tags:[],version:"current",sidebarPosition:2425,frontMatter:{description:"Author: @ganajayant | https://leetcode.com/problems/bitwise-xor-of-all-pairings"},sidebar:"tutorialSidebar",previous:{title:"2421 - Number of Good Paths (Hard)",permalink:"/solutions/2400-2499/number-of-good-paths-hard"},next:{title:"2439 - Minimize Maximum of Array (Medium)",permalink:"/solutions/2400-2499/minimize-maximum-of-array-medium"}},i={},u=[{value:"Problem Link",id:"problem-link",level:2},{value:"Problem Statement",id:"problem-statement",level:2},{value:"Approach 1: XOR Properties",id:"approach-1-xor-properties",level:2}],p=e=>function(n){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",n)},m=p("Tabs"),c=p("TabItem"),d=p("SolutionAuthor"),b={toc:u},f="wrapper";function h(e){let{components:n,...t}=e;return(0,o.kt)(f,(0,r.Z)({},b,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"2425---bitwise-xor-of-all-pairings-medium"},"2425 - Bitwise XOR of All Pairings (Medium)"),(0,o.kt)("h2",{id:"problem-link"},"Problem Link"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/bitwise-xor-of-all-pairings/"},"https://leetcode.com/problems/bitwise-xor-of-all-pairings/")),(0,o.kt)("h2",{id:"problem-statement"},"Problem Statement"),(0,o.kt)("p",null,"You are given two 0-indexed arrays, ",(0,o.kt)("inlineCode",{parentName:"p"},"nums1")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"nums2"),", consisting of non-negative integers. There exists another array, ",(0,o.kt)("inlineCode",{parentName:"p"},"nums3"),", which contains the bitwise XOR of all pairings of integers between ",(0,o.kt)("inlineCode",{parentName:"p"},"nums1")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"nums2")," (every integer in nums1 is paired with every integer in nums2 exactly once)."),(0,o.kt)("p",null,"Return the bitwise XOR of all integers in ",(0,o.kt)("inlineCode",{parentName:"p"},"nums3"),"."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Example 1:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Input: nums1 = [2,1,3], nums2 = [10,2,5,0]\nOutput: 13\nExplanation: A possible nums3 array is [8,0,7,2,11,3,4,1,9,1,6,3].\nThe bitwise XOR of all these numbers is 13, so we return 13.\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Example 2:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Input: nums1 = [1,2], nums2 = [3,4]\nOutput: 0\nExplanation: All possible pairs of bitwise XORs are nums1[0] ^ nums2[0], nums1[0] ^ nums2[1], nums1[1] ^ nums2[0],\nand nums1[1] ^ nums2[1].\nThus, one possible nums3 array is [2,5,1,6].\n2 ^ 5 ^ 1 ^ 6 = 0, so we return 0.\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Constraints:")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"1 <= nums1.length, nums2.length <= 10^5")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"0 <= nums1[i], nums2[j] <= 10^9"))),(0,o.kt)("h2",{id:"approach-1-xor-properties"},"Approach 1: XOR Properties"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Concepts")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"XOR of even times of a number is zero. e.g. $x \\oplus x = 0$"),(0,o.kt)("li",{parentName:"ul"},"XOR of odd times of a number is number itself. e.g. $x \\oplus x \\oplus x = x$")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Understanding")),(0,o.kt)("p",null,"let $n$ be the length of $num1$ and $m$ be the length of $nums2$"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Case 1: when n and m are even")),(0,o.kt)("p",null,"suppose $nums1=","[a, b]","$, $nums2=","[c, d]","$ ",(0,o.kt)("br",null),"\ntaking xor results in $","[a \\oplus{} c, a \\oplus{} d, b \\oplus{} c, b \\oplus{} d]","$ results in $","[a \\oplus{} c \\oplus{} a \\oplus{} d \\oplus{} b \\oplus{} c \\oplus{} b \\oplus{} d ]","$ ",(0,o.kt)("br",null),"\nGiven that $x \\oplus x = 0$ (even times xor with self = 0), ",(0,o.kt)("br",null),"\nthe above xor becomes $","[a \\oplus{} a \\oplus{} b \\oplus{} b \\oplus{} c \\oplus{} c \\oplus{} d \\oplus{} d]","$ => $","[0 \\oplus{} 0 \\oplus{} 0 \\oplus{} 0]","$ = 0",(0,o.kt)("br",null),"\nHence, $result = 0$"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Case 2 : when n and m are odd")),(0,o.kt)("p",null,"Let $x_1$ = xor of all elements of $nums1$ and $x_2$ = xor of all elements of $nums2$ ",(0,o.kt)("br",null),"\nsuppose $nums1=","[a]","$, $nums2=","[c]","$",(0,o.kt)("br",null),"\ntaking xor results in $","[a \\oplus{} c]","$",(0,o.kt)("br",null),"\nHence, $result = x_1 \\oplus x_2$"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Case 3 / 4: when one of them is odd and other is even")),(0,o.kt)("p",null,"let $nums1=","[a, b, c]","$, $nums2=","[d, e]","$",(0,o.kt)("br",null),"\nLet's $x_1$= xor of all elements of $nums1$, $x_2$ = xor of all elements of $nums2$ ",(0,o.kt)("br",null),"\nthat is $x_1=a \\oplus{} b \\oplus{} c$, $x_2 = d \\oplus{} e$",(0,o.kt)("br",null),"\nSince in this case $n$ is even we can clearly see that each element of $nums1$ repeat even times that makes xor as $0$",(0,o.kt)("br",null),"\nand $m$ is odd we get resultant xor of $nums2$ which is $x_2$ that is $d \\oplus e$",(0,o.kt)("br",null),"\nHence, $result = x_2$ (if $m$ is even) or $x_1$ (if $n$ is even)"),(0,o.kt)(m,{mdxType:"Tabs"},(0,o.kt)(c,{value:"java",label:"Java",mdxType:"TabItem"},(0,o.kt)(d,{name:"@ganajayant",mdxType:"SolutionAuthor"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"class Solution {\n    // calculate the XOR of given nums\n    private int xor(int[] nums) {\n        int res = 0;\n        for (int num : nums) {\n            res ^= num;\n        }\n        return res;\n    }\n\n    public int xorAllNums(int[] nums1, int[] nums2) {\n        if (nums1.length % 2 == 0 && nums2.length % 2 == 0) {\n            // both arrays have even length\n            return 0;\n        }\n        int xorone = xor(nums1), xortwo = xor(nums2);\n        if (nums1.length % 2 == 1 && nums2.length % 2 == 1) {\n            // both arrays have odd length\n            return xorone ^ xortwo;\n        } else if (nums1.length % 2 != 0) {\n            // nums1 has odd length\n            return xortwo;\n        }\n        // nums2 has odd length\n        return xorone;\n    }\n}\n")))))}h.isMDXComponent=!0}}]);