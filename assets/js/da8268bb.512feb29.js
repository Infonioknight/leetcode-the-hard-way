"use strict";(self.webpackChunkleetcode_the_hard_way=self.webpackChunkleetcode_the_hard_way||[]).push([[72231],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return m}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),c=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=c(n),m=a,f=d["".concat(p,".").concat(m)]||d[m]||u[m]||o;return n?r.createElement(f,i(i({ref:t},s),{},{components:n})):r.createElement(f,i({ref:t},s))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},6892:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return p},default:function(){return y},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return u}});var r=n(87462),a=n(63366),o=(n(67294),n(3905)),i=["components"],l={description:"Author: @wingkwong | https://leetcode.com/problems/detect-capital/"},p="0520 - Detect Capital (Easy)",c={unversionedId:"0500-0599/detect-capital-easy",id:"0500-0599/detect-capital-easy",title:"0520 - Detect Capital (Easy)",description:"Author: @wingkwong | https://leetcode.com/problems/detect-capital/",source:"@site/solutions/0500-0599/0520-detect-capital-easy.md",sourceDirName:"0500-0599",slug:"/0500-0599/detect-capital-easy",permalink:"/leetcode-the-hard-way/solutions/0500-0599/detect-capital-easy",draft:!1,editUrl:"https://github.com/wingkwong/leetcode-the-hard-way/tree/main/solutions/0500-0599/0520-detect-capital-easy.md",tags:[],version:"current",sidebarPosition:520,frontMatter:{description:"Author: @wingkwong | https://leetcode.com/problems/detect-capital/"},sidebar:"tutorialSidebar",previous:{title:"0518 - Coin Change 2 (Medium)",permalink:"/leetcode-the-hard-way/solutions/0500-0599/coin-change-2-medium"},next:{title:"0523 - Continuous Subarray Sum (Medium)",permalink:"/leetcode-the-hard-way/solutions/0500-0599/continuous-subarray-sum-medium"}},s={},u=[{value:"Problem Link",id:"problem-link",level:2},{value:"Problem Statement",id:"problem-statement",level:2},{value:"Approach 1: One Pass",id:"approach-1-one-pass",level:2},{value:"Approach 2: Case By Case",id:"approach-2-case-by-case",level:2}],d=function(e){return function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",t)}},m=d("Tabs"),f=d("TabItem"),h=d("SolutionAuthor"),k={toc:u};function y(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},k,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"0520---detect-capital-easy"},"0520 - Detect Capital (Easy)"),(0,o.kt)("h2",{id:"problem-link"},"Problem Link"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/detect-capital/"},"https://leetcode.com/problems/detect-capital/")),(0,o.kt)("h2",{id:"problem-statement"},"Problem Statement"),(0,o.kt)("p",null,"We define the usage of capitals in a word to be right when one of the following cases holds:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"All letters in this word are capitals, like ",(0,o.kt)("inlineCode",{parentName:"li"},'"USA"'),"."),(0,o.kt)("li",{parentName:"ul"},"All letters in this word are not capitals, like ",(0,o.kt)("inlineCode",{parentName:"li"},'"leetcode"'),"."),(0,o.kt)("li",{parentName:"ul"},"Only the first letter in this word is capital, like ",(0,o.kt)("inlineCode",{parentName:"li"},'"Google"'),".")),(0,o.kt)("p",null,"Given a string ",(0,o.kt)("inlineCode",{parentName:"p"},"word"),", return ",(0,o.kt)("inlineCode",{parentName:"p"},"true")," if the usage of capitals in it is right."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Example 1:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'Input: word = "USA"\nOutput: true\n')),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Example 2:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'Input: word = "FlaG"\nOutput: false\n')),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Constraints:")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"1 <= word.length <= 100")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"word")," consists of lowercase and uppercase English letters.")),(0,o.kt)("h2",{id:"approach-1-one-pass"},"Approach 1: One Pass"),(0,o.kt)("p",null,"Just check if it is invalid the conditions. If so, return false immediately."),(0,o.kt)(m,{mdxType:"Tabs"},(0,o.kt)(f,{value:"cpp",label:"C++",mdxType:"TabItem"},(0,o.kt)(h,{name:"@wingkwong",mdxType:"SolutionAuthor"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    bool detectCapitalUse(string word) {\n        for(int i = 1; i < word.size(); i++){\n            if(isupper(word[1]) != isupper(word[i]) || \n               islower(word[0]) && isupper(word[i])) return false;\n        }        \n        return true;\n    }\n};\n")))),(0,o.kt)("h2",{id:"approach-2-case-by-case"},"Approach 2: Case By Case"),(0,o.kt)("p",null,"Count the number of characters with upper case and try those 3 cases."),(0,o.kt)(m,{mdxType:"Tabs"},(0,o.kt)(f,{value:"cpp",label:"C++",mdxType:"TabItem"},(0,o.kt)(h,{name:"@wingkwong",mdxType:"SolutionAuthor"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},'class Solution {\npublic:\n    bool detectCapitalUse(string word) {\n        int upper = 0;\n        // count number of characters with upper case\n        for (auto x : word) upper += isupper(x) ? 1 : 0;\n            // case 1: All letters in this word are capitals, like "USA".\n        return upper == word.size() ||\n            // case 2: All letters in this word are not capitals, like "leetcode".\n               upper == 0 ||\n            // case 3: Only the first letter in this word is capital, like "Google".\n               (upper == 1 && isupper(word.front()));\n    }\n};\n')))))}y.isMDXComponent=!0}}]);